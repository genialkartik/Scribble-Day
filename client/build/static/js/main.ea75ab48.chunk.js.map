{"version":3,"sources":["assets/malefront.png","assets/maleback.png","components/homepage/shareCard.js","components/dimension.js","components/useGetPosition.js","components/useOutsideCatcher.js","components/includes/superHeader.js","components/includes/footer.js","components/homepage/home.js","components/templates/about/about.js","components/templates/faq/faq.js","components/templates/resources/resources.js","App.js","serviceWorker.js","index.js","assets/announcement.png"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","paddingInline","paddingBlock","backgroundColor","color","avatar","red","ShareCard","props","classes","useState","openSnackbar","setOpenSnackbar","msgSnackbar","setMsgSnackbar","shareText","Card","className","userdata","CardHeader","Avatar","aria-label","src","action","IconButton","onClick","navigator","clipboard","writeText","setTimeout","style","title","Typography","gutterBottom","variant","name","textAlign","CardContent","border","marginBlock","borderRadius","component","CardActions","disableSpacing","Button","window","open","target","rel","href","width","height","overflow","scrolling","frameborder","allowfullscreen","allow","data-action","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","getFontSize","fontsize","parseFloat","slice","newSize","useOutsideAlerter","ref","isIn","setIn","handleClickOutside","event","current","contains","document","SuperHeader","Container","fluid","Row","Col","announcement","alt","Footer","class","id","blue","formControl","margin","spacing","minWidth","borderColor","selectEmpty","marginTop","resultOfUlist","top","position","zIndex","background","maxHeight","overflowY","resultListItem","padding","borderBottom","cursor","ValueLabelComponent","children","value","Tooltip","enterTouchDelay","placement","Home","searchUniversityRef","useRef","searchFriendRef","isSearchUniversityFocused","isSearchFriendFocused","imageRef","React","createRef","imageRefWidth","setImageRefWidth","setImageRefHeight","messageRef","imageWrap","useScreenshot","image","takeScreenshot","windowWidth","duniversityList","setDUniversityList","dfriendList","setDFriendList","universityList","setUniversityList","friendList","setFriendList","searchFilterFunction","text","data","setData","filter","item","itemData","toUpperCase","textData","indexOf","isFriendFocus","setFriendFocus","isUlistFocus","setUlistFocus","scribbleList","setScribbleList","setUserData","friendData","setFriendData","setMessage","messageColor","setMessageColor","rotateValue","setRotateValue","dragBool","setDragBool","messageFont","setMessageFont","fontFam","setFontFam","tshirtSide","setTshirtSide","isFixed","setIsFixed","dimensions","setDimensions","openInviteDialog","setInviteDialog","openDownloadDialog","setDownloadDialog","downloadInput","setDownloadInput","insertVerifyCode","setInsertVerifyCode","university","setUniversity","universityLogo","setUniversityLogo","enterFriendName","setEnterFriendName","friendLogo","setFriendLogo","landingPageBool","setLandingPageBool","userDetailsBool","setUserDetailsBool","enterEmailBool","setEnterEmailBool","loadingBool","setLoadingBool","loadingFor","setLoadingFor","downloadClicked","setDownloadClicked","askedForSendVerificationCode","setAskedForSendVerificationCode","enterPinOrCodeBool","setEnterPinOrCodeBool","signupFormBool","setSignUpformBool","newUniversityBool","setNewUniversityBool","inputEmail","setInputEmail","pinCodeToVerify","setPinCodeToVerify","codeToCheck","setCodeToCheck","signupFormInputs","setSignupFormInputs","activateLoadingIn","setActivateLoadingIn","newUnivesityName","setNewUniversityName","newUnivesityLogo","setNewUniversityLogo","newUniversityOnSuccess","setNewUniversityOnSuccess","setAvatar","getBoundingClientRect","userId","useParams","a","axios","post","resp","found","res","logo","friendUserId","friendName","friendAvatar","scribbles","respMessage","get","instituteList","length","handleFixClick","rootDimensions","selfDimensions","rootWidth","rootHeight","rootX","x","rootY","y","selfX","selfY","xHelperConstant","yHelperConstant","left","GetPosition","download","imageUrl","console","log","url","link","createElement","setAttribute","body","appendChild","click","handleInputChange","e","handleMyScribbleClick","scribbleResp","universityResp","handleSendScribbleForm","angle","colorCode","fontStyle","fontSize","side","scribbled","location","reload","handleSendVerificationCode","alert","email","sent","handleVerifyPin","pin","loggedIn","handleVerifyCode","checkUserAccountWithEmail","profile","handleSubmitSignupForm","formData","FormData","set","JSON","stringify","signUp","handleInviteOpen","handleDownloadOpen","handleDownloadClose","handleNewUniversityForm","added","institute","handleSearchForStudents","uni","friendsList","InviteFriend","onClose","Dialog","aria-labelledby","DownloadForm","selectedValue","display","flexDirection","CircularProgress","marginInline","Image","float","ButtonGroup","disableElevation","disabled","clear","setInterval","clearInterval","size","startIcon","loggedout","Form","Control","type","placeholder","maxLength","onFocus","onBlur","onChange","required","map","uObj","marginLeft","col-12","col-sm-8","col-md-9","multiple","as","Slider","min","max","newValue","FormControl","InputLabel","outlined","Select","labelId","label","MenuItem","fontFamily","confirm","scribble","key","_id","sendByAvatar","sendByName","subheader","Input","startAdornment","InputAdornment","endAdornment","FormLabel","RadioGroup","gender","FormControlLabel","control","Radio","accept","hidden","files","for","alignItems","marginBottom","transform","require","rotate","bounds","onStart","About","Faq","role","data-dismiss","aria-hidden","data-toggle","data-parent","Resources","Theme","createMuiTheme","palette","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ea75ab48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/malefront.3b15893e.png\";","module.exports = __webpack_public_path__ + \"static/media/maleback.5520076a.png\";","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    paddingInline: \"5%\",\n    paddingBlock: \"3%\",\n    backgroundColor: \"#073e6d\",\n    color: \"#fff\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function ShareCard(props) {\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [msgSnackbar, setMsgSnackbar] = useState(\"\");\n  const [shareText, setShareText] = useState(\n    \"Hey dear friend, Lets Celebrate Scribble Day 2021 virtullay together | Write a Scribble Message for me || www.thirsty-goldwasser-7273c9.netlify.app/\"\n  );\n\n  return (\n    <Card className={classes.root}>\n      {props.userdata ? (\n        <CardHeader\n          avatar={\n            <Avatar\n              aria-label=\"recipe\"\n              className={classes.avatar}\n              src={props.userdata.avatar}\n            ></Avatar>\n          }\n          action={\n            <IconButton\n              aria-label=\"settings\"\n              onClick={() => {\n                navigator.clipboard.writeText(shareText);\n                setOpenSnackbar(true);\n                setMsgSnackbar(\"Copied\");\n                setTimeout(() => setOpenSnackbar(false), 1000);\n              }}\n            >\n              <FileCopyIcon style={{ color: \"#fff\" }} />\n            </IconButton>\n          }\n          title={\n            <Typography gutterBottom variant=\"h5\">\n              {props.userdata.name}\n            </Typography>\n          }\n        />\n      ) : (\n        <Typography gutterBottom variant=\"h5\" style={{ textAlign: \"center\" }}>\n          Virtual Scribble Day 2021\n        </Typography>\n      )}\n      <CardContent\n        style={{\n          border: \"1px solid  rgb(233, 233, 223, 0.2)\",\n          marginBlock: 10,\n          borderRadius: 6,\n        }}\n      >\n        <Typography variant=\"body2\" component=\"p\">\n          {shareText}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <div className=\"part socials\">\n          {!props.userdata && (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={() => {\n                navigator.clipboard.writeText(shareText);\n                setOpenSnackbar(true);\n                setMsgSnackbar(\"Copied\");\n                setTimeout(() => setOpenSnackbar(false), 1000);\n              }}\n            >\n              <span className={\"fa fa-copy\"}></span>\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            style={{ backgroundColor: \"#8A374A\", color: \"#fff\" }}\n            onClick={() => {\n              navigator.clipboard.writeText(shareText);\n              setOpenSnackbar(true);\n              setMsgSnackbar(\"Copied\");\n              setTimeout(() => {\n                setOpenSnackbar(false);\n                window.open(\"https://www.instagram.com/\");\n              }, 1000);\n            }}\n          >\n            <span className={\"fa fa-instagram\"}></span>\n          </Button>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/shareArticle?url=www.thirsty-goldwasser-7273c9.netlify.app/%20&title=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#2E73AD\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-linkedin\"}></span>\n            </Button>\n          </a>\n          <iframe\n            src=\"https://www.facebook.com/plugins/share_button.php?href=https%3A%2F%2Fscribbleday.herokuapp.com%2F&layout=button&size=large&width=77&height=28&appId\"\n            width=\"77\"\n            height=\"28\"\n            style={{ border: \"none\", overflow: \"hidden\" }}\n            scrolling=\"no\"\n            frameborder=\"0\"\n            allowfullscreen=\"true\"\n            allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\"\n          ></iframe>\n          <Button\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"#4095ED\",\n              color: \"#fff\",\n            }}\n            onClick={() => {\n              window.open(\n                \"https://www.facebook.com/sharer/sharer.php?u=https%3A//thirsty-goldwasser-7273c9.netlify.app\"\n              );\n              return false;\n            }}\n          >\n            <span className={\"fa fa-facebook\"}></span>\n          </Button>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/intent/tweet?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%0A%0A%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%0A%0AWrite%20a%20Scribble%20for%20me%20%0A%0Awww.thirsty-goldwasser-7273c9.netlify.app/%20%0A%0A%23scribbleday2021%20\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#05ABFF\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-twitter\"}></span>\n            </Button>\n          </a>\n          <a\n            href=\"whatsapp.com://send?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20%20%20https%3A//thirsty-goldwasser-7273c9.netlify.app/%20%20%20#scribbleday2021%20%20\"\n            // href=\"https://web.whatsapp.com/send?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20%20%20https%3A//thirsty-goldwasser-7273c9.netlify.app/%20%20%20#scribbleday2021%20%20\"\n            data-action=\"share/whatsapp/share\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#0DC143\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-whatsapp\"}></span>\n            </Button>\n          </a>\n        </div>\n      </CardActions>\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        autoHideDuration={1000}\n        message={msgSnackbar}\n      />\n    </Card>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import { useEffect, useState } from 'react';\nimport useWindowDimensions from './dimension';\n\nexport function getFontSize(fontsize, width){\n  if(typeof(fontsize)==='string'){\n    fontsize = parseFloat(fontsize.slice(0,-2))*16;\n  }\n  const getWidthPercen = ((100*width)/616);\n  const newSize = ((fontsize*getWidthPercen)/100);\n  if(newSize>fontsize){\n    return fontsize;\n  }else{\n    return newSize;\n  }\n}\n\nexport function getConstantLeft(xHelperConstant, width){\n  return ((0.0001864*width)+xHelperConstant);\n} \n\nexport function getLeft(xHelperConstant, width){\n  return (width*getConstantLeft(xHelperConstant,width));\n}\n\nexport function getConstantTop(yHelperConstant, height){\n  return ((0.0002864*height)+yHelperConstant);\n}\n\nexport function getTop(yHelperConstant, height){\n  return (height*getConstantTop(yHelperConstant,height));\n}\n\nexport default function useGetPosition(rootRef, selfRef){\n\n  const { width: windowWidth } = useWindowDimensions();\n  const [rootDimensions, setRootDimensions] = useState(null);\n  const [selfDimensions, setSelfDimensions] = useState(null);\n\n  useEffect(()=>{\n    setRootDimensions(rootRef.current.getBoundingClientRect());\n    setSelfDimensions(selfRef.current.getBoundingClientRect());\n  },[windowWidth])\n\n  function getXHelperConstant(){\n    const rootWidth = rootDimensions ? rootDimensions.width : 0 ;\n    const rootX = rootDimensions ? rootDimensions.x : 0;\n    const selfX = selfDimensions ? selfDimensions.x : 0;\n    return (((selfX - rootX)/rootWidth)-(0.0001864*rootWidth));\n  }\n\n  function getYHelperConstant(){\n    const rootHeight = rootDimensions ? rootDimensions.height : 0;\n    const rootY = rootDimensions ? rootDimensions.y : 0;\n    const selfY = selfDimensions ? selfDimensions.y : 0;\n    return (((selfY - rootY)/rootHeight)-(0.0002864*rootHeight));\n  }\n\n  function getValue(rootStart, selfStart, rootDim){\n    return ((100/rootDim)*(selfStart - rootStart));\n  }\n\n  return {\n    xHelperConstant: getXHelperConstant(), yHelperConstant: getYHelperConstant(),\n    left: getValue(rootDimensions.x, selfDimensions.x, rootDimensions.width)\n  }\n\n}","import { useEffect, useState } from 'react';\n\nexport default function useOutsideAlerter(ref) {\n  const [isIn, setIn] = useState(null);\n  useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n              setIn(false);\n          }else{\n          setIn(true);\n          }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          // Unbind the event listener on clean up\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n  return isIn;\n}","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport announcement from \"../../assets/announcement.png\";\n\nexport default function SuperHeader() {\n  return (\n    <div>\n      <Container fluid className={\"nav center\"}>\n        <Row className={\"container text-center\"}>\n          <Col>\n            <img src={announcement} height=\"40px\" alt=\"announcement\" />{\" \"}\n            &nbsp;Make your virtual Scribble Day more exciting by\n            <a\n              href={\"https://rzp.io/l/Up18AjAWH\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              Placing ORDER of your SCRRIBLE TSHIRT\n            </a>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Footer() {\n  return (\n    <div>\n      <footer className=\"footer-cont pb-5\">\n        <div class=\"row bottom-part\">\n          <div class=\"d-lg-flex justify-content-between bd-highlight col-md-12 mb-5 px-5\">\n            <div class=\"p-2 align-self-center flex-fill bd-highlight\">\n              <div class=\"fa fa-facebook px-2\"></div>\n              <div class=\"fa fa-linkedin px-2\"></div>\n              <div class=\"fa fa-twitter px-2\"></div>\n              <div class=\"fa fa-instagram px-2\"></div>\n            </div>\n            <div class=\"p-2 row flex-fill bd-highlight justify-content-left\">\n              <div class=\"p-2 d-lg-flex\">\n                <a href=\"/resources\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">Resources</div>\n                </a>\n                <a href=\"/faq\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">Faq</div>\n                </a>\n                <a href=\"/about\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">About</div>\n                </a>\n                <a href=\"https://ethicallearner.com/tnc\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">Terms</div>\n                </a>\n                <a href=\"https://ethicallearner.com/privacy\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">Privacy</div>\n                </a>\n              </div>\n            </div>\n            <div class=\"p-2 align-self-center flex-fill bd-highlight\">\n              <div class=\"fa fa-mobile px-2 grey-text\">\n                &nbsp;&nbsp;<span id=\"contact\">888-777-666</span>\n              </div>\n              <div class=\"fa fa-envelope-o px-2 grey-text\">\n                &nbsp;&nbsp;info@itcraft.in\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Draggable from \"react-draggable\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Input from \"@material-ui/core/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { Form, Image } from \"react-bootstrap\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport ShareCard from \"./shareCard.js\";\nimport { getFontSize } from \"../useGetPosition\";\nimport useWindowDimensions from \"../dimension\";\nimport { useScreenshot } from \"use-screenshot-hook\";\nimport useOutsideAlerter from \"../useOutsideCatcher\";\nimport \"./home.css\";\nimport SuperHeader from \"../includes/superHeader\";\nimport Footer from \"../includes/footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    color: \"#fff\",\n    borderColor: \"#fff\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  resultOfUlist: {\n    top: 61,\n    position: \"absolute\",\n    zIndex: 1,\n    background: \"#fff\",\n    color: \"#000\",\n    width: \"100%\",\n    maxHeight: 160,\n    overflow: \"hidden\",\n    overflowY: \"auto\",\n  },\n  resultListItem: {\n    padding: \"6px 12px\",\n    borderBottom: \"1px solid #ccc\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#bbb\",\n    },\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction Home() {\n  // refs for checking focused or blured inputs\n  const searchUniversityRef = useRef(null);\n  const searchFriendRef = useRef(null);\n  const isSearchUniversityFocused = useOutsideAlerter(searchUniversityRef);\n  const isSearchFriendFocused = useOutsideAlerter(searchFriendRef);\n\n  const classes = useStyles();\n  const imageRef = React.createRef(null);\n  const [imageRefWidth, setImageRefWidth] = useState(0);\n  const [imageRefHeight, setImageRefHeight] = useState(0);\n  const messageRef = React.createRef(null);\n  const imageWrap = useRef(null);\n  const { image, takeScreenshot } = useScreenshot({ ref: imageWrap });\n  const { width: windowWidth } = useWindowDimensions();\n\n  const handleFontChange = (event) => {\n    setFontFam(event.target.value);\n  };\n  const [duniversityList, setDUniversityList] = useState([]);\n  const [dfriendList, setDFriendList] = useState([]);\n  const [universityList, setUniversityList] = useState([]);\n  const [friendList, setFriendList] = useState([]);\n  const searchFilterFunction = (text, data, setData) => {\n    // Check if searched text is not blank\n    if (text) {\n      // Inserted text is not blank\n      // Filter the masterDataSource\n      // Update FilteredDataSource\n      const newData = data.filter(function (item) {\n        const itemData = item.name ? item.name.toUpperCase() : \"\".toUpperCase();\n        const textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setData(newData);\n    } else {\n      // Inserted text is blank\n      // Update FilteredDataSource with masterDataSource\n      setData(data);\n    }\n  };\n  const [isFriendFocus, setFriendFocus] = useState(false);\n  const [isUlistFocus, setUlistFocus] = useState(false);\n  const [scribbleList, setScribbleList] = useState([]);\n  const [userdata, setUserData] = useState(null);\n  const [friendData, setFriendData] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [messageColor, setMessageColor] = useState(\"#000000\");\n  const [rotateValue, setRotateValue] = useState(0);\n  const [dragBool, setDragBool] = useState(false);\n  const [messageFont, setMessageFont] = useState(\".8em\");\n  const [fontFam, setFontFam] = useState(\"Jazz LET, fantasy\");\n\n  const [tshirtSide, setTshirtSide] = useState(\"front\");\n  const [isFixed, setIsFixed] = useState(false);\n  const [dimensions, setDimensions] = useState({});\n\n  const [openInviteDialog, setInviteDialog] = useState(false);\n  const [openDownloadDialog, setDownloadDialog] = useState(false);\n  const [downloadInput, setDownloadInput] = useState();\n  const [insertVerifyCode, setInsertVerifyCode] = useState(false);\n  const [university, setUniversity] = useState(\"\");\n  const [universityLogo, setUniversityLogo] = useState();\n  const [enterFriendName, setEnterFriendName] = useState(\"\");\n  const [friendLogo, setFriendLogo] = useState();\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [msgSnackbar, setMsgSnackbar] = useState(\"\");\n  const [landingPageBool, setLandingPageBool] = useState(true);\n  const [userDetailsBool, setUserDetailsBool] = useState(false);\n  const [enterEmailBool, setEnterEmailBool] = useState(false);\n  const [loadingBool, setLoadingBool] = useState(false);\n  const [loadingFor, setLoadingFor] = useState(\"\");\n  const [downloadClicked, setDownloadClicked] = useState(false);\n  const [\n    askedForSendVerificationCode,\n    setAskedForSendVerificationCode,\n  ] = useState(false);\n  const [enterPinOrCodeBool, setEnterPinOrCodeBool] = useState(\"pin\");\n  const [signupFormBool, setSignUpformBool] = useState(false);\n  const [newUniversityBool, setNewUniversityBool] = useState(false);\n\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [pinCodeToVerify, setPinCodeToVerify] = useState(\"\");\n  const [codeToCheck, setCodeToCheck] = useState(\"\");\n  const [signupFormInputs, setSignupFormInputs] = useState({});\n  const [activateLoadingIn, setActivateLoadingIn] = useState(\"\");\n  const [newUnivesityName, setNewUniversityName] = useState(\"\");\n  const [newUnivesityLogo, setNewUniversityLogo] = useState();\n  const [newUniversityOnSuccess, setNewUniversityOnSuccess] = useState(\n    \"signup\"\n  );\n  const [avatar, setAvatar] = useState();\n\n  useEffect(() => {\n    setImageRefWidth(imageRef.current.getBoundingClientRect().width);\n    setImageRefHeight(imageRef.current.getBoundingClientRect().height);\n  }, [imageRef, imageRef.current, windowWidth]);\n\n  const { userId } = useParams();\n\n  useEffect(() => {\n    // let search = window.location.search;\n    // let params = new URLSearchParams(search);\n    // const userId = params.get(\"id\");\n    if (userId) {\n      (async () => {\n        const resp = await axios.post(\"/friend/param\", {\n          userId: userId,\n        });\n        if (resp.data && resp.data.found) {\n          const res = resp.data;\n          setUniversity(res.university.name);\n          setUniversityLogo(res.university.logo);\n          setEnterFriendName(res.friendData.name);\n          setFriendLogo(res.friendData.avatar);\n          setFriendData({\n            friendUserId: res.friendData.userId,\n            friendName: res.friendData.name,\n            friendAvatar: res.friendData.avatar,\n          });\n          setScribbleList(res.scribbles);\n        } else {\n          setOpenSnackbar(true);\n          setMsgSnackbar(resp.data.respMessage);\n          setTimeout(() => setOpenSnackbar(false), 3000);\n        }\n      })();\n    }\n\n    (async () => {\n      const resp = await axios.get(\"/check/session\");\n      if (resp.data && resp.data.userdata) {\n        setUserData(resp.data.userdata);\n      }\n    })();\n\n    // fecth university list\n    (async () => {\n      const resp = await axios.get(\"/institute/list\");\n      if (resp.data && resp.data.instituteList) {\n        setUniversityList(\n          resp.data.instituteList.length > 0 ? resp.data.instituteList : []\n        );\n        setDUniversityList(\n          resp.data.instituteList.length > 0 ? resp.data.instituteList : []\n        );\n      }\n    })();\n  }, [landingPageBool]);\n\n  const handleFixClick = () => {\n    if (!friendData) {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\n        \"Please Select a Friend and must write a Scribble message\"\n      );\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      // setDimensions(getPositions);\n      setDimensions(\n        GetPosition(\n          imageRef.current.getBoundingClientRect(),\n          messageRef.current.getBoundingClientRect()\n        )\n      );\n      // console.log(getPositions);\n      // setDimensions(messageRef.current.getBoundingClientRect());\n      // console.log(useGetPosition(getImgWrapperDimensions, getMsgDimensions));\n      setDragBool(true);\n      setIsFixed(true);\n    }\n  };\n\n  function GetPosition(rootDimensions, selfDimensions) {\n    const rootWidth = rootDimensions.width;\n    const rootHeight = rootDimensions.height;\n    const rootX = rootDimensions.x;\n    const rootY = rootDimensions.y;\n    const selfWidth = selfDimensions.width;\n    const selfX = selfDimensions.x;\n    const selfY = selfDimensions.y;\n\n    const xHelperConstant = (selfX - rootX) / rootWidth - 0.0001864 * rootWidth;\n    const yHelperConstant = (selfY - rootY) / rootWidth - 0.0002864 * rootWidth;\n    const left = (100 / rootWidth) * (selfX - rootX) + 3;\n    const top = (100 / rootHeight) * (selfY - rootY);\n\n    return {\n      xHelperConstant,\n      yHelperConstant,\n      left,\n      top,\n    };\n  }\n\n  const download = (imageUrl) => {\n    console.log(imageUrl);\n    if (imageUrl) {\n      const url = imageUrl;\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"scribble.png\"); //or any other extension\n      document.body.appendChild(link);\n      link.click();\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setSignupFormInputs({\n      ...signupFormInputs,\n      [name]: value,\n    });\n  };\n\n  const handleMyScribbleClick = async () => {\n    setLandingPageBool(false);\n    setEnterFriendName(\"\");\n    if (userdata) {\n      setLoadingBool(true);\n      setUserDetailsBool(true);\n      const scribbleResp = await axios.get(\"/get/scribbles\");\n      if (scribbleResp.data) {\n        setScribbleList(scribbleResp.data.scribbleList);\n      }\n      setLoadingBool(false);\n      const universityResp = await axios.post(\"/university/detail\", {\n        university: userdata.university,\n      });\n      if (universityResp.data) {\n        setUniversityLogo(universityResp.data.university.logo);\n      }\n    } else {\n      setEnterEmailBool(true);\n    }\n  };\n\n  const handleSendScribbleForm = async () => {\n    if (userdata) {\n      if (friendData && message && dimensions) {\n        setLoadingBool(true);\n        // save scribble message to db\n        if (friendData.friendName === userdata.name) {\n          setUserDetailsBool(false);\n          setEnterEmailBool(false);\n          setAskedForSendVerificationCode(false);\n          setLandingPageBool(true);\n          setSignUpformBool(false);\n          setNewUniversityBool(false);\n          setEnterPinOrCodeBool(false);\n          setScribbleList([]);\n          setInsertVerifyCode(false);\n          setFriendFocus(false);\n          setUlistFocus(false);\n          setFriendData({});\n          setEnterFriendName(\"\");\n          setFriendLogo();\n          setUniversityLogo();\n          setUniversity(\"\");\n          setMessage(\"\");\n          setOpenSnackbar(true);\n          setMsgSnackbar(\"You cannot send scribble message to yourself\");\n          setTimeout(() => setOpenSnackbar(false), 3000);\n        } else {\n          const resp = await axios.post(\"/save/scribble\", {\n            friendUserId: friendData.friendUserId,\n            friendName: friendData.friendName,\n            friendAvatar: friendData.friendAvatar,\n            dimensions,\n            message,\n            angle: rotateValue,\n            colorCode: messageColor,\n            fontStyle: fontFam,\n            fontSize: messageFont,\n            side: tshirtSide,\n          });\n          setLoadingBool(false);\n          setOpenSnackbar(true);\n          setTimeout(() => setOpenSnackbar(false), 1000);\n          if (resp.data && resp.data.scribbled) {\n            setMsgSnackbar(\"Send Scribble Successfully\");\n          } else {\n            setMsgSnackbar(\"Something went wrong\");\n            setTimeout(() => window.location.reload(), 3000);\n          }\n        }\n      } else {\n        setOpenSnackbar(true);\n        setMsgSnackbar(\"Enter all inputs\");\n        setTimeout(() => setOpenSnackbar(false), 3000);\n      }\n    } else {\n      setLandingPageBool(false);\n      setEnterEmailBool(true);\n    }\n  };\n\n  const handleSendVerificationCode = async () => {\n    if (!inputEmail) alert(\"Insert Email\");\n    else {\n      setActivateLoadingIn(\"send-verification-code\");\n      const resp = await axios.post(\"/email/verify\", {\n        email: inputEmail,\n      });\n      setActivateLoadingIn(\"\");\n      if (resp.data.sent) {\n        setAskedForSendVerificationCode(false);\n        setInsertVerifyCode(true);\n        setEnterPinOrCodeBool(\"code\");\n        setCodeToCheck(resp.data.codeToCheck);\n      } else {\n        alert(resp.data.respMessage);\n      }\n    }\n  };\n\n  const handleVerifyPin = async () => {\n    if (!pinCodeToVerify) alert(\"Insert PIN to verify\");\n    else if (!inputEmail) alert(\"Insert Email first\");\n    else {\n      const resp = await axios.post(\"/login\", {\n        email: inputEmail,\n        pin: pinCodeToVerify,\n      });\n      if (resp.data.loggedIn) {\n        setLandingPageBool(true);\n        setInsertVerifyCode(false);\n        setEnterPinOrCodeBool(\"pin\");\n        setUserData(resp.data.userdata ? resp.data.userdata : null);\n      } else {\n        alert(resp.data.respMessage);\n      }\n    }\n  };\n\n  const handleVerifyCode = async () => {\n    if (!pinCodeToVerify) alert(\"Insert Code to verify\");\n    else if (!inputEmail) alert(\"Insert Email first\");\n    else {\n      if (codeToCheck == pinCodeToVerify) {\n        setInsertVerifyCode(false);\n        setEnterPinOrCodeBool(\"\");\n        setSignUpformBool(true);\n        setPinCodeToVerify(\"\");\n      } else {\n        alert(\"Code not Match\");\n      }\n    }\n  };\n\n  const checkUserAccountWithEmail = async () => {\n    if (!inputEmail) alert(\"Insert Email\");\n    else {\n      const resp = await axios.post(\"/profile\", {\n        inputEmail,\n      });\n      const res = resp.data;\n      setEnterEmailBool(false);\n      if (!res.profile) {\n        setAskedForSendVerificationCode(true);\n      } else {\n        setInsertVerifyCode(true);\n        setEnterPinOrCodeBool(\"pin\");\n      }\n    }\n  };\n\n  const handleSubmitSignupForm = async () => {\n    if (signupFormInputs === {} || signupFormInputs.university === \"other\") {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\"Enter all Inputs\");\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      setLoadingBool(true);\n      let formData = new FormData();\n      formData.set(\"formInput\", JSON.stringify(signupFormInputs));\n      formData.set(\"avatar\", avatar);\n      formData.set(\"email\", inputEmail);\n      const resp = await axios.post(\"/create\", formData);\n      setLoadingBool(false);\n      setOpenSnackbar(true);\n      setMsgSnackbar(resp.data.respMessage);\n      setTimeout(() => setOpenSnackbar(false), 3000);\n      if (resp.data.signUp) {\n        setSignUpformBool(false);\n        setLandingPageBool(true);\n      }\n    }\n  };\n\n  const handleRotateChange = (event, newValue) => {\n    setRotateValue(newValue);\n  };\n\n  const handleInviteOpen = () => {\n    setInviteDialog(true);\n  };\n\n  const handleInviteClose = (value) => {\n    setInviteDialog(false);\n  };\n\n  const handleDownloadOpen = () => {\n    setDownloadDialog(true);\n  };\n\n  const handleDownloadClose = (value) => {\n    setDownloadDialog(false);\n    setDownloadInput(value);\n  };\n\n  const handleNewUniversityForm = async () => {\n    if (!newUnivesityName || !newUnivesityLogo) {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\"Fill all required Inputs\");\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      setLoadingBool(true);\n      const formData = new FormData();\n      formData.set(\"name\", newUnivesityName);\n      formData.set(\"logo\", newUnivesityLogo);\n      const resp = await axios.post(\"/institute/add\", formData);\n      setLoadingBool(false);\n      setOpenSnackbar(true);\n      setTimeout(() => setOpenSnackbar(false), 3000);\n      setMsgSnackbar(resp.data.respMessage);\n      if (resp.data.added && resp.data.institute) {\n        setUniversityList((instituteList) => [\n          ...instituteList,\n          resp.data.institute,\n        ]);\n        if (newUniversityOnSuccess === \"signup\") {\n          setSignUpformBool(true);\n        } else {\n          setLandingPageBool(true);\n        }\n        setNewUniversityBool(false);\n      }\n    }\n  };\n\n  const handleSearchForStudents = async (uni) => {\n    setScribbleList([]);\n    const resp = await axios.post(\"/friends/list\", {\n      university: uni,\n    });\n    if (resp.data && resp.data.friendsList) {\n      setFriendList(\n        resp.data.friendsList.length > 0 ? resp.data.friendsList : []\n      );\n      setDFriendList(\n        resp.data.friendsList.length > 0 ? resp.data.friendsList : []\n      );\n    }\n  };\n\n  const handleOnDragStart = () => {\n    // set\n  };\n\n  function InviteFriend(props) {\n    const { onClose, open } = props;\n    const handleClose = () => {\n      onClose();\n    };\n\n    return (\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        <ShareCard userdata={userdata ? userdata : null} />\n      </Dialog>\n    );\n  }\n\n  InviteFriend.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n  };\n  function DownloadForm(props) {\n    const { onClose, selectedValue, open, image } = props;\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n\n    return (\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        <div style={{ padding: 12, display: \"flex\", flexDirection: \"column\" }}>\n          {image ? (\n            <img src={image} alt=\"Scribble Preview\" />\n          ) : (\n            <CircularProgress style={{ margin: \"9px auto\" }} />\n          )}\n          <Button\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"#0A0\",\n              marginInline: 10,\n              color: \"#fff\",\n            }}\n          >\n            <span className={\"fa fa-download\"}></span>\n            Download\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n\n  DownloadForm.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n  };\n\n  return (\n    <div className={\"appbody\"}>\n      <SuperHeader />\n\n      <div className={\"main\"}>\n        <div className={\"center scribble-imgbox\"}>\n          <div className=\"row\" style={{ width: \"100%\" }}>\n            <div className={\"column\"}></div>\n            <div className={\"column\"}>\n              <div>\n                <Image\n                  src={\n                    \"https://scribble2021.s3.ap-south-1.amazonaws.com/ScribbleDayLogo2021.png\"\n                  }\n                  height=\"200px\"\n                  alt=\"logo\"\n                />\n              </div>\n            </div>\n            <div className={\"column\"}>\n              <div\n                className=\"details-of-site\"\n                style={{ marginTop: \"50px\", float: \"left\" }}\n              >\n                <div className=\"part\">\n                  <ButtonGroup\n                    disableElevation\n                    aria-label=\"contained\"\n                    disabled={isFixed ? true : false}\n                  >\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setTshirtSide(\"front\");\n                      }}\n                    >\n                      Front\n                    </Button>\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setTshirtSide(\"back\");\n                      }}\n                    >\n                      Back\n                    </Button>\n                  </ButtonGroup>\n                </div>\n                <div className=\"part d-sm-none\">\n                  <ButtonGroup disableElevation variant=\"contained\">\n                    <Button href=\"#formboxbysend\" color=\"primary\">\n                      Send Scribble\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </div>\n\n              <div\n                style={{ textAlign: \"center\" }}\n                className=\"d-none d-sm-block\"\n              >\n                {userdata && userDetailsBool && (\n                  <>\n                    <Button\n                      onClick={async () => {\n                        setDownloadClicked(!downloadClicked);\n                        if (!downloadClicked) {\n                          setLoadingFor(\"downloadTshirt\");\n                          await takeScreenshot();\n                          setTimeout(() => setLoadingFor(\"\"), 1000);\n                        } else {\n                          setLoadingFor(\"downloadTshirt\");\n                          await takeScreenshot();\n                          const clear = setInterval(async () => {\n                            if (true) {\n                              const imageBool = await download(image);\n                              if (imageBool) {\n                                setLoadingFor(\"\");\n                                clearInterval(clear);\n                              }\n                            }\n                          }, 3000);\n                        }\n                      }}\n                      style={{\n                        backgroundColor: \"#0A0\",\n                        marginInline: 10,\n                        color: \"#fff\",\n                      }}\n                    >\n                      {loadingFor === \"downloadTshirt\" ? (\n                        <CircularProgress\n                          size={20}\n                          style={{ color: \"white\" }}\n                        />\n                      ) : (\n                        <>\n                          <span className={\"fa fa-download\"}> </span>\n                          {downloadClicked ? \"Click to Download\" : \"Download\"}\n                        </>\n                      )}\n                    </Button>\n                    <DownloadForm\n                      insertVerifyCode={insertVerifyCode}\n                      selectedValue={downloadInput}\n                      open={openDownloadDialog}\n                      onClose={handleDownloadClose}\n                      image={image}\n                    />\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => handleDownloadOpen()}\n                      style={{\n                        backgroundColor: \"#05ABFF\",\n                        marginInline: 10,\n                        color: \"#fff\",\n                      }}\n                    >\n                      <span className={\"fa fa-user\"}></span>\n                      Preview\n                    </Button>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row mb-view\">\n          {/* LEFT COLUMN */}\n          <div className={\"column\"}>\n            <div className={\"row justify-content-center form1\"}>\n              <div className={\"col-12 col-sm-10 col-lg-8 d-flex flex-column\"}>\n                <div style={{ padding: \"1rem\" }}>\n                  <div className=\"navWrapper\">\n                    <div className={\"actions\"}>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                          window.location.reload();\n                        }}\n                      >\n                        <HomeIcon />\n                      </Button>\n                    </div>\n                    <a className={\"actions\"} href={\"/resources\"}>\n                      <Button variant=\"contained\">\n                        <InfoIcon />\n                      </Button>\n                    </a>\n                    <div className={\"actions\"}>\n                      <Button\n                        variant=\"contained\"\n                        onClick={handleMyScribbleClick}\n                        style={{ backgroundColor: \"#0A0\", color: \"#fff\" }}\n                        startIcon={\n                          userdata ? <PermIdentityIcon /> : <SecurityIcon />\n                        }\n                      >\n                        {userdata ? \"My Scribble\" : \"Sign In\"}\n                      </Button>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: 1,\n                      margin: \"12px 0 16px\",\n                      backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n                    }}\n                  />\n                  {userDetailsBool && userdata && (\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={async () => {\n                        const resp = await axios.get(\"/logout\");\n                        if (resp.data.loggedout) {\n                          setUserDetailsBool(false);\n                          setLandingPageBool(true);\n                          setUserData(null);\n                        } else {\n                          setOpenSnackbar(true);\n                          setMsgSnackbar(\"You're not logged in!\");\n                          setTimeout(() => setOpenSnackbar(false), 3000);\n                        }\n                      }}\n                      style={{\n                        backgroundColor: \"#1C3750\",\n                        color: \"rgba(255,255,255,.4)\",\n                        marginInline: 20,\n                      }}\n                    >\n                      <span>Logout</span>\n                    </Button>\n                  )}\n                </div>\n                <div\n                  className=\"formBox row align-items-center\"\n                  id=\"formboxbysend\"\n                >\n                  <hr />\n                  {landingPageBool && (\n                    <>\n                      <div className=\"col-12\"></div>\n                      <div className=\"formAvatarGroup col-12\">\n                        <div\n                          id=\"un\"\n                          style={{\n                            position: \"relative\",\n                            width: \"100%\",\n                            zIndex: 3,\n                          }}\n                          ref={searchUniversityRef}\n                        >\n                          <Typography\n                            gutterBottom\n                            style={{\n                              fontSize: \"0.8em\",\n                              color: \"#71E2F0\",\n                              cursor: \"pointer\",\n                              float: \"right\",\n                            }}\n                            onClick={() => {\n                              setNewUniversityBool(true);\n                              setLandingPageBool(false);\n                              setNewUniversityOnSuccess(\"landingPage\");\n                            }}\n                          >\n                            Didn't find University?\n                          </Typography>\n                          <Form.Control\n                            className={\" form\"}\n                            type=\"text\"\n                            placeholder=\"Search University\"\n                            name=\"message\"\n                            maxLength={250}\n                            value={university}\n                            onFocus={() => {\n                              setUlistFocus(true);\n                              setFriendFocus(false);\n                            }}\n                            onBlur={() => {\n                              if (!isSearchUniversityFocused) {\n                                setUlistFocus(false);\n                              }\n                            }}\n                            onChange={(e) => {\n                              setIsFixed(false);\n                              setDragBool(false);\n                              searchFilterFunction(\n                                e.target.value,\n                                duniversityList,\n                                setUniversityList\n                              );\n                            }}\n                            required\n                          />\n                          <div className={classes.resultOfUlist}>\n                            {isUlistFocus && (\n                              <>\n                                {universityList.length > 0 &&\n                                  universityList.map((uObj) => (\n                                    <div\n                                      className={classes.resultListItem}\n                                      onClick={() => {\n                                        setUniversity(uObj.name);\n                                        setUlistFocus(false);\n                                        setUniversityLogo(uObj.logo);\n                                        handleSearchForStudents(uObj.name);\n\n                                        // reset friend data\n\n                                        setFriendData({});\n                                        setEnterFriendName(\"\");\n                                        setFriendLogo();\n                                        setFriendFocus(false);\n                                      }}\n                                    >\n                                      {uObj.name}\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                        <Avatar\n                          style={{ marginLeft: 12 }}\n                          alt=\"U\"\n                          src={\n                            universityLogo\n                              ? universityLogo\n                              : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn0.iconfinder.com%2Fdata%2Ficons%2Fbuildings-1%2F128%2F29-512.png&f=1&nofb=1\"\n                          }\n                        />\n                      </div>\n\n                      <div className=\"col-12\">\n                        <InviteFriend\n                          open={openInviteDialog}\n                          onClose={handleInviteClose}\n                        />\n                      </div>\n                      <div className=\"formAvatarGroup col-12\">\n                        <div\n                          id=\"fd\"\n                          style={{\n                            position: \"relative\",\n                            width: \"100%\",\n                            zIndex: 2,\n                          }}\n                          ref={searchFriendRef}\n                        >\n                          <Typography\n                            gutterBottom\n                            style={{\n                              fontSize: \"0.8em\",\n                              color: \"#71E2F0\",\n                              cursor: \"pointer\",\n                              float: \"right\",\n                            }}\n                            onClick={handleInviteOpen}\n                          >\n                            Didn't find your Friend?\n                          </Typography>\n                          <Form.Control\n                            className={\" form\"}\n                            type=\"text\"\n                            placeholder=\"Search Friend\"\n                            name=\"friendname\"\n                            maxLength={250}\n                            col-12\n                            col-sm-8\n                            col-md-9\n                            value={enterFriendName}\n                            onFocus={() => {\n                              setFriendFocus(true);\n                              setUlistFocus(false);\n                            }}\n                            onBlur={() => {\n                              if (!isSearchFriendFocused) {\n                                setFriendFocus(false);\n                              }\n                            }}\n                            onChange={(e) => {\n                              searchFilterFunction(\n                                e.target.value,\n                                dfriendList,\n                                setFriendList\n                              );\n                            }}\n                            required\n                          />\n                          <div className={classes.resultOfUlist}>\n                            {isFriendFocus &&\n                              friendList.length > 0 &&\n                              friendList.map((uObj) => (\n                                <div\n                                  className={classes.resultListItem}\n                                  onClick={async () => {\n                                    setFriendData({\n                                      friendUserId: uObj.userId,\n                                      friendName: uObj.name,\n                                      friendAvatar: uObj.avatar,\n                                    });\n                                    setEnterFriendName(uObj.name);\n                                    setFriendLogo(uObj.avatar);\n                                    setFriendFocus(false);\n                                    // find user's scribble\n                                    const scribbleResp = await axios.post(\n                                      \"/friends/scribbles\",\n                                      {\n                                        userId: uObj.userId,\n                                      }\n                                    );\n                                    if (scribbleResp.data) {\n                                      setScribbleList(\n                                        scribbleResp.data.scribbleList\n                                      );\n                                    }\n                                  }}\n                                >\n                                  {uObj.name}\n                                </div>\n                              ))}\n                          </div>\n                        </div>\n                        <Avatar\n                          style={{ marginLeft: 12 }}\n                          alt=\"F\"\n                          src={\n                            friendLogo\n                              ? friendLogo\n                              : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.k6V8n31jhsNraAUlXqwNgQHaHa%26pid%3DApi&f=1\"\n                          }\n                        />\n                      </div>\n                      <Form.Control\n                        className={\"col-12 form\"}\n                        type=\"text\"\n                        placeholder=\"Scribble Message\"\n                        name=\"message\"\n                        maxLength={250}\n                        multiple={true}\n                        as=\"textarea\"\n                        onChange={(e) => setMessage(e.target.value)}\n                        required\n                      />\n\n                      <div className=\"fontWrapper\">\n                        <div\n                          className={\"info\"}\n                          onClick={() => handleFixClick()}\n                        >\n                          Font Size {\" >\"}\n                        </div>\n                        <div\n                          className={\"actions\"}\n                          onClick={() => setMessageFont(\".4em\")}\n                        >\n                          x-small\n                        </div>\n                        <div\n                          className={\"actions\"}\n                          onClick={() => setMessageFont(\".5em\")}\n                        >\n                          small\n                        </div>\n                        <div\n                          className={\"actions\"}\n                          onClick={() => setMessageFont(\".6em\")}\n                        >\n                          medium\n                        </div>\n                        <div\n                          className={\"actions\"}\n                          onClick={() => setMessageFont(\".7em\")}\n                        >\n                          large\n                        </div>\n                        <div\n                          className={\"actions\"}\n                          onClick={() => setMessageFont(\".8em\")}\n                        >\n                          x-large\n                        </div>\n                      </div>\n\n                      <div className=\"fontWrapper\">\n                        <div className=\"info\" onClick={() => handleFixClick()}>\n                          Rotate {\" >\"}\n                        </div>\n                        <Slider\n                          ValueLabelComponent={ValueLabelComponent}\n                          aria-label=\"custom thumb label\"\n                          value={rotateValue}\n                          min={-180}\n                          max={180}\n                          style={{ color: \"white\" }}\n                          onChange={handleRotateChange}\n                        />\n                      </div>\n                      <div className={\"fontWrapper\"}>\n                        <div>\n                          <FiberManualRecordIcon\n                            onClick={() => setMessageColor(\"#f00000\")}\n                            style={{ color: \"#f00000\" }}\n                          />\n                          <FiberManualRecordIcon\n                            onClick={() => setMessageColor(\"#07c603\")}\n                            style={{ color: \"#07c603\" }}\n                          />\n                          <FiberManualRecordIcon\n                            onClick={() => setMessageColor(\"#05abff\")}\n                            style={{ color: \"#05abff\" }}\n                          />\n                          <FiberManualRecordIcon\n                            onClick={() => setMessageColor(\"#ead300\")}\n                            style={{ color: \"#ead300\" }}\n                          />\n                          <FiberManualRecordIcon\n                            onClick={() => setMessageColor(\"#ff8300\")}\n                            style={{ color: \"#ff8300\" }}\n                          />\n                          <FiberManualRecordIcon\n                            onClick={() => setMessageColor(\"#9605ff\")}\n                            style={{ color: \"#9605ff\" }}\n                          />\n                          <FiberManualRecordIcon\n                            onClick={() => setMessageColor(\"#ff05fa\")}\n                            style={{ color: \"#ff05fa\" }}\n                          />\n                        </div>\n                      </div>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          padding: \"0 12px\",\n                        }}\n                      >\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <InputLabel\n                            color=\"primary\"\n                            classes={{\n                              outlined: { color: \"#fff\" },\n                            }}\n                            id=\"demo-simple-select-outlined-label\"\n                            style={{ color: \"#b5d7f3\" }}\n                          >\n                            Select Font\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={fontFam}\n                            onChange={handleFontChange}\n                            label=\"Font\"\n                            style={{\n                              backgroundColor: \"#183D5D\",\n                              color: \"#b5d7f3\",\n                            }}\n                          >\n                            <MenuItem value=\"\">\n                              <em>Select form</em>\n                            </MenuItem>\n                            <MenuItem\n                              style={{\n                                fontFamily:\n                                  \"Comic Sans MS, Comic Sans, cursive\",\n                              }}\n                              value={\"Comic Sans MS, Comic Sans, cursive\"}\n                            >\n                              Happy Scribble Day\n                            </MenuItem>\n                            <MenuItem\n                              style={{\n                                fontFamily:\n                                  \"Brush Script MT, Brush Script Std, cursive\",\n                              }}\n                              value={\n                                \"Brush Script MT, Brush Script Std, cursive\"\n                              }\n                            >\n                              Happy Scribble Day\n                            </MenuItem>\n                            <MenuItem\n                              style={{\n                                fontFamily: \"Trattatello, fantasy\",\n                              }}\n                              value={\"Trattatello, fantasy\"}\n                            >\n                              Happy Scribble Day\n                            </MenuItem>\n                            <MenuItem\n                              style={{\n                                fontFamily: \"Jazz LET, fantasy\",\n                              }}\n                              value={\"Jazz LET, fantasy\"}\n                            >\n                              Happy Scribble Day\n                            </MenuItem>\n                            <MenuItem\n                              style={{\n                                fontFamily: \"Courier New, monospace\",\n                              }}\n                              value={\"Courier New, monospace\"}\n                            >\n                              Happy Scribble Day\n                            </MenuItem>\n                            <MenuItem\n                              style={{\n                                fontFamily: \"OCR A Std, monospace\",\n                              }}\n                              value={\"OCR A Std, monospace\"}\n                            >\n                              Happy Scribble Day\n                            </MenuItem>\n                            <MenuItem\n                              style={{\n                                fontFamily: \"cursive\",\n                              }}\n                              value={\"cursive\"}\n                            >\n                              Happy Scribble Day\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n                        <Button\n                          variant=\"contained\"\n                          onClick={() => {\n                            if (isFixed) {\n                              if (!userdata) {\n                                setOpenSnackbar(true);\n                                setMsgSnackbar(\"Login first to give Scribble\");\n                                setLandingPageBool(false);\n                                setEnterEmailBool(true);\n                                setTimeout(() => setOpenSnackbar(false), 6000);\n                              } else if (\n                                window.confirm(\n                                  \"You won't be able to edit again. Are you sure to continue?\"\n                                )\n                              ) {\n                                handleSendScribbleForm();\n                              }\n                            } else {\n                              handleFixClick();\n                            }\n                          }}\n                          style={{ backgroundColor: \"#ED72C0\", color: \"#fff\" }}\n                        >\n                          {loadingBool ? (\n                            <CircularProgress\n                              size={30}\n                              style={{ color: \"white\" }}\n                            />\n                          ) : (\n                            <>{isFixed ? \"Click to Send Scribble\" : \"Save\"}</>\n                          )}\n                        </Button>\n                      </div>\n                    </>\n                  )}\n                  {userDetailsBool &&\n                    userdata &&\n                    (loadingBool ? (\n                      <CircularProgress />\n                    ) : (\n                      <>\n                        <div className=\"detailWrapper\">\n                          <label>{userdata.name}</label>\n                          <label>{userdata.email}</label>\n                          <label>{userdata.university}</label>\n                        </div>\n                        <div className=\"detailWrapper\">\n                          <label>Scribbles Messages Received</label>\n                          <div\n                            style={{\n                              width: \"100%\",\n                              height: 1,\n                              margin: \"12px 0 16px\",\n                              backgroundColor: \"#999\",\n                            }}\n                          />\n                          <div\n                            style={{\n                              overflowY: \"scroll\",\n                              maxHeight: \"200px\",\n                            }}\n                          >\n                            {scribbleList.length > 0 ? (\n                              scribbleList.map((scribble) => (\n                                <div\n                                  key={scribble._id}\n                                  style={{\n                                    fontSize: \"14px\",\n                                  }}\n                                >\n                                  <CardHeader\n                                    avatar={\n                                      <Avatar\n                                        aria-label=\"recipe\"\n                                        className={classes.avatar}\n                                        src={scribble.sendByAvatar}\n                                      ></Avatar>\n                                    }\n                                    title={scribble.sendByName}\n                                    subheader={scribble.message}\n                                  />\n                                  <div\n                                    style={{\n                                      width: \"100%\",\n                                      height: 1,\n                                      margin: \"12px 0 16px\",\n                                      backgroundColor: \"#555\",\n                                    }}\n                                  />\n                                </div>\n                              ))\n                            ) : (\n                              <p style={{ color: \"rgba(255,255,255,0.5)\" }}>\n                                You didn't received any scribble yet!\n                                <br /> Invite your friends to write scribbles\n                                for you.\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"part\">\n                          <a href={image}>\n                            <Button\n                              variant=\"contained\"\n                              onClick={() => {\n                                navigator.clipboard.writeText(\n                                  \"Hey dear friend, Lets Celebrate Scribble Day 2021 virtullay together | Write a Scribble Message for me || www.thirsty-goldwasser-7273c9.netlify.app/\"\n                                );\n                                setOpenSnackbar(true);\n                                setMsgSnackbar(\n                                  \"Copied text to share on Instagram\"\n                                );\n                                setTimeout(() => setOpenSnackbar(false), 1000);\n                              }}\n                              style={{\n                                backgroundColor: \"#8A374A\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-instagram\"}></span>\n                            </Button>\n                          </a>\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://www.linkedin.com/shareArticle?url=www.thirsty-goldwasser-7273c9.netlify.app/%20&title=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20\"\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#2E73AD\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-linkedin\"}></span>\n                            </Button>\n                          </a>\n                          <Button\n                            variant=\"contained\"\n                            style={{\n                              backgroundColor: \"#4095ED\",\n                              color: \"#fff\",\n                            }}\n                            onClick={() => {\n                              window.open(\n                                \"https://www.facebook.com/sharer/sharer.php?u=https%3A//thirsty-goldwasser-7273c9.netlify.app\"\n                              );\n                              return false;\n                            }}\n                          >\n                            <span className={\"fa fa-facebook\"}></span>\n                          </Button>\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={\n                              \"https://twitter.com/intent/tweet?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%0A%0A%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%0A%0AWrite%20a%20Scribble%20for%20me%20%0A%0Ahttps%3A//thirsty-goldwasser-7273c9.netlify.app/u/\" +\n                              userdata.userId +\n                              \"%20%0A%0A%23scribbleday2021%20\"\n                            }\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#05ABFF\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-twitter\"}></span>\n                            </Button>\n                          </a>\n                          <a\n                            href=\"https://web.whatsapp.com/send?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20%20%20https%3A//thirsty-goldwasser-7273c9.netlify.app/%20%20%20#scribbleday2021%20%20\"\n                            data-action=\"share/whatsapp/share\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#0DC143\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-whatsapp\"}></span>\n                            </Button>\n                          </a>\n                        </div>\n                      </>\n                    ))}\n                  {insertVerifyCode && (\n                    <>\n                      <FormControl\n                        className={\"col-12 col-sm-8 col-md-9 form\"}\n                        style={{ padding: 20 }}\n                      >\n                        <Input\n                          style={{ color: \"white\" }}\n                          id=\"input-with-icon-adornment\"\n                          placeholder={\n                            enterPinOrCodeBool === \"pin\"\n                              ? \"Enter PIN\"\n                              : \"Verification Code\"\n                          }\n                          variant=\"filled\"\n                          onChange={(e) => setPinCodeToVerify(e.target.value)}\n                          startAdornment={\n                            <InputAdornment position=\"start\">\n                              <VpnKeyIcon />\n                            </InputAdornment>\n                          }\n                          endAdornment={\n                            <InputAdornment\n                              position=\"end\"\n                              onClick={\n                                enterPinOrCodeBool === \"pin\"\n                                  ? handleVerifyPin\n                                  : handleVerifyCode\n                              }\n                            >\n                              {loadingBool ? (\n                                <CircularProgress\n                                  size={30}\n                                  style={{ color: \"white\" }}\n                                />\n                              ) : (\n                                <SendIcon style={{ cursor: \"pointer\" }} />\n                              )}\n                            </InputAdornment>\n                          }\n                        />\n                      </FormControl>\n                    </>\n                  )}\n                  {askedForSendVerificationCode && (\n                    <div className=\"boxWrapper\">\n                      <Button\n                        variant=\"contained\"\n                        onClick={handleSendVerificationCode}\n                      >\n                        {activateLoadingIn === \"send-verification-code\" ? (\n                          <CircularProgress size={25} />\n                        ) : (\n                          \"Send Verification Code\"\n                        )}\n                      </Button>\n                      <span class=\"previewText\">to {inputEmail}</span>\n                    </div>\n                  )}\n                  {enterEmailBool && (\n                    <FormControl\n                      className={\"col-12 col-sm-8 col-md-9 form\"}\n                      style={{ padding: 20 }}\n                    >\n                      <Input\n                        id=\"input-with-icon-adornment\"\n                        style={{ color: \"white\" }}\n                        placeholder=\"Email\"\n                        variant=\"filled\"\n                        onChange={(e) => setInputEmail(e.target.value)}\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <AccountCircle />\n                          </InputAdornment>\n                        }\n                        endAdornment={\n                          <InputAdornment\n                            position=\"end\"\n                            onClick={checkUserAccountWithEmail}\n                          >\n                            {loadingBool ? (\n                              <CircularProgress\n                                size={30}\n                                style={{ color: \"white\" }}\n                              />\n                            ) : (\n                              <SendIcon style={{ cursor: \"pointer\" }} />\n                            )}\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  )}\n                  {signupFormBool && !userdata && (\n                    <>\n                      <div className=\"col-12 col-sm-11 col-lg-9 row\">\n                        <FormControl\n                          variant=\"filled\"\n                          className={classes.formControl}\n                          style={{ width: \"100%\", margin: \"12px 0\" }}\n                        >\n                          <InputLabel\n                            id=\"demo-simple-select-filled-label\"\n                            style={{ color: \"white\" }}\n                          >\n                            Select University\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-filled-label\"\n                            id=\"demo-simple-select-filled\"\n                            name=\"university\"\n                            value={signupFormInputs.university}\n                            onChange={handleInputChange}\n                          >\n                            {universityList.length > 0 &&\n                              universityList.map((university) => (\n                                <MenuItem value={university.name}>\n                                  {university.name}\n                                </MenuItem>\n                              ))}\n                            <MenuItem\n                              value={\"other\"}\n                              onClick={() => {\n                                setNewUniversityBool(true);\n                                setSignUpformBool(false);\n                                setNewUniversityOnSuccess(\"signup\");\n                              }}\n                            >\n                              Other\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n                        <Form.Control\n                          className={\"col-12 form\"}\n                          type=\"text\"\n                          placeholder=\"Your fullname\"\n                          maxLength={250}\n                          name=\"name\"\n                          value={signupFormInputs.name}\n                          onChange={handleInputChange}\n                          required\n                        />\n\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">Gender</FormLabel>\n                          <RadioGroup\n                            aria-label=\"gender\"\n                            name=\"gender\"\n                            value={signupFormInputs.gender}\n                            onChange={handleInputChange}\n                            style={{ flexDirection: \"row\" }}\n                          >\n                            <FormControlLabel\n                              value=\"female\"\n                              control={<Radio />}\n                              label=\"Female\"\n                            />\n                            <FormControlLabel\n                              value=\"male\"\n                              control={<Radio />}\n                              label=\"Male\"\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                        <Form.Control\n                          className={\"col-12 form\"}\n                          type=\"text\"\n                          placeholder=\"Enter a 4 digit's PIN\"\n                          name=\"pin\"\n                          value={signupFormInputs.pin}\n                          onChange={handleInputChange}\n                          maxLength={4}\n                          required\n                        />\n\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          hidden=\"true\"\n                          onChange={(e) => setAvatar(e.target.files[0])}\n                          id=\"avatar\"\n                        />\n                        <label for=\"avatar\" style={{ width: \"100%\" }}>\n                          <div\n                            className=\"file-upload-control\"\n                            style={{\n                              background: \"#e52e71\",\n                              padding: \"0.5rem 2rem\",\n                              borderRadius: 8,\n                              display: \"inline-flex\",\n                              alignItems: \"center\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            <CloudUploadIcon />\n                            <span style={{ marginLeft: 12 }}>\n                              upload profile picture\n                            </span>\n                          </div>\n                        </label>\n                        <Button\n                          variant=\"contained\"\n                          onClick={handleSubmitSignupForm}\n                        >\n                          {loadingBool ? (\n                            <CircularProgress style={{ margin: \"9px auto\" }} />\n                          ) : (\n                            \"Submit\"\n                          )}\n                        </Button>\n                      </div>\n                    </>\n                  )}\n                  {newUniversityBool && (\n                    <>\n                      <Form.Control\n                        className={\"col-12 form\"}\n                        type=\"text\"\n                        placeholder=\"Univesity Name\"\n                        name=\"newuniversity\"\n                        maxLength={250}\n                        value={newUnivesityName}\n                        onChange={(e) => setNewUniversityName(e.target.value)}\n                        required\n                      />\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        hidden=\"true\"\n                        onChange={(e) =>\n                          setNewUniversityLogo(e.target.files[0])\n                        }\n                        id=\"newuniversitylogo\"\n                      />\n                      <label for=\"newuniversitylogo\" style={{ width: \"100%\" }}>\n                        <div\n                          className=\"file-upload-control\"\n                          style={{\n                            background: \"#e52e71\",\n                            padding: \"0.5rem 2rem\",\n                            borderRadius: 8,\n                            display: \"inline-flex\",\n                            alignItems: \"center\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          <CloudUploadIcon />\n                          <span style={{ marginLeft: 12 }}>Upload Logo</span>\n                        </div>\n                      </label>\n\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleNewUniversityForm}\n                      >\n                        {loadingBool ? (\n                          <CircularProgress\n                            size={30}\n                            style={{ color: \"white\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </Button>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div\n              style={{ textAlign: \"center\", marginBottom: \"1rem\" }}\n              className=\"d-block d-sm-none\"\n            >\n              {userdata && userDetailsBool && (\n                <>\n                  <Button\n                    onClick={async () => {\n                      setDownloadClicked(!downloadClicked);\n                      if (!downloadClicked) {\n                        setLoadingFor(\"downloadTshirt\");\n                        await takeScreenshot();\n                        setTimeout(() => setLoadingFor(\"\"), 1000);\n                      } else {\n                        setLoadingFor(\"downloadTshirt\");\n                        await takeScreenshot();\n                        const clear = setInterval(async () => {\n                          if (true) {\n                            const imageBool = await download(image);\n                            if (imageBool) {\n                              setLoadingFor(\"\");\n                              clearInterval(clear);\n                            }\n                          }\n                        }, 3000);\n                      }\n                    }}\n                    style={{\n                      backgroundColor: \"#0A0\",\n                      marginInline: 10,\n                      color: \"#fff\",\n                    }}\n                  >\n                    {loadingFor === \"downloadTshirt\" ? (\n                      <CircularProgress size={20} style={{ color: \"white\" }} />\n                    ) : (\n                      <>\n                        <span className={\"fa fa-download\"}> </span>\n                        {downloadClicked ? \"Click to Download\" : \"Download\"}\n                      </>\n                    )}\n                  </Button>\n                  <DownloadForm\n                    insertVerifyCode={insertVerifyCode}\n                    selectedValue={downloadInput}\n                    open={openDownloadDialog}\n                    onClose={handleDownloadClose}\n                    image={image}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => handleDownloadOpen()}\n                    style={{\n                      backgroundColor: \"#05ABFF\",\n                      marginInline: 10,\n                      color: \"#fff\",\n                    }}\n                  >\n                    <span className={\"fa fa-user\"}></span>\n                    Preview\n                  </Button>\n                </>\n              )}\n            </div>\n            <h3\n              className={\"center text-center\"}\n              style={{\n                color: \"#FF8AE2\",\n                fontFamily: \"sans\",\n                textAlign: \"left\",\n              }}\n            >\n              A Day worth Remembering\n            </h3>\n            <div className=\"details-of-site\">\n              <div className=\"part\">\n                <div>\n                  <a\n                    href={\"https://rzp.io/l/Up18AjAWH\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => handleDownloadOpen(\"download\")}\n                      style={{ backgroundColor: \"#0A0\", color: \"#fff\" }}\n                    >\n                      <span className={\"fa fa-shopping-cart\"}></span>\n                      Place Order\n                    </Button>\n                  </a>\n                </div>\n              </div>\n\n              <div className=\"part\">\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleInviteOpen}\n                    style={{ backgroundColor: \"#05ABFF\", color: \"#fff\" }}\n                  >\n                    <span className={\"fa fa-share\"}></span>\n                    Invite Friend\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <footer\n              className={\"center\"}\n              style={{\n                textAlign: \"center\",\n                width: \"70%\",\n                transform: \"translate(20%, 0%)\",\n              }}\n            >\n              <p>\n                Spread the happiness among your friends, juniors, seniors and\n                connections to celebrate this year's\n                <a\n                  href=\"https://hacktoberfest.digitalocean.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Scribble Day\n                </a>\n              </p>\n            </footer>\n          </div>\n          <div className={\"column\"}>\n            {/* RIGHT COLUMN */}\n\n            <div className={\"scribble-image1\"} ref={imageWrap}>\n              {tshirtSide === \"front\" ? (\n                <Image\n                  alt=\"tshirt demo\"\n                  src={require(\"../../assets/malefront.png\")}\n                  className={\"male-front\"}\n                  ref={imageRef}\n                />\n              ) : (\n                <Image\n                  alt=\"tshirt demo\"\n                  src={require(\"../../assets/maleback.png\")}\n                  className={\"male-front\"}\n                  ref={imageRef}\n                />\n              )}\n              <div className={\"university-logo\"}>\n                <Avatar\n                  style={{\n                    width: getFontSize(60, imageRefWidth),\n                    height: getFontSize(60, imageRefWidth),\n                  }}\n                  alt=\"U\"\n                  src={\n                    universityLogo\n                      ? universityLogo\n                      : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn0.iconfinder.com%2Fdata%2Ficons%2Fbuildings-1%2F128%2F29-512.png&f=1&nofb=1\"\n                  }\n                />\n              </div>\n              {scribbleList\n                .filter((item) => item.side === tshirtSide)\n                .map((scribble) => (\n                  <p\n                    key={scribble._id}\n                    style={{\n                      textAlign: \"center\",\n                      rotate: scribble.angle + \"deg\",\n                      color: scribble.colorCode,\n                      fontSize: getFontSize(scribble.fontSize, imageRefWidth),\n                      fontFamily: scribble.fontStyle,\n                      position: \"absolute\",\n                      // transform: `scale(${(imageRefWidth/616)+0.204})`,\n                      top: `${scribble.dimensions.top}%`,\n                      left: `${scribble.dimensions.left}%`,\n                      width: \"25%\",\n                    }}\n                  >\n                    {scribble.message}\n                    <span>\n                      <br />~ {scribble.sendByName}\n                    </span>\n                  </p>\n                ))}\n              <Draggable\n                bounds=\"parent\"\n                disabled={dragBool}\n                onStart={handleOnDragStart}\n              >\n                <div\n                  className={\"scribble-message1\"}\n                  style={\n                    !dragBool && !userDetailsBool\n                      ? {\n                          border: \"1px solid rgb(233, 233, 233)\",\n                        }\n                      : {\n                          border: \"none\",\n                          backgroundColor: \"transparent\",\n                        }\n                  }\n                >\n                  {enterFriendName ? (\n                    <>\n                      <div\n                        style={{\n                          rotate: rotateValue + \"deg\",\n                          color: messageColor,\n                          fontSize: getFontSize(messageFont, imageRefWidth),\n                          fontFamily: fontFam,\n                          cursor: dragBool ? \"default\" : \"move\",\n                        }}\n                      >\n                        <p ref={messageRef}>\n                          {message ? message : \"Scribble Message\"}\n                          <span>\n                            <br />~ {userdata ? userdata.name : \"Your name\"}\n                          </span>\n                        </p>\n                      </div>\n                    </>\n                  ) : userDetailsBool ? (\n                    <></>\n                  ) : (\n                    <div\n                      style={{\n                        rotate: rotateValue + \"deg\",\n                        color: messageColor,\n                        fontSize: messageFont,\n                        cursor: dragBool ? \"default\" : \"move\",\n                      }}\n                    >\n                      <p>Select a Friend to write a Scribble message</p>\n                    </div>\n                  )}\n                </div>\n              </Draggable>\n            </div>\n\n            {/* remove draggable from here to above */}\n          </div>\n        </div>\n      </div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        autoHideDuration={1000}\n        message={msgSnackbar}\n      />\n      <Footer />\n    </div>\n  );\n}\nexport default Home;\n","import React from \"react\";\n\nimport Footer from \"../../includes/footer\";\nimport SuperHeader from \"../../includes/superHeader\";\nimport \"./about.css\";\n\nexport default function About() {\n  return (\n    <div className=\"about-cont\">\n      <SuperHeader />\n      <div className=\"\">\n        <div className=\"container py-5\">\n          <div className=\"row h-100 align-items-center py-5\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"display-4\">About us page</h1>\n              <p className=\"lead text-muted mb-0\">\n                Create a minimal about us page using Bootstrap 4.\n              </p>\n              <p className=\"lead text-muted\">\n                Snippet by{\" \"}\n                <a\n                  href=\"https://bootstrapious.com/snippets\"\n                  className=\"text-muted\"\n                >\n                  <u>Bootstrapious</u>\n                </a>\n              </p>\n            </div>\n            <div className=\"col-lg-6 d-none d-lg-block\">\n              <img\n                src=\"https://scribble2021.s3.ap-south-1.amazonaws.com/ScribbleDayLogo2021.png\"\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"about-section-2 py-5\">\n        <div className=\"container py-5\">\n          <div className=\"row align-items-center mb-5\">\n            <div className=\"col-lg-6 order-2 order-lg-1\">\n              <i className=\"fa fa-bar-chart fa-2x mb-3 text-primary\"></i>\n              <h2 className=\"font-weight-light\">Lorem ipsum dolor sit amet</h2>\n              <p className=\"font-italic text-muted mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n              <a href=\"#\" className=\"btn btn-light px-5 rounded-pill shadow-sm\">\n                Learn More\n              </a>\n            </div>\n            <div className=\"col-lg-5 px-5 mx-auto order-1 order-lg-2\">\n              <img\n                src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834139/img-1_e25nvh.jpg\"\n                alt=\"\"\n                className=\"img-fluid mb-4 mb-lg-0\"\n              />\n            </div>\n          </div>\n          <div className=\"row align-items-center\">\n            <div className=\"col-lg-5 px-5 mx-auto\">\n              <img\n                src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834136/img-2_vdgqgn.jpg\"\n                alt=\"\"\n                className=\"img-fluid mb-4 mb-lg-0\"\n              />\n            </div>\n            <div className=\"col-lg-6\">\n              <i className=\"fa fa-leaf fa-2x mb-3 text-primary\"></i>\n              <h2 className=\"font-weight-light\">Lorem ipsum dolor sit amet</h2>\n              <p className=\"font-italic text-muted mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n              <a href=\"#\" className=\"btn btn-light px-5 rounded-pill shadow-sm\">\n                Learn More\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\" py-5\">\n        <div className=\"container py-5\">\n          <div className=\"row mb-4\">\n            <div className=\"col-lg-5\">\n              <h2 className=\"display-4 font-weight-light\">Our team</h2>\n              <p className=\"font-italic text-muted\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"row text-center\">\n            {[1, 2, 3, 4].map(() => (\n              <div className=\"col-xl-3 col-sm-6 mb-5\">\n                <div className=\"rounded shadow-sm py-5 px-4 team-cards\">\n                  <img\n                    src=\"https://avatars.githubusercontent.com/u/32240906?v=4\"\n                    alt=\"\"\n                    width=\"100\"\n                    className=\"img-fluid rounded-circle mb-3 img-thumbnail shadow-sm\"\n                  />\n                  <h5 className=\"mb-0 member-name\">Kartik Tyagi</h5>\n                  <span className=\"small text-uppercase text-muted\">\n                    Project Lead\n                  </span>\n                  <ul className=\"social mb-0 list-inline mt-3\">\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-facebook-f\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-twitter\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-instagram\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-linkedin\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport announcement from \"../../../assets/announcement.png\";\nimport Footer from \"../../includes/footer\";\nimport \"./faq.css\";\n\nexport default function Faq() {\n  return (\n    <div className=\"about-cont\">\n      <Container fluid className={\"nav center\"}>\n        <Row className={\"container text-center\"}>\n          <Col>\n            <img src={announcement} height=\"40px\" alt=\"announcement\" />{\" \"}\n            &nbsp;Make your virtual Scribble Day more exciting by\n            <a\n              href=\"https://ethicallearner.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              Placing ORDER of your SCRRIBLE TSHIRT\n            </a>\n          </Col>\n        </Row>\n      </Container>\n\n      <div class=\"container\">\n        <br />\n        <br />\n        <br />\n\n        <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\">\n            <span aria-hidden=\"true\">&times;</span>\n            <span class=\"sr-only\">Close</span>\n          </button>\n          This section contains a wealth of information, related to{\" \"}\n          <strong>PrepBootstrap</strong> and its store. If you cannot find an\n          answer to your question, make sure to contact us.\n        </div>\n\n        <br />\n\n        <div class=\"\" id=\"accordion\">\n          <div class=\"faqHeader\">General questions</div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseOne\"\n                >\n                  Is account registration required?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseOne\" class=\"panel-collapse collapse in\">\n              <div class=\"card-block\">\n                Account registration at <strong>PrepBootstrap</strong> is only\n                required if you will be selling or buying themes. This ensures a\n                valid communication channel for all parties involved in any\n                transactions.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseTen\"\n                >\n                  Can I submit my own Bootstrap templates or themes?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseTen\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                A lot of the content of the site has been submitted by the\n                community. Whether it is a commercial element/template/theme or\n                a free one, you are encouraged to contribute. All credits are\n                published along with the resources.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseEleven\"\n                >\n                  What is the currency used for all transactions?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseEleven\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                All prices for themes, templates and other items, including each\n                seller's or buyer's account balance are in <strong>USD</strong>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"faqHeader\">Sellers</div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseTwo\"\n                >\n                  Who cen sell items?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseTwo\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Any registed user, who presents a work, which is genuine and\n                appealing, can post it on <strong>PrepBootstrap</strong>.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseThree\"\n                >\n                  I want to sell my items - what are the steps?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseThree\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                The steps involved in this process are really simple. All you\n                need to do is:\n                <ul>\n                  <li>Register an account</li>\n                  <li>Activate your account</li>\n                  <li>\n                    Go to the <strong>Themes</strong> section and upload your\n                    theme\n                  </li>\n                  <li>\n                    The next step is the approval step, which usually takes\n                    about 72 hours.\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseFive\"\n                >\n                  How much do I get from each sale?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseFive\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Here, at <strong>PrepBootstrap</strong>, we offer a great, 70%\n                rate for each seller, regardless of any restrictions, such as\n                volume, date of entry, etc.\n                <br />\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseSix\"\n                >\n                  Why sell my items here?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseSix\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                There are a number of reasons why you should join us:\n                <ul>\n                  <li>A great 70% flat rate for your items.</li>\n                  <li>\n                    Fast response/approval times. Many sites take weeks to\n                    process a theme or template. And if it gets rejected, there\n                    is another iteration. We have aliminated this, and made the\n                    process very fast. It only takes up to 72 hours for a\n                    template/theme to get reviewed.\n                  </li>\n                  <li>\n                    We are not an exclusive marketplace. This means that you can\n                    sell your items on <strong>PrepBootstrap</strong>, as well\n                    as on any other marketplate, and thus increase your earning\n                    potential.\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseEight\"\n                >\n                  What are the payment options?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseEight\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                The best way to transfer funds is via Paypal. This secure\n                platform ensures timely payments and a secure environment.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseNine\"\n                >\n                  When do I get paid?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseNine\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Our standard payment plan provides for monthly payments. At the\n                end of each month, all accumulated funds are transfered to your\n                account. The minimum amount of your balance should be at least\n                70 USD.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"faqHeader\">Buyers</div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseFour\"\n                >\n                  I want to buy a theme - what are the steps?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseFour\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Buying a theme on <strong>PrepBootstrap</strong> is really\n                simple. Each theme has a live preview. Once you have selected a\n                theme or template, which is to your liking, you can quickly and\n                securely pay via Paypal.\n                <br />\n                Once the transaction is complete, you gain full access to the\n                purchased product.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseSeven\"\n                >\n                  Is this the latest version of an item\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseSeven\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Each item in <strong>PrepBootstrap</strong> is maintained to its\n                latest version. This ensures its smooth operation.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Footer from \"../../includes/footer\";\nimport SuperHeader from \"../../includes/superHeader\";\nimport \"./resources.css\";\n\nexport default function Resources() {\n  return (\n    <div className=\"about-cont\">\n      <SuperHeader />\n      <div className=\"\">\n        <div className=\"container py-5\">\n          <div className=\"row h-100 align-items-center py-5\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"display-4\">About us page</h1>\n              <p className=\"lead text-muted mb-0\">\n                Create a minimal about us page using Bootstrap 4.\n              </p>\n              <p className=\"lead text-muted\">\n                Snippet by{\" \"}\n                <a\n                  href=\"https://bootstrapious.com/snippets\"\n                  className=\"text-muted\"\n                >\n                  <u>Bootstrapious</u>\n                </a>\n              </p>\n            </div>\n            <div className=\"col-lg-6 d-none d-lg-block\">\n              <img\n                src=\"https://scribble2021.s3.ap-south-1.amazonaws.com/ScribbleDayLogo2021.png\"\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"about-section-2 py-5\">\n        <div className=\"container py-5\">\n          <div className=\"row align-items-center mb-5\">\n            <div className=\"col-lg-6 order-2 order-lg-1\">\n              <i className=\"fa fa-bar-chart fa-2x mb-3 text-primary\"></i>\n              <h2 className=\"font-weight-light\">Lorem ipsum dolor sit amet</h2>\n              <p className=\"font-italic text-muted mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n              <a href=\"#\" className=\"btn btn-light px-5 rounded-pill shadow-sm\">\n                Learn More\n              </a>\n            </div>\n            <div className=\"col-lg-5 px-5 mx-auto order-1 order-lg-2\">\n              <img\n                src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834139/img-1_e25nvh.jpg\"\n                alt=\"\"\n                className=\"img-fluid mb-4 mb-lg-0\"\n              />\n            </div>\n          </div>\n          <div className=\"row align-items-center\">\n            <div className=\"col-lg-5 px-5 mx-auto\">\n              <img\n                src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834136/img-2_vdgqgn.jpg\"\n                alt=\"\"\n                className=\"img-fluid mb-4 mb-lg-0\"\n              />\n            </div>\n            <div className=\"col-lg-6\">\n              <i className=\"fa fa-leaf fa-2x mb-3 text-primary\"></i>\n              <h2 className=\"font-weight-light\">Lorem ipsum dolor sit amet</h2>\n              <p className=\"font-italic text-muted mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n              <a href=\"#\" className=\"btn btn-light px-5 rounded-pill shadow-sm\">\n                Learn More\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\" py-5\">\n        <div className=\"container py-5\">\n          <div className=\"row mb-4\">\n            <div className=\"col-lg-5\">\n              <h2 className=\"display-4 font-weight-light\">Our team</h2>\n              <p className=\"font-italic text-muted\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"row text-center\">\n            {[1, 2, 3, 4].map(() => (\n              <div className=\"col-xl-3 col-sm-6 mb-5\">\n                <div className=\"rounded shadow-sm py-5 px-4 team-cards\">\n                  <img\n                    src=\"https://avatars.githubusercontent.com/u/32240906?v=4\"\n                    alt=\"\"\n                    width=\"100\"\n                    className=\"img-fluid rounded-circle mb-3 img-thumbnail shadow-sm\"\n                  />\n                  <h5 className=\"mb-0 member-name\">Kartik Tyagi</h5>\n                  <span className=\"small text-uppercase text-muted\">\n                    Project Lead\n                  </span>\n                  <ul className=\"social mb-0 list-inline mt-3\">\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-facebook-f\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-twitter\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-instagram\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-linkedin\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport Home from \"./components/homepage/home\";\nimport About from \"./components/templates/about/about\";\nimport Faq from \"./components/templates/faq/faq\";\nimport Resources from \"./components/templates/resources/resources\";\n\nconst Theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={Theme}>\n      <div className=\"App\">\n        <Router>\n          <Route exact component={Home} path=\"/u/:userId\" />\n          <Route exact component={Home} path=\"/\" />\n          <Route exact component={About} path=\"/about\" />\n          <Route exact component={Faq} path=\"/faq\" />\n          <Route exact component={Resources} path=\"/resources\" />\n        </Router>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/announcement.ea18e75f.png\";"],"sourceRoot":""}