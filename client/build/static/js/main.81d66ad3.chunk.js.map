{"version":3,"sources":["assets/malefront.png","assets/maleback.png","components/homepage/shareCard.js","components/dimension.js","components/useGetPosition.js","components/useOutsideCatcher.js","components/includes/superHeader.js","components/includes/footer.js","components/homepage/home.js","components/templates/about/about.js","components/templates/faq/faq.js","App.js","serviceWorker.js","index.js","assets/announcement.png"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","paddingInline","paddingBlock","backgroundColor","color","avatar","red","ShareCard","props","classes","useState","openSnackbar","setOpenSnackbar","msgSnackbar","setMsgSnackbar","shareText","Card","className","userdata","CardHeader","Avatar","aria-label","src","action","IconButton","onClick","navigator","clipboard","writeText","setTimeout","style","title","Typography","gutterBottom","variant","name","textAlign","CardContent","border","marginBlock","borderRadius","component","CardActions","disableSpacing","Button","window","open","target","rel","href","data-action","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","getWindowDimensions","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","getFontSize","fontsize","parseFloat","slice","newSize","useOutsideAlerter","ref","isIn","setIn","handleClickOutside","event","current","contains","document","SuperHeader","Container","fluid","Row","Col","announcement","alt","Footer","class","id","blue","formControl","margin","spacing","minWidth","borderColor","selectEmpty","marginTop","resultOfUlist","top","position","zIndex","background","maxHeight","overflow","overflowY","resultListItem","padding","borderBottom","cursor","ValueLabelComponent","children","value","Tooltip","enterTouchDelay","placement","Home","searchUniversityRef","useRef","searchFriendRef","isSearchUniversityFocused","isSearchFriendFocused","imageRef","React","createRef","imageRefWidth","setImageRefWidth","setImageRefHeight","messageRef","imageWrap","useScreenshot","image","takeScreenshot","windowWidth","duniversityList","setDUniversityList","dfriendList","setDFriendList","universityList","setUniversityList","friendList","setFriendList","searchFilterFunction","text","data","setData","filter","item","itemData","toUpperCase","textData","indexOf","isFriendFocus","setFriendFocus","isUlistFocus","setUlistFocus","scribbleList","setScribbleList","setUserData","friendData","setFriendData","setMessage","messageColor","setMessageColor","rotateValue","setRotateValue","dragBool","setDragBool","messageFont","setMessageFont","fontFam","setFontFam","tshirtSide","setTshirtSide","isFixed","setIsFixed","dimensions","setDimensions","openInviteDialog","setInviteDialog","openDownloadDialog","setDownloadDialog","downloadInput","setDownloadInput","insertVerifyCode","setInsertVerifyCode","university","setUniversity","universityLogo","setUniversityLogo","enterFriendName","setEnterFriendName","friendLogo","setFriendLogo","landingPageBool","setLandingPageBool","userDetailsBool","setUserDetailsBool","enterEmailBool","setEnterEmailBool","loadingBool","setLoadingBool","loadingFor","setLoadingFor","downloadClicked","setDownloadClicked","askedForSendVerificationCode","setAskedForSendVerificationCode","enterPinOrCodeBool","setEnterPinOrCodeBool","signupFormBool","setSignUpformBool","newUniversityBool","setNewUniversityBool","inputEmail","setInputEmail","pinCodeToVerify","setPinCodeToVerify","codeToCheck","setCodeToCheck","signupFormInputs","setSignupFormInputs","activateLoadingIn","setActivateLoadingIn","newUnivesityName","setNewUniversityName","newUnivesityLogo","setNewUniversityLogo","newUniversityOnSuccess","setNewUniversityOnSuccess","setAvatar","getBoundingClientRect","userId","useParams","a","axios","post","resp","found","res","logo","friendUserId","friendName","friendAvatar","scribbles","respMessage","get","instituteList","length","download","imageUrl","console","log","url","link","createElement","setAttribute","body","appendChild","click","handleInputChange","e","handleMyScribbleClick","scribbleResp","universityResp","handleSendScribbleForm","angle","colorCode","fontStyle","fontSize","side","scribbled","location","reload","handleSendVerificationCode","alert","email","sent","handleVerifyPin","pin","loggedIn","handleVerifyCode","checkUserAccountWithEmail","profile","handleSubmitSignupForm","formData","FormData","set","JSON","stringify","signUp","handleInviteOpen","handleDownloadOpen","handleDownloadClose","handleNewUniversityForm","added","institute","handleSearchForStudents","uni","friendsList","InviteFriend","onClose","Dialog","aria-labelledby","DownloadForm","selectedValue","display","flexDirection","CircularProgress","marginInline","Image","float","ButtonGroup","disableElevation","disabled","clear","setInterval","clearInterval","size","loggedout","Form","Control","type","placeholder","maxLength","onFocus","onBlur","onChange","required","map","uObj","marginLeft","col-12","col-sm-8","col-md-9","multiple","as","Slider","min","max","newValue","FormControl","InputLabel","outlined","Select","labelId","label","MenuItem","fontFamily","confirm","scribble","key","_id","sendByAvatar","sendByName","subheader","Input","startAdornment","InputAdornment","endAdornment","FormLabel","RadioGroup","gender","FormControlLabel","control","Radio","accept","hidden","files","for","alignItems","marginBottom","transform","require","rotate","left","bounds","onStart","rootDimensions","selfDimensions","rootWidth","rootHeight","rootX","x","rootY","y","selfX","selfY","xHelperConstant","yHelperConstant","GetPosition","About","Faq","role","data-dismiss","aria-hidden","data-toggle","data-parent","Theme","createMuiTheme","palette","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.81d66ad3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/malefront.3b15893e.png\";","module.exports = __webpack_public_path__ + \"static/media/maleback.5520076a.png\";","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    paddingInline: \"5%\",\n    paddingBlock: \"3%\",\n    backgroundColor: \"#073e6d\",\n    color: \"#fff\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function ShareCard(props) {\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [msgSnackbar, setMsgSnackbar] = useState(\"\");\n  const [shareText, setShareText] = useState(\n    \"Hey dear friend, Lets Celebrate Scribble Day 2021 virtullay together | Write a Scribble Message for me || www.thirsty-goldwasser-7273c9.netlify.app/\"\n  );\n\n  return (\n    <Card className={classes.root}>\n      {props.userdata ? (\n        <CardHeader\n          avatar={\n            <Avatar\n              aria-label=\"recipe\"\n              className={classes.avatar}\n              src={props.userdata.avatar}\n            ></Avatar>\n          }\n          action={\n            <IconButton\n              aria-label=\"settings\"\n              onClick={() => {\n                navigator.clipboard.writeText(shareText);\n                setOpenSnackbar(true);\n                setMsgSnackbar(\"Copied\");\n                setTimeout(() => setOpenSnackbar(false), 1000);\n              }}\n            >\n              <FileCopyIcon style={{ color: \"#fff\" }} />\n            </IconButton>\n          }\n          title={\n            <Typography gutterBottom variant=\"h5\">\n              {props.userdata.name}\n            </Typography>\n          }\n        />\n      ) : (\n        <Typography gutterBottom variant=\"h5\" style={{ textAlign: \"center\" }}>\n          Virtual Scribble Day 2021\n        </Typography>\n      )}\n      <CardContent\n        style={{\n          border: \"1px solid  rgb(233, 233, 223, 0.2)\",\n          marginBlock: 10,\n          borderRadius: 6,\n        }}\n      >\n        <Typography variant=\"body2\" component=\"p\">\n          {shareText}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <div className=\"part socials\">\n          {!props.userdata && (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={() => {\n                navigator.clipboard.writeText(shareText);\n                setOpenSnackbar(true);\n                setMsgSnackbar(\"Copied\");\n                setTimeout(() => setOpenSnackbar(false), 1000);\n              }}\n            >\n              <span className={\"fa fa-copy\"}></span>\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            style={{ backgroundColor: \"#8A374A\", color: \"#fff\" }}\n            onClick={() => {\n              navigator.clipboard.writeText(shareText);\n              setOpenSnackbar(true);\n              setMsgSnackbar(\"Copied\");\n              setTimeout(() => {\n                setOpenSnackbar(false);\n                window.open(\"https://www.instagram.com/\");\n              }, 1000);\n            }}\n          >\n            <span className={\"fa fa-instagram\"}></span>\n          </Button>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/shareArticle?url=www.thirsty-goldwasser-7273c9.netlify.app/%20&title=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#2E73AD\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-linkedin\"}></span>\n            </Button>\n          </a>\n          <Button\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"#4095ED\",\n              color: \"#fff\",\n            }}\n            onClick={() => {\n              window.open(\n                \"https://www.facebook.com/sharer/sharer.php?u=https%3A//thirsty-goldwasser-7273c9.netlify.app\"\n              );\n              return false;\n            }}\n          >\n            <span className={\"fa fa-facebook\"}></span>\n          </Button>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/intent/tweet?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%0A%0A%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%0A%0AWrite%20a%20Scribble%20for%20me%20%0A%0Awww.thirsty-goldwasser-7273c9.netlify.app/%20%0A%0A%23scribbleday2021%20\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#05ABFF\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-twitter\"}></span>\n            </Button>\n          </a>\n          <a\n            href=\"https://web.whatsapp.com/send?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20%20%20https%3A//thirsty-goldwasser-7273c9.netlify.app/%20%20%20#scribbleday2021%20%20\"\n            data-action=\"share/whatsapp/share\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#0DC143\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-whatsapp\"}></span>\n            </Button>\n          </a>\n        </div>\n      </CardActions>\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        autoHideDuration={1000}\n        message={msgSnackbar}\n      />\n    </Card>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import { useEffect, useState } from 'react';\nimport useWindowDimensions from './dimension';\n\nexport function getFontSize(fontsize, width){\n  if(typeof(fontsize)==='string'){\n    fontsize = parseFloat(fontsize.slice(0,-2))*16;\n  }\n  const getWidthPercen = ((100*width)/616);\n  const newSize = ((fontsize*getWidthPercen)/100);\n  if(newSize>fontsize){\n    return fontsize;\n  }else{\n    return newSize;\n  }\n}\n\nexport function getConstantLeft(xHelperConstant, width){\n  return ((0.0001864*width)+xHelperConstant);\n} \n\nexport function getLeft(xHelperConstant, width){\n  return (width*getConstantLeft(xHelperConstant,width));\n}\n\nexport function getConstantTop(yHelperConstant, height){\n  return ((0.0002864*height)+yHelperConstant);\n}\n\nexport function getTop(yHelperConstant, height){\n  return (height*getConstantTop(yHelperConstant,height));\n}\n\nexport default function useGetPosition(rootRef, selfRef){\n\n  const { width: windowWidth } = useWindowDimensions();\n  const [rootDimensions, setRootDimensions] = useState(null);\n  const [selfDimensions, setSelfDimensions] = useState(null);\n\n  useEffect(()=>{\n    setRootDimensions(rootRef.current.getBoundingClientRect());\n    setSelfDimensions(selfRef.current.getBoundingClientRect());\n  },[windowWidth])\n\n  function getXHelperConstant(){\n    const rootWidth = rootDimensions ? rootDimensions.width : 0 ;\n    const rootX = rootDimensions ? rootDimensions.x : 0;\n    const selfX = selfDimensions ? selfDimensions.x : 0;\n    return (((selfX - rootX)/rootWidth)-(0.0001864*rootWidth));\n  }\n\n  function getYHelperConstant(){\n    const rootHeight = rootDimensions ? rootDimensions.height : 0;\n    const rootY = rootDimensions ? rootDimensions.y : 0;\n    const selfY = selfDimensions ? selfDimensions.y : 0;\n    return (((selfY - rootY)/rootHeight)-(0.0002864*rootHeight));\n  }\n\n  function getValue(rootStart, selfStart, rootDim){\n    return ((100/rootDim)*(selfStart - rootStart));\n  }\n\n  return {\n    xHelperConstant: getXHelperConstant(), yHelperConstant: getYHelperConstant(),\n    left: getValue(rootDimensions.x, selfDimensions.x, rootDimensions.width)\n  }\n\n}","import { useEffect, useState } from 'react';\n\nexport default function useOutsideAlerter(ref) {\n  const [isIn, setIn] = useState(null);\n  useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n              setIn(false);\n          }else{\n          setIn(true);\n          }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          // Unbind the event listener on clean up\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n  return isIn;\n}","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport announcement from \"../../assets/announcement.png\";\n\nexport default function SuperHeader() {\n  return (\n    <div>\n      <Container fluid className={\"nav center\"}>\n        <Row className={\"container text-center\"}>\n          <Col>\n            <img src={announcement} height=\"40px\" alt=\"announcement\" />{\" \"}\n            &nbsp;Make your virtual Scribble Day more exciting by\n            <a\n              href=\"https://ethicallearner.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              Placing ORDER of your SCRRIBLE TSHIRT\n            </a>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Footer() {\n  return (\n    <div>\n      <footer className=\"footer-cont pb-5\">\n        <div class=\"row bottom-part\">\n          <div class=\"d-lg-flex justify-content-between bd-highlight col-md-12 mb-5 px-5\">\n            <div class=\"p-2 align-self-center flex-fill bd-highlight\">\n              <div class=\"fa fa-facebook px-2\"></div>\n              <div class=\"fa fa-linkedin px-2\"></div>\n              <div class=\"fa fa-twitter px-2\"></div>\n              <div class=\"fa fa-instagram px-2\"></div>\n            </div>\n            <div class=\"p-2 row flex-fill bd-highlight justify-content-left\">\n              <div class=\"p-2 d-lg-flex\">\n                <a href=\"https://ethicallearner.com/tnc\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">Terms</div>\n                </a>\n                <a href=\"https://ethicallearner.com/privacy\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">Privacy</div>\n                </a>\n                <a href=\"/faq\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">Faq</div>\n                </a>\n                <a href=\"/about\">\n                  <div class=\"p-2 flex-fill d-flex bd-highlight\">About</div>\n                </a>\n              </div>\n            </div>\n            <div class=\"p-2 align-self-center flex-fill bd-highlight\">\n              <div class=\"fa fa-mobile px-2 grey-text\">\n                &nbsp;&nbsp;<span id=\"contact\">888-777-666</span>\n              </div>\n              <div class=\"fa fa-envelope-o px-2 grey-text\">\n                &nbsp;&nbsp;info@itcraft.in\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Draggable from \"react-draggable\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { Container, Row, Col, Form, Image } from \"react-bootstrap\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport announcement from \"../../assets/announcement.png\";\nimport ShareCard from \"./shareCard.js\";\nimport {\n  getLeft,\n  getTop,\n  getConstantLeft,\n  getFontSize,\n} from \"../useGetPosition\";\nimport useWindowDimensions from \"../dimension\";\nimport { useScreenshot } from \"use-screenshot-hook\";\nimport useOutsideAlerter from \"../useOutsideCatcher\";\nimport \"./home.css\";\nimport SuperHeader from \"../includes/superHeader\";\nimport Footer from \"../includes/footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    color: \"#fff\",\n    borderColor: \"#fff\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  resultOfUlist: {\n    top: 61,\n    position: \"absolute\",\n    zIndex: 1,\n    background: \"#fff\",\n    color: \"#000\",\n    width: \"100%\",\n    maxHeight: 160,\n    overflow: \"hidden\",\n    overflowY: \"auto\",\n  },\n  resultListItem: {\n    padding: \"6px 12px\",\n    borderBottom: \"1px solid #ccc\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#bbb\",\n    },\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction Home() {\n  // refs for checking focused or blured inputs\n  const searchUniversityRef = useRef(null);\n  const searchFriendRef = useRef(null);\n  const isSearchUniversityFocused = useOutsideAlerter(searchUniversityRef);\n  const isSearchFriendFocused = useOutsideAlerter(searchFriendRef);\n\n  const classes = useStyles();\n  const imageRef = React.createRef(null);\n  const [imageRefWidth, setImageRefWidth] = useState(0);\n  const [imageRefHeight, setImageRefHeight] = useState(0);\n  const messageRef = React.createRef(null);\n  const imageWrap = useRef(null);\n  const { image, takeScreenshot } = useScreenshot({ ref: imageWrap });\n  const { width: windowWidth } = useWindowDimensions();\n\n  const handleFontChange = (event) => {\n    setFontFam(event.target.value);\n  };\n  const [duniversityList, setDUniversityList] = useState([]);\n  const [dfriendList, setDFriendList] = useState([]);\n  const [universityList, setUniversityList] = useState([]);\n  const [friendList, setFriendList] = useState([]);\n  const searchFilterFunction = (text, data, setData) => {\n    // Check if searched text is not blank\n    if (text) {\n      // Inserted text is not blank\n      // Filter the masterDataSource\n      // Update FilteredDataSource\n      const newData = data.filter(function (item) {\n        const itemData = item.name ? item.name.toUpperCase() : \"\".toUpperCase();\n        const textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setData(newData);\n    } else {\n      // Inserted text is blank\n      // Update FilteredDataSource with masterDataSource\n      setData(data);\n    }\n  };\n  const [isFriendFocus, setFriendFocus] = useState(false);\n  const [isUlistFocus, setUlistFocus] = useState(false);\n  const [scribbleList, setScribbleList] = useState([]);\n  const [userdata, setUserData] = useState(null);\n  const [friendData, setFriendData] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [messageColor, setMessageColor] = useState(\"#000000\");\n  const [rotateValue, setRotateValue] = useState(0);\n  const [dragBool, setDragBool] = useState(false);\n  const [messageFont, setMessageFont] = useState(\".8em\");\n  const [fontFam, setFontFam] = useState(\"Jazz LET, fantasy\");\n\n  const [tshirtSide, setTshirtSide] = useState(\"front\");\n  const [isFixed, setIsFixed] = useState(false);\n  const [dimensions, setDimensions] = useState({});\n\n  const [openInviteDialog, setInviteDialog] = useState(false);\n  const [openDownloadDialog, setDownloadDialog] = useState(false);\n  const [downloadInput, setDownloadInput] = useState();\n  const [insertVerifyCode, setInsertVerifyCode] = useState(false);\n  const [university, setUniversity] = useState(\"\");\n  const [universityLogo, setUniversityLogo] = useState();\n  const [enterFriendName, setEnterFriendName] = useState(\"\");\n  const [friendLogo, setFriendLogo] = useState();\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [msgSnackbar, setMsgSnackbar] = useState(\"\");\n  const [landingPageBool, setLandingPageBool] = useState(true);\n  const [userDetailsBool, setUserDetailsBool] = useState(false);\n  const [enterEmailBool, setEnterEmailBool] = useState(false);\n  const [loadingBool, setLoadingBool] = useState(false);\n  const [loadingFor, setLoadingFor] = useState(\"\");\n  const [downloadClicked, setDownloadClicked] = useState(false);\n  const [\n    askedForSendVerificationCode,\n    setAskedForSendVerificationCode,\n  ] = useState(false);\n  const [enterPinOrCodeBool, setEnterPinOrCodeBool] = useState(\"pin\");\n  const [signupFormBool, setSignUpformBool] = useState(false);\n  const [newUniversityBool, setNewUniversityBool] = useState(false);\n\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [pinCodeToVerify, setPinCodeToVerify] = useState(\"\");\n  const [codeToCheck, setCodeToCheck] = useState(\"\");\n  const [signupFormInputs, setSignupFormInputs] = useState({});\n  const [activateLoadingIn, setActivateLoadingIn] = useState(\"\");\n  const [newUnivesityName, setNewUniversityName] = useState(\"\");\n  const [newUnivesityLogo, setNewUniversityLogo] = useState();\n  const [newUniversityOnSuccess, setNewUniversityOnSuccess] = useState(\n    \"signup\"\n  );\n  const [avatar, setAvatar] = useState();\n\n  useEffect(() => {\n    setImageRefWidth(imageRef.current.getBoundingClientRect().width);\n    setImageRefHeight(imageRef.current.getBoundingClientRect().height);\n  }, [imageRef, imageRef.current, windowWidth]);\n\n  const { userId } = useParams();\n\n  useEffect(() => {\n    // let search = window.location.search;\n    // let params = new URLSearchParams(search);\n    // const userId = params.get(\"id\");\n    if (userId) {\n      (async () => {\n        const resp = await axios.post(\"/friend/param\", {\n          userId: userId,\n        });\n        if (resp.data && resp.data.found) {\n          const res = resp.data;\n          setUniversity(res.university.name);\n          setUniversityLogo(res.university.logo);\n          setEnterFriendName(res.friendData.name);\n          setFriendLogo(res.friendData.avatar);\n          setFriendData({\n            friendUserId: res.friendData.userId,\n            friendName: res.friendData.name,\n            friendAvatar: res.friendData.avatar,\n          });\n          setScribbleList(res.scribbles);\n        } else {\n          setOpenSnackbar(true);\n          setMsgSnackbar(resp.data.respMessage);\n          setTimeout(() => setOpenSnackbar(false), 3000);\n        }\n      })();\n    }\n\n    (async () => {\n      const resp = await axios.get(\"/check/session\");\n      if (resp.data && resp.data.userdata) {\n        setUserData(resp.data.userdata);\n      }\n    })();\n\n    // fecth university list\n    (async () => {\n      const resp = await axios.get(\"/institute/list\");\n      if (resp.data && resp.data.instituteList) {\n        setUniversityList(\n          resp.data.instituteList.length > 0 ? resp.data.instituteList : []\n        );\n        setDUniversityList(\n          resp.data.instituteList.length > 0 ? resp.data.instituteList : []\n        );\n      }\n    })();\n  }, [landingPageBool]);\n\n  const handleFixClick = () => {\n    if (!friendData) {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\n        \"Please Select a Friend and must write a Scribble message\"\n      );\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      // setDimensions(getPositions);\n      setDimensions(\n        GetPosition(\n          imageRef.current.getBoundingClientRect(),\n          messageRef.current.getBoundingClientRect()\n        )\n      );\n      // console.log(getPositions);\n      // setDimensions(messageRef.current.getBoundingClientRect());\n      // console.log(useGetPosition(getImgWrapperDimensions, getMsgDimensions));\n      setDragBool(true);\n      setIsFixed(true);\n    }\n  };\n\n  function GetPosition(rootDimensions, selfDimensions) {\n    const rootWidth = rootDimensions.width;\n    const rootHeight = rootDimensions.height;\n    const rootX = rootDimensions.x;\n    const rootY = rootDimensions.y;\n    const selfWidth = selfDimensions.width;\n    const selfX = selfDimensions.x;\n    const selfY = selfDimensions.y;\n\n    const xHelperConstant = (selfX - rootX) / rootWidth - 0.0001864 * rootWidth;\n    const yHelperConstant = (selfY - rootY) / rootWidth - 0.0002864 * rootWidth;\n    const left = (100 / rootWidth) * (selfX - rootX) + 3;\n    const top = (100 / rootHeight) * (selfY - rootY);\n\n    return {\n      xHelperConstant,\n      yHelperConstant,\n      left,\n      top,\n    };\n  }\n\n  const download = (imageUrl) => {\n    console.log(imageUrl);\n    if (imageUrl) {\n      const url = imageUrl;\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"scribble.png\"); //or any other extension\n      document.body.appendChild(link);\n      link.click();\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setSignupFormInputs({\n      ...signupFormInputs,\n      [name]: value,\n    });\n  };\n\n  const handleMyScribbleClick = async () => {\n    setLandingPageBool(false);\n    setEnterFriendName(\"\");\n    if (userdata) {\n      setLoadingBool(true);\n      setUserDetailsBool(true);\n      const scribbleResp = await axios.get(\"/get/scribbles\");\n      if (scribbleResp.data) {\n        setScribbleList(scribbleResp.data.scribbleList);\n      }\n      setLoadingBool(false);\n      const universityResp = await axios.post(\"/university/detail\", {\n        university: userdata.university,\n      });\n      if (universityResp.data) {\n        setUniversityLogo(universityResp.data.university.logo);\n      }\n    } else {\n      setEnterEmailBool(true);\n    }\n  };\n\n  const handleSendScribbleForm = async () => {\n    if (userdata) {\n      if (friendData && message && dimensions) {\n        setLoadingBool(true);\n        // save scribble message to db\n        if (friendData.friendName === userdata.name) {\n          setUserDetailsBool(false);\n          setEnterEmailBool(false);\n          setAskedForSendVerificationCode(false);\n          setLandingPageBool(true);\n          setSignUpformBool(false);\n          setNewUniversityBool(false);\n          setEnterPinOrCodeBool(false);\n          setScribbleList([]);\n          setInsertVerifyCode(false);\n          setFriendFocus(false);\n          setUlistFocus(false);\n          setFriendData({});\n          setEnterFriendName(\"\");\n          setFriendLogo();\n          setUniversityLogo();\n          setUniversity(\"\");\n          setMessage(\"\");\n          setOpenSnackbar(true);\n          setMsgSnackbar(\"You cannot send scribble message to yourself\");\n          setTimeout(() => setOpenSnackbar(false), 3000);\n        } else {\n          const resp = await axios.post(\"/save/scribble\", {\n            friendUserId: friendData.friendUserId,\n            friendName: friendData.friendName,\n            friendAvatar: friendData.friendAvatar,\n            dimensions,\n            message,\n            angle: rotateValue,\n            colorCode: messageColor,\n            fontStyle: fontFam,\n            fontSize: messageFont,\n            side: tshirtSide,\n          });\n          setLoadingBool(false);\n          setOpenSnackbar(true);\n          setTimeout(() => setOpenSnackbar(false), 1000);\n          if (resp.data && resp.data.scribbled) {\n            setMsgSnackbar(\"Send Scribble Successfully\");\n          } else {\n            setMsgSnackbar(\"Something went wrong\");\n            setTimeout(() => window.location.reload(), 3000);\n          }\n        }\n      } else {\n        setOpenSnackbar(true);\n        setMsgSnackbar(\"Enter all inputs\");\n        setTimeout(() => setOpenSnackbar(false), 3000);\n      }\n    } else {\n      setLandingPageBool(false);\n      setEnterEmailBool(true);\n    }\n  };\n\n  const handleSendVerificationCode = async () => {\n    if (!inputEmail) alert(\"Insert Email\");\n    else {\n      setActivateLoadingIn(\"send-verification-code\");\n      const resp = await axios.post(\"/email/verify\", {\n        email: inputEmail,\n      });\n      setActivateLoadingIn(\"\");\n      if (resp.data.sent) {\n        setAskedForSendVerificationCode(false);\n        setInsertVerifyCode(true);\n        setEnterPinOrCodeBool(\"code\");\n        setCodeToCheck(resp.data.codeToCheck);\n      } else {\n        alert(resp.data.respMessage);\n      }\n    }\n  };\n\n  const handleVerifyPin = async () => {\n    if (!pinCodeToVerify) alert(\"Insert PIN to verify\");\n    else if (!inputEmail) alert(\"Insert Email first\");\n    else {\n      const resp = await axios.post(\"/login\", {\n        email: inputEmail,\n        pin: pinCodeToVerify,\n      });\n      if (resp.data.loggedIn) {\n        setLandingPageBool(true);\n        setInsertVerifyCode(false);\n        setEnterPinOrCodeBool(\"pin\");\n        setUserData(resp.data.userdata ? resp.data.userdata : null);\n      } else {\n        alert(resp.data.respMessage);\n      }\n    }\n  };\n\n  const handleVerifyCode = async () => {\n    if (!pinCodeToVerify) alert(\"Insert Code to verify\");\n    else if (!inputEmail) alert(\"Insert Email first\");\n    else {\n      if (codeToCheck == pinCodeToVerify) {\n        setInsertVerifyCode(false);\n        setEnterPinOrCodeBool(\"\");\n        setSignUpformBool(true);\n        setPinCodeToVerify(\"\");\n      } else {\n        alert(\"Code not Match\");\n      }\n    }\n  };\n\n  const checkUserAccountWithEmail = async () => {\n    if (!inputEmail) alert(\"Insert Email\");\n    else {\n      const resp = await axios.post(\"/profile\", {\n        inputEmail,\n      });\n      const res = resp.data;\n      setEnterEmailBool(false);\n      if (!res.profile) {\n        setAskedForSendVerificationCode(true);\n      } else {\n        setInsertVerifyCode(true);\n        setEnterPinOrCodeBool(\"pin\");\n      }\n    }\n  };\n\n  const handleSubmitSignupForm = async () => {\n    if (signupFormInputs === {} || signupFormInputs.university === \"other\") {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\"Enter all Inputs\");\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      setLoadingBool(true);\n      let formData = new FormData();\n      formData.set(\"formInput\", JSON.stringify(signupFormInputs));\n      formData.set(\"avatar\", avatar);\n      formData.set(\"email\", inputEmail);\n      const resp = await axios.post(\"/create\", formData);\n      setLoadingBool(false);\n      setOpenSnackbar(true);\n      setMsgSnackbar(resp.data.respMessage);\n      setTimeout(() => setOpenSnackbar(false), 3000);\n      if (resp.data.signUp) {\n        setSignUpformBool(false);\n        setLandingPageBool(true);\n      }\n    }\n  };\n\n  const handleRotateChange = (event, newValue) => {\n    setRotateValue(newValue);\n  };\n\n  const handleInviteOpen = () => {\n    setInviteDialog(true);\n  };\n\n  const handleInviteClose = (value) => {\n    setInviteDialog(false);\n  };\n\n  const handleDownloadOpen = () => {\n    setDownloadDialog(true);\n  };\n\n  const handleDownloadClose = (value) => {\n    setDownloadDialog(false);\n    setDownloadInput(value);\n  };\n\n  const handleNewUniversityForm = async () => {\n    if (!newUnivesityName || !newUnivesityLogo) {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\"Fill all required Inputs\");\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      setLoadingBool(true);\n      const formData = new FormData();\n      formData.set(\"name\", newUnivesityName);\n      formData.set(\"logo\", newUnivesityLogo);\n      const resp = await axios.post(\"/institute/add\", formData);\n      setLoadingBool(false);\n      setOpenSnackbar(true);\n      setTimeout(() => setOpenSnackbar(false), 3000);\n      setMsgSnackbar(resp.data.respMessage);\n      if (resp.data.added && resp.data.institute) {\n        setUniversityList((instituteList) => [\n          ...instituteList,\n          resp.data.institute,\n        ]);\n        if (newUniversityOnSuccess === \"signup\") {\n          setSignUpformBool(true);\n        } else {\n          setLandingPageBool(true);\n        }\n        setNewUniversityBool(false);\n      }\n    }\n  };\n\n  const handleSearchForStudents = async (uni) => {\n    setScribbleList([]);\n    const resp = await axios.post(\"/friends/list\", {\n      university: uni,\n    });\n    if (resp.data && resp.data.friendsList) {\n      setFriendList(\n        resp.data.friendsList.length > 0 ? resp.data.friendsList : []\n      );\n      setDFriendList(\n        resp.data.friendsList.length > 0 ? resp.data.friendsList : []\n      );\n    }\n  };\n\n  const handleOnDragStart = () => {\n    // set\n  };\n\n  function InviteFriend(props) {\n    const { onClose, open } = props;\n    const handleClose = () => {\n      onClose();\n    };\n\n    return (\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        <ShareCard userdata={userdata ? userdata : null} />\n      </Dialog>\n    );\n  }\n\n  InviteFriend.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n  };\n  function DownloadForm(props) {\n    const { onClose, selectedValue, open, image } = props;\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n\n    return (\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        <div style={{ padding: 12, display: \"flex\", flexDirection: \"column\" }}>\n          {image ? (\n            <img src={image} alt=\"Scribble Preview\" />\n          ) : (\n            <CircularProgress style={{ margin: \"9px auto\" }} />\n          )}\n          <Button\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"#0A0\",\n              marginInline: 10,\n              color: \"#fff\",\n            }}\n          >\n            <span className={\"fa fa-download\"}></span>\n            Download\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n\n  DownloadForm.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n  };\n\n  return (\n    <div className={\"appbody\"}>\n      <SuperHeader />\n\n      <div className={\"main\"}>\n        <div className={\"center scribble-imgbox\"}>\n          <div className=\"row\" style={{ width: \"100%\" }}>\n            <div className={\"column\"}></div>\n            <div className={\"column\"}>\n              <div>\n                <Image\n                  src={\n                    \"https://scribble2021.s3.ap-south-1.amazonaws.com/ScribbleDayLogo2021.png\"\n                  }\n                  height=\"200px\"\n                  alt=\"logo\"\n                />\n              </div>\n            </div>\n            <div className={\"column\"}>\n              <div\n                className=\"details-of-site\"\n                style={{ marginTop: \"50px\", float: \"left\" }}\n              >\n                <div className=\"part\">\n                  <ButtonGroup\n                    disableElevation\n                    aria-label=\"contained\"\n                    disabled={isFixed ? true : false}\n                  >\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setTshirtSide(\"front\");\n                      }}\n                    >\n                      Front\n                    </Button>\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setTshirtSide(\"back\");\n                      }}\n                    >\n                      Back\n                    </Button>\n                  </ButtonGroup>\n                </div>\n                <div className=\"part d-sm-none\">\n                  <ButtonGroup disableElevation variant=\"contained\">\n                    <Button href=\"#formboxbysend\" color=\"primary\">\n                      Send Scribble\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </div>\n\n              <div\n                style={{ textAlign: \"center\" }}\n                className=\"d-none d-sm-block\"\n              >\n                {userdata && userDetailsBool && (\n                  <>\n                    <Button\n                      onClick={async () => {\n                        setDownloadClicked(!downloadClicked);\n                        if (!downloadClicked) {\n                          setLoadingFor(\"downloadTshirt\");\n                          await takeScreenshot();\n                          setTimeout(() => setLoadingFor(\"\"), 1000);\n                        } else {\n                          setLoadingFor(\"downloadTshirt\");\n                          await takeScreenshot();\n                          const clear = setInterval(async () => {\n                            if (true) {\n                              const imageBool = await download(image);\n                              if (imageBool) {\n                                setLoadingFor(\"\");\n                                clearInterval(clear);\n                              }\n                            }\n                          }, 3000);\n                        }\n                      }}\n                      style={{\n                        backgroundColor: \"#0A0\",\n                        marginInline: 10,\n                        color: \"#fff\",\n                      }}\n                    >\n                      {loadingFor === \"downloadTshirt\" ? (\n                        <CircularProgress\n                          size={20}\n                          style={{ color: \"white\" }}\n                        />\n                      ) : (\n                        <>\n                          <span className={\"fa fa-download\"}> </span>\n                          {downloadClicked ? \"Click to Download\" : \"Download\"}\n                        </>\n                      )}\n                    </Button>\n                    <DownloadForm\n                      insertVerifyCode={insertVerifyCode}\n                      selectedValue={downloadInput}\n                      open={openDownloadDialog}\n                      onClose={handleDownloadClose}\n                      image={image}\n                    />\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => handleDownloadOpen()}\n                      style={{\n                        backgroundColor: \"#05ABFF\",\n                        marginInline: 10,\n                        color: \"#fff\",\n                      }}\n                    >\n                      <span className={\"fa fa-user\"}></span>\n                      Preview\n                    </Button>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row mb-view\">\n          {/* LEFT COLUMN */}\n          <div className={\"column\"}>\n            <div className={\"row justify-content-center form1\"}>\n              <div className={\"col-12 col-sm-10 col-lg-8 d-flex flex-column\"}>\n                <div style={{ padding: \"1rem\" }}>\n                  <HomeIcon\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                  />\n                  {userDetailsBool && userdata && (\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={async () => {\n                        const resp = await axios.get(\"/logout\");\n                        if (resp.data.loggedout) {\n                          setUserDetailsBool(false);\n                          setLandingPageBool(true);\n                          setUserData(null);\n                        } else {\n                          setOpenSnackbar(true);\n                          setMsgSnackbar(\"You're not logged in!\");\n                          setTimeout(() => setOpenSnackbar(false), 3000);\n                        }\n                      }}\n                      style={{\n                        backgroundColor: \"#1C3750\",\n                        color: \"rgba(255,255,255,.4)\",\n                        marginInline: 20,\n                      }}\n                    >\n                      <span>Logout</span>\n                    </Button>\n                  )}\n                </div>\n                <div\n                  className=\"formBox row align-items-center\"\n                  id=\"formboxbysend\"\n                >\n                  <hr />\n                  {landingPageBool && (\n                    <>\n                      <div className=\"col-12\"></div>\n                      <div className=\"formAvatarGroup col-12\">\n                        <div\n                          id=\"un\"\n                          style={{\n                            position: \"relative\",\n                            width: \"100%\",\n                            zIndex: 3,\n                          }}\n                          ref={searchUniversityRef}\n                        >\n                          <Typography\n                            gutterBottom\n                            style={{\n                              fontSize: \"0.8em\",\n                              color: \"#71E2F0\",\n                              cursor: \"pointer\",\n                              float: \"right\",\n                            }}\n                            onClick={() => {\n                              setNewUniversityBool(true);\n                              setLandingPageBool(false);\n                              setNewUniversityOnSuccess(\"landingPage\");\n                            }}\n                          >\n                            Didn't find University?\n                          </Typography>\n                          <Form.Control\n                            className={\" form\"}\n                            type=\"text\"\n                            placeholder=\"Search University\"\n                            name=\"message\"\n                            maxLength={250}\n                            value={university}\n                            onFocus={() => {\n                              setUlistFocus(true);\n                              setFriendFocus(false);\n                            }}\n                            onBlur={() => {\n                              if (!isSearchUniversityFocused) {\n                                setUlistFocus(false);\n                              }\n                            }}\n                            onChange={(e) => {\n                              setIsFixed(false);\n                              setDragBool(false);\n                              searchFilterFunction(\n                                e.target.value,\n                                duniversityList,\n                                setUniversityList\n                              );\n                            }}\n                            required\n                          />\n                          <div className={classes.resultOfUlist}>\n                            {isUlistFocus && (\n                              <>\n                                {universityList.length > 0 &&\n                                  universityList.map((uObj) => (\n                                    <div\n                                      className={classes.resultListItem}\n                                      onClick={() => {\n                                        setUniversity(uObj.name);\n                                        setUlistFocus(false);\n                                        setUniversityLogo(uObj.logo);\n                                        handleSearchForStudents(uObj.name);\n\n                                        // reset friend data\n\n                                        setFriendData({});\n                                        setEnterFriendName(\"\");\n                                        setFriendLogo();\n                                        setFriendFocus(false);\n                                      }}\n                                    >\n                                      {uObj.name}\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                        <Avatar\n                          style={{ marginLeft: 12 }}\n                          alt=\"U\"\n                          src={\n                            universityLogo\n                              ? universityLogo\n                              : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn0.iconfinder.com%2Fdata%2Ficons%2Fbuildings-1%2F128%2F29-512.png&f=1&nofb=1\"\n                          }\n                        />\n                      </div>\n\n                      <div className=\"col-12\">\n                        <InviteFriend\n                          open={openInviteDialog}\n                          onClose={handleInviteClose}\n                        />\n                      </div>\n                      <div className=\"formAvatarGroup col-12\">\n                        <div\n                          id=\"fd\"\n                          style={{\n                            position: \"relative\",\n                            width: \"100%\",\n                            zIndex: 2,\n                          }}\n                          ref={searchFriendRef}\n                        >\n                          <Typography\n                            gutterBottom\n                            style={{\n                              fontSize: \"0.8em\",\n                              color: \"#71E2F0\",\n                              cursor: \"pointer\",\n                              float: \"right\",\n                            }}\n                            onClick={handleInviteOpen}\n                          >\n                            Didn't find your Friend?\n                          </Typography>\n                          <Form.Control\n                            className={\" form\"}\n                            type=\"text\"\n                            placeholder=\"Search Friend\"\n                            name=\"friendname\"\n                            maxLength={250}\n                            col-12\n                            col-sm-8\n                            col-md-9\n                            value={enterFriendName}\n                            onFocus={() => {\n                              setFriendFocus(true);\n                              setUlistFocus(false);\n                            }}\n                            onBlur={() => {\n                              if (!isSearchFriendFocused) {\n                                setFriendFocus(false);\n                              }\n                            }}\n                            onChange={(e) => {\n                              searchFilterFunction(\n                                e.target.value,\n                                dfriendList,\n                                setFriendList\n                              );\n                            }}\n                            required\n                          />\n                          <div className={classes.resultOfUlist}>\n                            {isFriendFocus &&\n                              friendList.length > 0 &&\n                              friendList.map((uObj) => (\n                                <div\n                                  className={classes.resultListItem}\n                                  onClick={async () => {\n                                    setFriendData({\n                                      friendUserId: uObj.userId,\n                                      friendName: uObj.name,\n                                      friendAvatar: uObj.avatar,\n                                    });\n                                    setEnterFriendName(uObj.name);\n                                    setFriendLogo(uObj.avatar);\n                                    setFriendFocus(false);\n                                    // find user's scribble\n                                    const scribbleResp = await axios.post(\n                                      \"/friends/scribbles\",\n                                      {\n                                        userId: uObj.userId,\n                                      }\n                                    );\n                                    if (scribbleResp.data) {\n                                      setScribbleList(\n                                        scribbleResp.data.scribbleList\n                                      );\n                                    }\n                                  }}\n                                >\n                                  {uObj.name}\n                                </div>\n                              ))}\n                          </div>\n                        </div>\n                        <Avatar\n                          style={{ marginLeft: 12 }}\n                          alt=\"F\"\n                          src={\n                            friendLogo\n                              ? friendLogo\n                              : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.k6V8n31jhsNraAUlXqwNgQHaHa%26pid%3DApi&f=1\"\n                          }\n                        />\n                      </div>\n                      {/* <TextField\n                        className={\"col-12 col-sm-8 col-md-9 form\"}\n                        color=\"default\"\n                        label=\"scribble message\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        maxLength={250}\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                      /> */}\n\n                      <Form.Control\n                        className={\"col-12 form\"}\n                        type=\"text\"\n                        placeholder=\"Scribble Message\"\n                        name=\"message\"\n                        maxLength={250}\n                        multiple={true}\n                        as=\"textarea\"\n                        onChange={(e) => setMessage(e.target.value)}\n                        required\n                      />\n                      {isFixed ? (\n                        <>\n                          <Button\n                            variant=\"contained\"\n                            onClick={() => {\n                              setDragBool(false);\n                              setIsFixed(false);\n                            }}\n                            color=\"default\"\n                          >\n                            Edit Again\n                          </Button>\n                        </>\n                      ) : (\n                        <>\n                          <div>\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#f00000\")}\n                              style={{ color: \"#f00000\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#07c603\")}\n                              style={{ color: \"#07c603\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#05abff\")}\n                              style={{ color: \"#05abff\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#ead300\")}\n                              style={{ color: \"#ead300\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#ff8300\")}\n                              style={{ color: \"#ff8300\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#9605ff\")}\n                              style={{ color: \"#9605ff\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#ff05fa\")}\n                              style={{ color: \"#ff05fa\" }}\n                            />\n                            <div\n                              className={\"rotate-slider\"}\n                              style={{\n                                margin: \"1rem 0\",\n                              }}\n                            >\n                              <Typography\n                                gutterBottom\n                                style={{ fontSize: \"0.9em\", color: \"#FC88DF\" }}\n                              >\n                                Rotate Scribble Message\n                              </Typography>\n                              <Slider\n                                ValueLabelComponent={ValueLabelComponent}\n                                aria-label=\"custom thumb label\"\n                                value={rotateValue}\n                                min={-180}\n                                max={180}\n                                style={{ color: \"white\" }}\n                                onChange={handleRotateChange}\n                              />\n                            </div>\n                          </div>\n                        </>\n                      )}\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          padding: \"0 12px\",\n                        }}\n                      >\n                        {!isFixed && (\n                          <FormControl\n                            variant=\"outlined\"\n                            className={classes.formControl}\n                          >\n                            <InputLabel\n                              color=\"primary\"\n                              classes={{\n                                outlined: { color: \"#fff\" },\n                              }}\n                              id=\"demo-simple-select-outlined-label\"\n                              style={{ color: \"#ddd\" }}\n                            >\n                              Select Font\n                            </InputLabel>\n                            <Select\n                              labelId=\"demo-simple-select-outlined-label\"\n                              id=\"demo-simple-select-outlined\"\n                              value={fontFam}\n                              onChange={handleFontChange}\n                              label=\"Font\"\n                              style={{\n                                backgroundColor: \"#1A354E\",\n                              }}\n                            >\n                              <MenuItem value=\"\">\n                                <em>Select form</em>\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily:\n                                    \"Comic Sans MS, Comic Sans, cursive\",\n                                }}\n                                value={\"Comic Sans MS, Comic Sans, cursive\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily:\n                                    \"Brush Script MT, Brush Script Std, cursive\",\n                                }}\n                                value={\n                                  \"Brush Script MT, Brush Script Std, cursive\"\n                                }\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"Trattatello, fantasy\",\n                                }}\n                                value={\"Trattatello, fantasy\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"Jazz LET, fantasy\",\n                                }}\n                                value={\"Jazz LET, fantasy\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"Courier New, monospace\",\n                                }}\n                                value={\"Courier New, monospace\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"OCR A Std, monospace\",\n                                }}\n                                value={\"OCR A Std, monospace\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"cursive\",\n                                }}\n                                value={\"cursive\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                            </Select>\n                          </FormControl>\n                        )}\n                        <Button\n                          variant=\"contained\"\n                          onClick={() => {\n                            if (isFixed) {\n                              if (!userdata) {\n                                setOpenSnackbar(true);\n                                setMsgSnackbar(\"Login first to give Scribble\");\n                                setLandingPageBool(false);\n                                setEnterEmailBool(true);\n                                setTimeout(() => setOpenSnackbar(false), 6000);\n                              } else if (\n                                window.confirm(\n                                  \"You won't be able to edit again. Are you sure to continue?\"\n                                )\n                              ) {\n                                handleSendScribbleForm();\n                              }\n                            } else {\n                              setOpenSnackbar(true);\n                              setMsgSnackbar(\n                                \"Click on 'fix' below the Message on tshirt to continue...\"\n                              );\n                              setTimeout(() => setOpenSnackbar(false), 6000);\n                            }\n                          }}\n                          color=\"primary\"\n                        >\n                          {loadingBool ? (\n                            <CircularProgress\n                              size={30}\n                              style={{ color: \"white\" }}\n                            />\n                          ) : (\n                            \"Submit\"\n                          )}\n                        </Button>\n                      </div>\n                      <div\n                        style={{\n                          width: \"100%\",\n                          height: 1,\n                          margin: \"12px 0 16px\",\n                          backgroundColor: \"#ccc\",\n                        }}\n                      />\n                      <div className=\"boxWrapper\">\n                        <Button\n                          variant=\"contained\"\n                          onClick={handleMyScribbleClick}\n                          style={{ backgroundColor: \"#ED72C0\", color: \"#fff\" }}\n                        >\n                          {userdata ? \"My Scribble\" : \"Sign In\"}\n                        </Button>\n                      </div>\n                    </>\n                  )}\n                  {userDetailsBool &&\n                    userdata &&\n                    (loadingBool ? (\n                      <CircularProgress />\n                    ) : (\n                      <>\n                        <div className=\"detailWrapper\">\n                          <label>{userdata.name}</label>\n                          <label>{userdata.email}</label>\n                          <label>{userdata.university}</label>\n                        </div>\n                        <div className=\"detailWrapper\">\n                          <label>Scribbles Messages Received</label>\n                          <div\n                            style={{\n                              width: \"100%\",\n                              height: 1,\n                              margin: \"12px 0 16px\",\n                              backgroundColor: \"#999\",\n                            }}\n                          />\n                          <div\n                            style={{\n                              overflowY: \"scroll\",\n                              maxHeight: \"200px\",\n                            }}\n                          >\n                            {scribbleList.length > 0 ? (\n                              scribbleList.map((scribble) => (\n                                <div\n                                  key={scribble._id}\n                                  style={{\n                                    fontSize: \"14px\",\n                                  }}\n                                >\n                                  <CardHeader\n                                    avatar={\n                                      <Avatar\n                                        aria-label=\"recipe\"\n                                        className={classes.avatar}\n                                        src={scribble.sendByAvatar}\n                                      ></Avatar>\n                                    }\n                                    title={scribble.sendByName}\n                                    subheader={scribble.message}\n                                  />\n                                  <div\n                                    style={{\n                                      width: \"100%\",\n                                      height: 1,\n                                      margin: \"12px 0 16px\",\n                                      backgroundColor: \"#555\",\n                                    }}\n                                  />\n                                </div>\n                              ))\n                            ) : (\n                              <p style={{ color: \"rgba(255,255,255,0.5)\" }}>\n                                You didn't received any scribble yet!\n                                <br /> Invite your friends to write scribbles\n                                for you.\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"part\">\n                          <a href={image}>\n                            <Button\n                              variant=\"contained\"\n                              onClick={() => {\n                                navigator.clipboard.writeText(\n                                  \"Hey dear friend, Lets Celebrate Scribble Day 2021 virtullay together | Write a Scribble Message for me || www.thirsty-goldwasser-7273c9.netlify.app/\"\n                                );\n                                setOpenSnackbar(true);\n                                setMsgSnackbar(\n                                  \"Copied text to share on Instagram\"\n                                );\n                                setTimeout(() => setOpenSnackbar(false), 1000);\n                              }}\n                              style={{\n                                backgroundColor: \"#8A374A\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-instagram\"}></span>\n                            </Button>\n                          </a>\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://www.linkedin.com/shareArticle?url=www.thirsty-goldwasser-7273c9.netlify.app/%20&title=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20\"\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#2E73AD\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-linkedin\"}></span>\n                            </Button>\n                          </a>\n                          <Button\n                            variant=\"contained\"\n                            style={{\n                              backgroundColor: \"#4095ED\",\n                              color: \"#fff\",\n                            }}\n                            onClick={() => {\n                              window.open(\n                                \"https://www.facebook.com/sharer/sharer.php?u=https%3A//thirsty-goldwasser-7273c9.netlify.app\"\n                              );\n                              return false;\n                            }}\n                          >\n                            <span className={\"fa fa-facebook\"}></span>\n                          </Button>\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={\n                              \"https://twitter.com/intent/tweet?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%0A%0A%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%0A%0AWrite%20a%20Scribble%20for%20me%20%0A%0Ahttps%3A//thirsty-goldwasser-7273c9.netlify.app/u/\" +\n                              userdata.userId +\n                              \"%20%0A%0A%23scribbleday2021%20\"\n                            }\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#05ABFF\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-twitter\"}></span>\n                            </Button>\n                          </a>\n                          <a\n                            href=\"https://web.whatsapp.com/send?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20%20%20https%3A//thirsty-goldwasser-7273c9.netlify.app/%20%20%20#scribbleday2021%20%20\"\n                            data-action=\"share/whatsapp/share\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#0DC143\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-whatsapp\"}></span>\n                            </Button>\n                          </a>\n                        </div>\n                      </>\n                    ))}\n                  {insertVerifyCode && (\n                    <>\n                      <FormControl\n                        className={\"col-12 col-sm-8 col-md-9 form\"}\n                        style={{ padding: 20 }}\n                      >\n                        <Input\n                          style={{ color: \"white\" }}\n                          id=\"input-with-icon-adornment\"\n                          placeholder={\n                            enterPinOrCodeBool === \"pin\"\n                              ? \"Enter PIN\"\n                              : \"Verification Code\"\n                          }\n                          variant=\"filled\"\n                          onChange={(e) => setPinCodeToVerify(e.target.value)}\n                          startAdornment={\n                            <InputAdornment position=\"start\">\n                              <VpnKeyIcon />\n                            </InputAdornment>\n                          }\n                          endAdornment={\n                            <InputAdornment\n                              position=\"end\"\n                              onClick={\n                                enterPinOrCodeBool === \"pin\"\n                                  ? handleVerifyPin\n                                  : handleVerifyCode\n                              }\n                            >\n                              {loadingBool ? (\n                                <CircularProgress\n                                  size={30}\n                                  style={{ color: \"white\" }}\n                                />\n                              ) : (\n                                <SendIcon style={{ cursor: \"pointer\" }} />\n                              )}\n                            </InputAdornment>\n                          }\n                        />\n                      </FormControl>\n                    </>\n                  )}\n                  {askedForSendVerificationCode && (\n                    <div className=\"boxWrapper\">\n                      <Button\n                        variant=\"contained\"\n                        onClick={handleSendVerificationCode}\n                      >\n                        {activateLoadingIn === \"send-verification-code\" ? (\n                          <CircularProgress size={25} />\n                        ) : (\n                          \"Send Verification Code\"\n                        )}\n                      </Button>\n                      <span class=\"previewText\">to {inputEmail}</span>\n                    </div>\n                  )}\n                  {enterEmailBool && (\n                    <FormControl\n                      className={\"col-12 col-sm-8 col-md-9 form\"}\n                      style={{ padding: 20 }}\n                    >\n                      <Input\n                        id=\"input-with-icon-adornment\"\n                        style={{ color: \"white\" }}\n                        placeholder=\"Email\"\n                        variant=\"filled\"\n                        onChange={(e) => setInputEmail(e.target.value)}\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <AccountCircle />\n                          </InputAdornment>\n                        }\n                        endAdornment={\n                          <InputAdornment\n                            position=\"end\"\n                            onClick={checkUserAccountWithEmail}\n                          >\n                            {loadingBool ? (\n                              <CircularProgress\n                                size={30}\n                                style={{ color: \"white\" }}\n                              />\n                            ) : (\n                              <SendIcon style={{ cursor: \"pointer\" }} />\n                            )}\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  )}\n                  {signupFormBool && !userdata && (\n                    <>\n                      <div className=\"col-12 col-sm-11 col-lg-9 row\">\n                        <FormControl\n                          variant=\"filled\"\n                          className={classes.formControl}\n                          style={{ width: \"100%\", margin: \"12px 0\" }}\n                        >\n                          <InputLabel\n                            id=\"demo-simple-select-filled-label\"\n                            style={{ color: \"white\" }}\n                          >\n                            Select University\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-filled-label\"\n                            id=\"demo-simple-select-filled\"\n                            name=\"university\"\n                            value={signupFormInputs.university}\n                            onChange={handleInputChange}\n                          >\n                            {universityList.length > 0 &&\n                              universityList.map((university) => (\n                                <MenuItem value={university.name}>\n                                  {university.name}\n                                </MenuItem>\n                              ))}\n                            <MenuItem\n                              value={\"other\"}\n                              onClick={() => {\n                                setNewUniversityBool(true);\n                                setSignUpformBool(false);\n                                setNewUniversityOnSuccess(\"signup\");\n                              }}\n                            >\n                              Other\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n                        <Form.Control\n                          className={\"col-12 form\"}\n                          type=\"text\"\n                          placeholder=\"Your fullname\"\n                          maxLength={250}\n                          name=\"name\"\n                          value={signupFormInputs.name}\n                          onChange={handleInputChange}\n                          required\n                        />\n\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">Gender</FormLabel>\n                          <RadioGroup\n                            aria-label=\"gender\"\n                            name=\"gender\"\n                            value={signupFormInputs.gender}\n                            onChange={handleInputChange}\n                            style={{ flexDirection: \"row\" }}\n                          >\n                            <FormControlLabel\n                              value=\"female\"\n                              control={<Radio />}\n                              label=\"Female\"\n                            />\n                            <FormControlLabel\n                              value=\"male\"\n                              control={<Radio />}\n                              label=\"Male\"\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                        <Form.Control\n                          className={\"col-12 form\"}\n                          type=\"text\"\n                          placeholder=\"Enter a 4 digit's PIN\"\n                          name=\"pin\"\n                          value={signupFormInputs.pin}\n                          onChange={handleInputChange}\n                          maxLength={4}\n                          required\n                        />\n\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          hidden=\"true\"\n                          onChange={(e) => setAvatar(e.target.files[0])}\n                          id=\"avatar\"\n                        />\n                        <label for=\"avatar\" style={{ width: \"100%\" }}>\n                          <div\n                            className=\"file-upload-control\"\n                            style={{\n                              background: \"#e52e71\",\n                              padding: \"0.5rem 2rem\",\n                              borderRadius: 8,\n                              display: \"inline-flex\",\n                              alignItems: \"center\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            <CloudUploadIcon />\n                            <span style={{ marginLeft: 12 }}>\n                              upload profile picture\n                            </span>\n                          </div>\n                        </label>\n                        <Button\n                          variant=\"contained\"\n                          onClick={handleSubmitSignupForm}\n                        >\n                          {loadingBool ? (\n                            <CircularProgress style={{ margin: \"9px auto\" }} />\n                          ) : (\n                            \"Submit\"\n                          )}\n                        </Button>\n                      </div>\n                    </>\n                  )}\n                  {newUniversityBool && (\n                    <>\n                      <Form.Control\n                        className={\"col-12 form\"}\n                        type=\"text\"\n                        placeholder=\"Univesity Name\"\n                        name=\"newuniversity\"\n                        maxLength={250}\n                        value={newUnivesityName}\n                        onChange={(e) => setNewUniversityName(e.target.value)}\n                        required\n                      />\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        hidden=\"true\"\n                        onChange={(e) =>\n                          setNewUniversityLogo(e.target.files[0])\n                        }\n                        id=\"newuniversitylogo\"\n                      />\n                      <label for=\"newuniversitylogo\" style={{ width: \"100%\" }}>\n                        <div\n                          className=\"file-upload-control\"\n                          style={{\n                            background: \"#e52e71\",\n                            padding: \"0.5rem 2rem\",\n                            borderRadius: 8,\n                            display: \"inline-flex\",\n                            alignItems: \"center\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          <CloudUploadIcon />\n                          <span style={{ marginLeft: 12 }}>Upload Logo</span>\n                        </div>\n                      </label>\n\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleNewUniversityForm}\n                      >\n                        {loadingBool ? (\n                          <CircularProgress\n                            size={30}\n                            style={{ color: \"white\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </Button>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div\n              style={{ textAlign: \"center\", marginBottom: \"1rem\" }}\n              className=\"d-block d-sm-none\"\n            >\n              {userdata && userDetailsBool && (\n                <>\n                  <Button\n                    onClick={async () => {\n                      setDownloadClicked(!downloadClicked);\n                      if (!downloadClicked) {\n                        setLoadingFor(\"downloadTshirt\");\n                        await takeScreenshot();\n                        setTimeout(() => setLoadingFor(\"\"), 1000);\n                      } else {\n                        setLoadingFor(\"downloadTshirt\");\n                        await takeScreenshot();\n                        const clear = setInterval(async () => {\n                          if (true) {\n                            const imageBool = await download(image);\n                            if (imageBool) {\n                              setLoadingFor(\"\");\n                              clearInterval(clear);\n                            }\n                          }\n                        }, 3000);\n                      }\n                    }}\n                    style={{\n                      backgroundColor: \"#0A0\",\n                      marginInline: 10,\n                      color: \"#fff\",\n                    }}\n                  >\n                    {loadingFor === \"downloadTshirt\" ? (\n                      <CircularProgress size={20} style={{ color: \"white\" }} />\n                    ) : (\n                      <>\n                        <span className={\"fa fa-download\"}> </span>\n                        {downloadClicked ? \"Click to Download\" : \"Download\"}\n                      </>\n                    )}\n                  </Button>\n                  <DownloadForm\n                    insertVerifyCode={insertVerifyCode}\n                    selectedValue={downloadInput}\n                    open={openDownloadDialog}\n                    onClose={handleDownloadClose}\n                    image={image}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => handleDownloadOpen()}\n                    style={{\n                      backgroundColor: \"#05ABFF\",\n                      marginInline: 10,\n                      color: \"#fff\",\n                    }}\n                  >\n                    <span className={\"fa fa-user\"}></span>\n                    Preview\n                  </Button>\n                </>\n              )}\n            </div>\n            <h3\n              className={\"center text-center\"}\n              style={{\n                color: \"#FF8AE2\",\n                fontFamily: \"sans\",\n                textAlign: \"left\",\n              }}\n            >\n              A Day worth Remembering\n            </h3>\n            <div className=\"details-of-site\">\n              <div className=\"part\">\n                <div>\n                  <a\n                    href={\"https://rzp.io/l/Up18AjAWH\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => handleDownloadOpen(\"download\")}\n                      style={{ backgroundColor: \"#0A0\", color: \"#fff\" }}\n                    >\n                      <span className={\"fa fa-shopping-cart\"}></span>\n                      Place Order\n                    </Button>\n                  </a>\n                </div>\n              </div>\n\n              <div className=\"part\">\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleInviteOpen}\n                    style={{ backgroundColor: \"#05ABFF\", color: \"#fff\" }}\n                  >\n                    <span className={\"fa fa-share\"}></span>\n                    Invite Friend\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <footer\n              className={\"center\"}\n              style={{\n                textAlign: \"center\",\n                width: \"70%\",\n                transform: \"translate(20%, 0%)\",\n              }}\n            >\n              <p>\n                Spread the happiness among your friends, juniors, seniors and\n                connections to celebrate this year's\n                <a\n                  href=\"https://hacktoberfest.digitalocean.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Scribble Day\n                </a>\n              </p>\n            </footer>\n          </div>\n          <div className={\"column\"}>\n            {/* RIGHT COLUMN */}\n\n            <div className={\"scribble-image1\"} ref={imageWrap}>\n              {tshirtSide === \"front\" ? (\n                <Image\n                  alt=\"tshirt demo\"\n                  src={require(\"../../assets/malefront.png\")}\n                  className={\"male-front\"}\n                  ref={imageRef}\n                />\n              ) : (\n                <Image\n                  alt=\"tshirt demo\"\n                  src={require(\"../../assets/maleback.png\")}\n                  className={\"male-front\"}\n                  ref={imageRef}\n                />\n              )}\n              <div className={\"university-logo\"}>\n                <Avatar\n                  style={{\n                    width: getFontSize(60, imageRefWidth),\n                    height: getFontSize(60, imageRefWidth),\n                  }}\n                  alt=\"U\"\n                  src={\n                    universityLogo\n                      ? universityLogo\n                      : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn0.iconfinder.com%2Fdata%2Ficons%2Fbuildings-1%2F128%2F29-512.png&f=1&nofb=1\"\n                  }\n                />\n              </div>\n              {scribbleList\n                .filter((item) => item.side === tshirtSide)\n                .map((scribble) => (\n                  <p\n                    key={scribble._id}\n                    style={{\n                      textAlign: \"center\",\n                      rotate: scribble.angle + \"deg\",\n                      color: scribble.colorCode,\n                      fontSize: getFontSize(scribble.fontSize, imageRefWidth),\n                      fontFamily: scribble.fontStyle,\n                      position: \"absolute\",\n                      // transform: `scale(${(imageRefWidth/616)+0.204})`,\n                      top: `${scribble.dimensions.top}%`,\n                      left: `${scribble.dimensions.left}%`,\n                      width: \"25%\",\n                    }}\n                  >\n                    {scribble.message}\n                    <span>\n                      <br />~ {scribble.sendByName}\n                    </span>\n                  </p>\n                ))}\n              <Draggable\n                bounds=\"parent\"\n                disabled={dragBool}\n                onStart={handleOnDragStart}\n              >\n                <div\n                  className={\"scribble-message1\"}\n                  style={\n                    !dragBool && !userDetailsBool\n                      ? {\n                          border: \"1px solid rgb(233, 233, 233)\",\n                        }\n                      : {\n                          border: \"none\",\n                          backgroundColor: \"transparent\",\n                        }\n                  }\n                >\n                  {enterFriendName ? (\n                    <>\n                      <div\n                        style={{\n                          rotate: rotateValue + \"deg\",\n                          color: messageColor,\n                          fontSize: getFontSize(messageFont, imageRefWidth),\n                          fontFamily: fontFam,\n                          cursor: dragBool ? \"default\" : \"move\",\n                        }}\n                      >\n                        <p ref={messageRef}>\n                          {message ? message : \"Scribble Message\"}\n                          <span>\n                            <br />~ {userdata ? userdata.name : \"Your name\"}\n                          </span>\n                        </p>\n                      </div>\n                      {!dragBool && (\n                        <>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => handleFixClick()}\n                          >\n                            fix\n                          </div>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => setMessageFont(\".4em\")}\n                          >\n                            1\n                          </div>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => setMessageFont(\".5em\")}\n                          >\n                            2\n                          </div>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => setMessageFont(\".6em\")}\n                          >\n                            3\n                          </div>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => setMessageFont(\".7em\")}\n                          >\n                            4\n                          </div>\n                        </>\n                      )}\n                    </>\n                  ) : userDetailsBool ? (\n                    <></>\n                  ) : (\n                    <div\n                      style={{\n                        rotate: rotateValue + \"deg\",\n                        color: messageColor,\n                        fontSize: messageFont,\n                        cursor: dragBool ? \"default\" : \"move\",\n                      }}\n                    >\n                      <p>Select a Friend to write a Scribble message</p>\n                    </div>\n                  )}\n                </div>\n              </Draggable>\n            </div>\n\n            {/* remove draggable from here to above */}\n          </div>\n        </div>\n      </div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        autoHideDuration={1000}\n        message={msgSnackbar}\n      />\n      <Footer />\n    </div>\n  );\n}\nexport default Home;\n","import React from \"react\";\n\nimport Footer from \"../../includes/footer\";\nimport SuperHeader from \"../../includes/superHeader\";\nimport \"./about.css\";\n\nexport default function About() {\n  return (\n    <div className=\"about-cont\">\n      <SuperHeader />\n      <div className=\"\">\n        <div className=\"container py-5\">\n          <div className=\"row h-100 align-items-center py-5\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"display-4\">About us page</h1>\n              <p className=\"lead text-muted mb-0\">\n                Create a minimal about us page using Bootstrap 4.\n              </p>\n              <p className=\"lead text-muted\">\n                Snippet by{\" \"}\n                <a\n                  href=\"https://bootstrapious.com/snippets\"\n                  className=\"text-muted\"\n                >\n                  <u>Bootstrapious</u>\n                </a>\n              </p>\n            </div>\n            <div className=\"col-lg-6 d-none d-lg-block\">\n              <img\n                src=\"https://scribble2021.s3.ap-south-1.amazonaws.com/ScribbleDayLogo2021.png\"\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"about-section-2 py-5\">\n        <div className=\"container py-5\">\n          <div className=\"row align-items-center mb-5\">\n            <div className=\"col-lg-6 order-2 order-lg-1\">\n              <i className=\"fa fa-bar-chart fa-2x mb-3 text-primary\"></i>\n              <h2 className=\"font-weight-light\">Lorem ipsum dolor sit amet</h2>\n              <p className=\"font-italic text-muted mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n              <a href=\"#\" className=\"btn btn-light px-5 rounded-pill shadow-sm\">\n                Learn More\n              </a>\n            </div>\n            <div className=\"col-lg-5 px-5 mx-auto order-1 order-lg-2\">\n              <img\n                src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834139/img-1_e25nvh.jpg\"\n                alt=\"\"\n                className=\"img-fluid mb-4 mb-lg-0\"\n              />\n            </div>\n          </div>\n          <div className=\"row align-items-center\">\n            <div className=\"col-lg-5 px-5 mx-auto\">\n              <img\n                src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834136/img-2_vdgqgn.jpg\"\n                alt=\"\"\n                className=\"img-fluid mb-4 mb-lg-0\"\n              />\n            </div>\n            <div className=\"col-lg-6\">\n              <i className=\"fa fa-leaf fa-2x mb-3 text-primary\"></i>\n              <h2 className=\"font-weight-light\">Lorem ipsum dolor sit amet</h2>\n              <p className=\"font-italic text-muted mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n              <a href=\"#\" className=\"btn btn-light px-5 rounded-pill shadow-sm\">\n                Learn More\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\" py-5\">\n        <div className=\"container py-5\">\n          <div className=\"row mb-4\">\n            <div className=\"col-lg-5\">\n              <h2 className=\"display-4 font-weight-light\">Our team</h2>\n              <p className=\"font-italic text-muted\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"row text-center\">\n            {[1, 2, 3, 4].map(() => (\n              <div className=\"col-xl-3 col-sm-6 mb-5\">\n                <div className=\"rounded shadow-sm py-5 px-4 team-cards\">\n                  <img\n                    src=\"https://avatars.githubusercontent.com/u/32240906?v=4\"\n                    alt=\"\"\n                    width=\"100\"\n                    className=\"img-fluid rounded-circle mb-3 img-thumbnail shadow-sm\"\n                  />\n                  <h5 className=\"mb-0 member-name\">Kartik Tyagi</h5>\n                  <span className=\"small text-uppercase text-muted\">\n                    Project Lead\n                  </span>\n                  <ul className=\"social mb-0 list-inline mt-3\">\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-facebook-f\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-twitter\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-instagram\"></i>\n                      </a>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <a href=\"#\" className=\"social-link\">\n                        <i className=\"fa fa-linkedin\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport announcement from \"../../../assets/announcement.png\";\nimport Footer from \"../../includes/footer\";\nimport \"./faq.css\";\n\nexport default function Faq() {\n  return (\n    <div className=\"about-cont\">\n      <Container fluid className={\"nav center\"}>\n        <Row className={\"container text-center\"}>\n          <Col>\n            <img src={announcement} height=\"40px\" alt=\"announcement\" />{\" \"}\n            &nbsp;Make your virtual Scribble Day more exciting by\n            <a\n              href=\"https://ethicallearner.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              Placing ORDER of your SCRRIBLE TSHIRT\n            </a>\n          </Col>\n        </Row>\n      </Container>\n\n      <div class=\"container\">\n        <br />\n        <br />\n        <br />\n\n        <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\">\n            <span aria-hidden=\"true\">&times;</span>\n            <span class=\"sr-only\">Close</span>\n          </button>\n          This section contains a wealth of information, related to{\" \"}\n          <strong>PrepBootstrap</strong> and its store. If you cannot find an\n          answer to your question, make sure to contact us.\n        </div>\n\n        <br />\n\n        <div class=\"\" id=\"accordion\">\n          <div class=\"faqHeader\">General questions</div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseOne\"\n                >\n                  Is account registration required?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseOne\" class=\"panel-collapse collapse in\">\n              <div class=\"card-block\">\n                Account registration at <strong>PrepBootstrap</strong> is only\n                required if you will be selling or buying themes. This ensures a\n                valid communication channel for all parties involved in any\n                transactions.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseTen\"\n                >\n                  Can I submit my own Bootstrap templates or themes?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseTen\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                A lot of the content of the site has been submitted by the\n                community. Whether it is a commercial element/template/theme or\n                a free one, you are encouraged to contribute. All credits are\n                published along with the resources.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseEleven\"\n                >\n                  What is the currency used for all transactions?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseEleven\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                All prices for themes, templates and other items, including each\n                seller's or buyer's account balance are in <strong>USD</strong>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"faqHeader\">Sellers</div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseTwo\"\n                >\n                  Who cen sell items?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseTwo\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Any registed user, who presents a work, which is genuine and\n                appealing, can post it on <strong>PrepBootstrap</strong>.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseThree\"\n                >\n                  I want to sell my items - what are the steps?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseThree\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                The steps involved in this process are really simple. All you\n                need to do is:\n                <ul>\n                  <li>Register an account</li>\n                  <li>Activate your account</li>\n                  <li>\n                    Go to the <strong>Themes</strong> section and upload your\n                    theme\n                  </li>\n                  <li>\n                    The next step is the approval step, which usually takes\n                    about 72 hours.\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseFive\"\n                >\n                  How much do I get from each sale?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseFive\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Here, at <strong>PrepBootstrap</strong>, we offer a great, 70%\n                rate for each seller, regardless of any restrictions, such as\n                volume, date of entry, etc.\n                <br />\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseSix\"\n                >\n                  Why sell my items here?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseSix\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                There are a number of reasons why you should join us:\n                <ul>\n                  <li>A great 70% flat rate for your items.</li>\n                  <li>\n                    Fast response/approval times. Many sites take weeks to\n                    process a theme or template. And if it gets rejected, there\n                    is another iteration. We have aliminated this, and made the\n                    process very fast. It only takes up to 72 hours for a\n                    template/theme to get reviewed.\n                  </li>\n                  <li>\n                    We are not an exclusive marketplace. This means that you can\n                    sell your items on <strong>PrepBootstrap</strong>, as well\n                    as on any other marketplate, and thus increase your earning\n                    potential.\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseEight\"\n                >\n                  What are the payment options?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseEight\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                The best way to transfer funds is via Paypal. This secure\n                platform ensures timely payments and a secure environment.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseNine\"\n                >\n                  When do I get paid?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseNine\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Our standard payment plan provides for monthly payments. At the\n                end of each month, all accumulated funds are transfered to your\n                account. The minimum amount of your balance should be at least\n                70 USD.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"faqHeader\">Buyers</div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseFour\"\n                >\n                  I want to buy a theme - what are the steps?\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseFour\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Buying a theme on <strong>PrepBootstrap</strong> is really\n                simple. Each theme has a live preview. Once you have selected a\n                theme or template, which is to your liking, you can quickly and\n                securely pay via Paypal.\n                <br />\n                Once the transaction is complete, you gain full access to the\n                purchased product.\n              </div>\n            </div>\n          </div>\n          <div class=\"card \">\n            <div class=\"card-header\">\n              <h4 class=\"card-header\">\n                <a\n                  class=\"accordion-toggle collapsed\"\n                  data-toggle=\"collapse\"\n                  data-parent=\"#accordion\"\n                  href=\"#collapseSeven\"\n                >\n                  Is this the latest version of an item\n                </a>\n              </h4>\n            </div>\n            <div id=\"collapseSeven\" class=\"panel-collapse collapse\">\n              <div class=\"card-block\">\n                Each item in <strong>PrepBootstrap</strong> is maintained to its\n                latest version. This ensures its smooth operation.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport Home from \"./components/homepage/home\";\nimport About from \"./components/templates/about/about\";\nimport Faq from \"./components/templates/faq/faq\";\n\nconst Theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={Theme}>\n      <div className=\"App\">\n        <Router>\n          <Route exact component={Home} path=\"/u/:userId\" />\n          <Route exact component={Home} path=\"/\" />\n          <Route exact component={About} path=\"/about\" />\n          <Route exact component={Faq} path=\"/faq\" />\n        </Router>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/announcement.ea18e75f.png\";"],"sourceRoot":""}