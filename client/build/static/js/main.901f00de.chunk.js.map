{"version":3,"sources":["assets/malefront.png","assets/announcement.png","components/preview/tshirt1.png","components/preview/tshirt2.png","assets/ScribbleDay.png","assets/maleback.png","assets/hack.jpg","components/preview/index.js","components/homepage/shareCard.js","components/dimension.js","components/useGetPosition.js","components/useOutsideCatcher.js","components/homepage/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Preview","img","face","className","src","t1","alt","t2","useStyles","makeStyles","theme","root","maxWidth","paddingInline","paddingBlock","backgroundColor","color","avatar","red","ShareCard","props","classes","useState","openSnackbar","setOpenSnackbar","msgSnackbar","setMsgSnackbar","shareText","Card","userdata","CardHeader","Avatar","aria-label","action","IconButton","onClick","navigator","clipboard","writeText","setTimeout","style","title","Typography","gutterBottom","variant","name","textAlign","CardContent","border","marginBlock","borderRadius","component","CardActions","disableSpacing","Button","window","open","target","rel","href","data-action","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","getWindowDimensions","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","getFontSize","fontsize","parseFloat","slice","newSize","useOutsideAlerter","ref","isIn","setIn","handleClickOutside","event","current","contains","document","blue","formControl","margin","spacing","minWidth","borderColor","selectEmpty","marginTop","resultOfUlist","top","position","zIndex","background","maxHeight","overflow","overflowY","resultListItem","padding","borderBottom","cursor","ValueLabelComponent","children","value","Tooltip","enterTouchDelay","placement","Home","searchUniversityRef","useRef","searchFriendRef","isSearchUniversityFocused","isSearchFriendFocused","imageRef","React","createRef","imageRefWidth","setImageRefWidth","setImageRefHeight","messageRef","imageWrap","useScreenshot","image","takeScreenshot","windowWidth","duniversityList","setDUniversityList","dfriendList","setDFriendList","universityList","setUniversityList","friendList","setFriendList","searchFilterFunction","text","data","setData","filter","item","itemData","toUpperCase","textData","indexOf","isFriendFocus","setFriendFocus","isUlistFocus","setUlistFocus","scribbleList","setScribbleList","setUserData","friendData","setFriendData","setMessage","messageColor","setMessageColor","rotateValue","setRotateValue","dragBool","setDragBool","messageFont","setMessageFont","fontFam","setFontFam","tshirtSide","setTshirtSide","isFixed","setIsFixed","dimensions","setDimensions","openInviteDialog","setInviteDialog","openDownloadDialog","setDownloadDialog","openPreviewDialog","setPreviewDialog","downloadInput","setDownloadInput","insertVerifyCode","setInsertVerifyCode","university","setUniversity","universityLogo","setUniversityLogo","enterFriendName","setEnterFriendName","friendLogo","setFriendLogo","landingPageBool","setLandingPageBool","userDetailsBool","setUserDetailsBool","enterEmailBool","setEnterEmailBool","loadingBool","setLoadingBool","askedForSendVerificationCode","setAskedForSendVerificationCode","enterPinOrCodeBool","setEnterPinOrCodeBool","signupFormBool","setSignUpformBool","newUniversityBool","setNewUniversityBool","inputEmail","setInputEmail","pinCodeToVerify","setPinCodeToVerify","codeToCheck","setCodeToCheck","signupFormInputs","setSignupFormInputs","activateLoadingIn","setActivateLoadingIn","newUnivesityName","setNewUniversityName","newUnivesityLogo","setNewUniversityLogo","newUniversityOnSuccess","setNewUniversityOnSuccess","setAvatar","getBoundingClientRect","userId","useParams","a","axios","post","resp","found","res","logo","friendUserId","friendName","friendAvatar","scribbles","respMessage","get","instituteList","length","handleInputChange","e","handleMyScribbleClick","scribbleResp","universityResp","handleSendScribbleForm","angle","colorCode","fontStyle","fontSize","side","scribbled","location","reload","handleSendVerificationCode","alert","email","sent","handleVerifyPin","pin","loggedIn","handleVerifyCode","checkUserAccountWithEmail","profile","handleSubmitSignupForm","formData","FormData","set","JSON","stringify","signUp","handleInviteOpen","handleDownloadOpen","handlePreviewClose","handleNewUniversityForm","added","institute","handleSearchForStudents","uni","friendsList","PreviewDialog","onClose","selectedValue","Dialog","aria-labelledby","require","InviteFriend","DownloadForm","display","flexDirection","CircularProgress","marginInline","Container","fluid","Row","Col","announcement","Image","left","ButtonGroup","disableElevation","disabled","count","clear","setInterval","imageUrl","url","link","createElement","setAttribute","body","appendChild","click","download","clearInterval","size","loggedout","id","float","Form","Control","type","placeholder","maxLength","onFocus","onBlur","onChange","required","map","uObj","marginLeft","col-12","col-sm-8","col-md-9","multiple","as","Slider","min","max","newValue","FormControl","InputLabel","outlined","Select","labelId","label","MenuItem","fontFamily","confirm","scribble","key","_id","sendByAvatar","sendByName","subheader","Input","startAdornment","InputAdornment","endAdornment","class","FormLabel","RadioGroup","gender","FormControlLabel","control","Radio","accept","hidden","files","for","alignItems","marginBottom","transform","rotate","bounds","onStart","rootDimensions","selfDimensions","rootWidth","rootHeight","rootX","x","rootY","y","selfX","selfY","xHelperConstant","yHelperConstant","GetPosition","Theme","createMuiTheme","palette","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.901f00de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/malefront.3b15893e.png\";","module.exports = __webpack_public_path__ + \"static/media/announcement.ea18e75f.png\";","module.exports = __webpack_public_path__ + \"static/media/tshirt1.7ae50b19.png\";","module.exports = __webpack_public_path__ + \"static/media/tshirt2.7ae50b19.png\";","module.exports = __webpack_public_path__ + \"static/media/ScribbleDay.241eefb3.png\";","module.exports = __webpack_public_path__ + \"static/media/maleback.5520076a.png\";","module.exports = __webpack_public_path__ + \"static/media/hack.25f1372b.jpg\";","import React from \"react\";\nimport \"./style.css\";\nimport t1 from \"./tshirt1.png\";\nimport t2 from \"./tshirt2.png\";\n\nexport default function Preview({img, face='no'}) {\n  return (\n    <div className=\"tshirt-preview-container\">\n      <div className=\"box\">\n        <span>\n          <img src={face==='front'?img:t1} alt=\"t2\" className={\"i-1\"} />\n        </span>\n        <span>\n          <img src={face==='back'?img:t2} className={\"i-2\"} alt=\"t1\" />\n        </span>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    paddingInline: \"5%\",\n    paddingBlock: \"3%\",\n    backgroundColor: \"#073e6d\",\n    color: \"#fff\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function ShareCard(props) {\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [msgSnackbar, setMsgSnackbar] = useState(\"\");\n  const [shareText, setShareText] = useState(\n    \"Hey dear friend, Lets Celebrate Scribble Day 2021 virtullay together | Write a Scribble Message for me || www.thirsty-goldwasser-7273c9.netlify.app/\"\n  );\n\n  return (\n    <Card className={classes.root}>\n      {props.userdata ? (\n        <CardHeader\n          avatar={\n            <Avatar\n              aria-label=\"recipe\"\n              className={classes.avatar}\n              src={props.userdata.avatar}\n            ></Avatar>\n          }\n          action={\n            <IconButton\n              aria-label=\"settings\"\n              onClick={() => {\n                navigator.clipboard.writeText(shareText);\n                setOpenSnackbar(true);\n                setMsgSnackbar(\"Copied\");\n                setTimeout(() => setOpenSnackbar(false), 1000);\n              }}\n            >\n              <FileCopyIcon style={{ color: \"#fff\" }} />\n            </IconButton>\n          }\n          title={\n            <Typography gutterBottom variant=\"h5\">\n              {props.userdata.name}\n            </Typography>\n          }\n        />\n      ) : (\n        <Typography gutterBottom variant=\"h5\" style={{ textAlign: \"center\" }}>\n          Virtual Scribble Day 2021\n        </Typography>\n      )}\n      <CardContent\n        style={{\n          border: \"1px solid  rgb(233, 233, 223, 0.2)\",\n          marginBlock: 10,\n          borderRadius: 6,\n        }}\n      >\n        <Typography variant=\"body2\" component=\"p\">\n          {shareText}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <div className=\"part socials\">\n          {!props.userdata && (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={() => {\n                navigator.clipboard.writeText(shareText);\n                setOpenSnackbar(true);\n                setMsgSnackbar(\"Copied\");\n                setTimeout(() => setOpenSnackbar(false), 1000);\n              }}\n            >\n              <span className={\"fa fa-copy\"}></span>\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            style={{ backgroundColor: \"#8A374A\", color: \"#fff\" }}\n            onClick={() => {\n              navigator.clipboard.writeText(shareText);\n              setOpenSnackbar(true);\n              setMsgSnackbar(\"Copied\");\n              setTimeout(() => {\n                setOpenSnackbar(false);\n                window.open(\"https://www.instagram.com/\");\n              }, 1000);\n            }}\n          >\n            <span className={\"fa fa-instagram\"}></span>\n          </Button>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/shareArticle?url=www.thirsty-goldwasser-7273c9.netlify.app/%20&title=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#2E73AD\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-linkedin\"}></span>\n            </Button>\n          </a>\n          <Button\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"#4095ED\",\n              color: \"#fff\",\n            }}\n            onClick={() => {\n              window.open(\n                \"https://www.facebook.com/sharer/sharer.php?u=https%3A//thirsty-goldwasser-7273c9.netlify.app\"\n              );\n              return false;\n            }}\n          >\n            <span className={\"fa fa-facebook\"}></span>\n          </Button>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/intent/tweet?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%0A%0A%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%0A%0AWrite%20a%20Scribble%20for%20me%20%0A%0Awww.thirsty-goldwasser-7273c9.netlify.app/%20%0A%0A%23scribbleday2021%20\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#05ABFF\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-twitter\"}></span>\n            </Button>\n          </a>\n          <a\n            href=\"https://web.whatsapp.com/send?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20%20%20https%3A//thirsty-goldwasser-7273c9.netlify.app/%20%20%20#scribbleday2021%20%20\"\n            data-action=\"share/whatsapp/share\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#0DC143\",\n                color: \"#fff\",\n              }}\n            >\n              <span className={\"fa fa-whatsapp\"}></span>\n            </Button>\n          </a>\n        </div>\n      </CardActions>\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        autoHideDuration={1000}\n        message={msgSnackbar}\n      />\n    </Card>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import { useEffect, useState } from 'react';\nimport useWindowDimensions from './dimension';\n\nexport function getFontSize(fontsize, width){\n  if(typeof(fontsize)==='string'){\n    fontsize = parseFloat(fontsize.slice(0,-2))*16;\n  }\n  const getWidthPercen = ((100*width)/616);\n  const newSize = ((fontsize*getWidthPercen)/100);\n  if(newSize>fontsize){\n    return fontsize;\n  }else{\n    return newSize;\n  }\n}\n\nexport function getConstantLeft(xHelperConstant, width){\n  return ((0.0001864*width)+xHelperConstant);\n} \n\nexport function getLeft(xHelperConstant, width){\n  return (width*getConstantLeft(xHelperConstant,width));\n}\n\nexport function getConstantTop(yHelperConstant, height){\n  return ((0.0002864*height)+yHelperConstant);\n}\n\nexport function getTop(yHelperConstant, height){\n  return (height*getConstantTop(yHelperConstant,height));\n}\n\nexport default function useGetPosition(rootRef, selfRef){\n\n  const { width: windowWidth } = useWindowDimensions();\n  const [rootDimensions, setRootDimensions] = useState(null);\n  const [selfDimensions, setSelfDimensions] = useState(null);\n\n  useEffect(()=>{\n    setRootDimensions(rootRef.current.getBoundingClientRect());\n    setSelfDimensions(selfRef.current.getBoundingClientRect());\n  },[windowWidth])\n\n  function getXHelperConstant(){\n    const rootWidth = rootDimensions ? rootDimensions.width : 0 ;\n    const rootX = rootDimensions ? rootDimensions.x : 0;\n    const selfX = selfDimensions ? selfDimensions.x : 0;\n    return (((selfX - rootX)/rootWidth)-(0.0001864*rootWidth));\n  }\n\n  function getYHelperConstant(){\n    const rootHeight = rootDimensions ? rootDimensions.height : 0;\n    const rootY = rootDimensions ? rootDimensions.y : 0;\n    const selfY = selfDimensions ? selfDimensions.y : 0;\n    return (((selfY - rootY)/rootHeight)-(0.0002864*rootHeight));\n  }\n\n  function getValue(rootStart, selfStart, rootDim){\n    return ((100/rootDim)*(selfStart - rootStart));\n  }\n\n  return {\n    xHelperConstant: getXHelperConstant(), yHelperConstant: getYHelperConstant(),\n    left: getValue(rootDimensions.x, selfDimensions.x, rootDimensions.width)\n  }\n\n}","import { useEffect, useState } from 'react';\n\nexport default function useOutsideAlerter(ref) {\n  const [isIn, setIn] = useState(null);\n  useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n              setIn(false);\n          }else{\n          setIn(true);\n          }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          // Unbind the event listener on clean up\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n  return isIn;\n}","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Draggable from \"react-draggable\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { Container, Row, Col, Form, Image } from \"react-bootstrap\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport announcement from \"../../assets/announcement.png\";\nimport Preview from \"../preview\";\nimport ShareCard from \"./shareCard.js\";\nimport {\n  getLeft,\n  getTop,\n  getConstantLeft,\n  getFontSize,\n} from \"../useGetPosition\";\nimport useWindowDimensions from \"../dimension\";\nimport { useScreenshot } from \"use-screenshot-hook\";\nimport useOutsideAlerter from \"../useOutsideCatcher\";\nimport \"./home.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    color: \"#fff\",\n    borderColor: \"#fff\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  resultOfUlist: {\n    top: 61,\n    position: \"absolute\",\n    zIndex: 1,\n    background: \"#fff\",\n    color: \"#000\",\n    width: \"100%\",\n    maxHeight: 160,\n    overflow: \"hidden\",\n    overflowY: \"auto\",\n  },\n  resultListItem: {\n    padding: \"6px 12px\",\n    borderBottom: \"1px solid #ccc\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#bbb\",\n    },\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction Home() {\n  // refs for checking focused or blured inputs\n  const searchUniversityRef = useRef(null);\n  const searchFriendRef = useRef(null);\n  const isSearchUniversityFocused = useOutsideAlerter(searchUniversityRef);\n  const isSearchFriendFocused = useOutsideAlerter(searchFriendRef);\n\n  const classes = useStyles();\n  const imageRef = React.createRef(null);\n  const [imageRefWidth, setImageRefWidth] = useState(0);\n  const [imageRefHeight, setImageRefHeight] = useState(0);\n  const messageRef = React.createRef(null);\n  const imageWrap = useRef(null);\n  const { image, takeScreenshot } = useScreenshot({ ref: imageWrap });\n  const { width: windowWidth } = useWindowDimensions();\n\n  const handleFontChange = (event) => {\n    setFontFam(event.target.value);\n  };\n  const [duniversityList, setDUniversityList] = useState([]);\n  const [dfriendList, setDFriendList] = useState([]);\n  const [universityList, setUniversityList] = useState([]);\n  const [friendList, setFriendList] = useState([]);\n  const searchFilterFunction = (text, data, setData) => {\n    // Check if searched text is not blank\n    if (text) {\n      // Inserted text is not blank\n      // Filter the masterDataSource\n      // Update FilteredDataSource\n      const newData = data.filter(function (item) {\n        const itemData = item.name ? item.name.toUpperCase() : \"\".toUpperCase();\n        const textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setData(newData);\n    } else {\n      // Inserted text is blank\n      // Update FilteredDataSource with masterDataSource\n      setData(data);\n    }\n  };\n  const [isFriendFocus, setFriendFocus] = useState(false);\n  const [isUlistFocus, setUlistFocus] = useState(false);\n  const [scribbleList, setScribbleList] = useState([]);\n  const [userdata, setUserData] = useState(null);\n  const [friendData, setFriendData] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [messageColor, setMessageColor] = useState(\"#000000\");\n  const [rotateValue, setRotateValue] = useState(0);\n  const [dragBool, setDragBool] = useState(false);\n  const [messageFont, setMessageFont] = useState(\".8em\");\n  const [fontFam, setFontFam] = useState(\"Jazz LET, fantasy\");\n\n  const [tshirtSide, setTshirtSide] = useState(\"front\");\n  const [isFixed, setIsFixed] = useState(false);\n  const [dimensions, setDimensions] = useState({});\n\n  const [openInviteDialog, setInviteDialog] = useState(false);\n  const [openDownloadDialog, setDownloadDialog] = useState(false);\n  const [openPreviewDialog, setPreviewDialog] = useState(false);\n  const [downloadInput, setDownloadInput] = useState();\n  const [insertVerifyCode, setInsertVerifyCode] = useState(false);\n  const [university, setUniversity] = useState(\"\");\n  const [universityLogo, setUniversityLogo] = useState();\n  const [enterFriendName, setEnterFriendName] = useState(\"\");\n  const [friendLogo, setFriendLogo] = useState();\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [msgSnackbar, setMsgSnackbar] = useState(\"\");\n  const [landingPageBool, setLandingPageBool] = useState(true);\n  const [userDetailsBool, setUserDetailsBool] = useState(false);\n  const [enterEmailBool, setEnterEmailBool] = useState(false);\n  const [loadingBool, setLoadingBool] = useState(false);\n  const [\n    askedForSendVerificationCode,\n    setAskedForSendVerificationCode,\n  ] = useState(false);\n  const [enterPinOrCodeBool, setEnterPinOrCodeBool] = useState(\"pin\");\n  const [signupFormBool, setSignUpformBool] = useState(false);\n  const [newUniversityBool, setNewUniversityBool] = useState(false);\n\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [pinCodeToVerify, setPinCodeToVerify] = useState(\"\");\n  const [codeToCheck, setCodeToCheck] = useState(\"\");\n  const [signupFormInputs, setSignupFormInputs] = useState({});\n  const [activateLoadingIn, setActivateLoadingIn] = useState(\"\");\n  const [newUnivesityName, setNewUniversityName] = useState(\"\");\n  const [newUnivesityLogo, setNewUniversityLogo] = useState();\n  const [newUniversityOnSuccess, setNewUniversityOnSuccess] = useState(\n    \"signup\"\n  );\n  const [avatar, setAvatar] = useState();\n\n  useEffect(() => {\n    setImageRefWidth(imageRef.current.getBoundingClientRect().width);\n    setImageRefHeight(imageRef.current.getBoundingClientRect().height);\n  }, [imageRef, imageRef.current, windowWidth]);\n\n  const { userId } = useParams();\n\n  useEffect(() => {\n    // let search = window.location.search;\n    // let params = new URLSearchParams(search);\n    // const userId = params.get(\"id\");\n    if (userId) {\n      (async () => {\n        const resp = await axios.post(\"/friend/param\", {\n          userId: userId,\n        });\n        if (resp.data && resp.data.found) {\n          const res = resp.data;\n          setUniversity(res.university.name);\n          setUniversityLogo(res.university.logo);\n          setEnterFriendName(res.friendData.name);\n          setFriendLogo(res.friendData.avatar);\n          setFriendData({\n            friendUserId: res.friendData.userId,\n            friendName: res.friendData.name,\n            friendAvatar: res.friendData.avatar,\n          });\n          setScribbleList(res.scribbles);\n        } else {\n          setOpenSnackbar(true);\n          setMsgSnackbar(resp.data.respMessage);\n          setTimeout(() => setOpenSnackbar(false), 3000);\n        }\n      })();\n    }\n\n    (async () => {\n      const resp = await axios.get(\"/check/session\");\n      if (resp.data && resp.data.userdata) {\n        setUserData(resp.data.userdata);\n      }\n    })();\n\n    // fecth university list\n    (async () => {\n      const resp = await axios.get(\"/institute/list\");\n      if (resp.data && resp.data.instituteList) {\n        setUniversityList(\n          resp.data.instituteList.length > 0 ? resp.data.instituteList : []\n        );\n        setDUniversityList(\n          resp.data.instituteList.length > 0 ? resp.data.instituteList : []\n        );\n      }\n    })();\n  }, [landingPageBool]);\n\n  const handleFixClick = () => {\n    if (!friendData) {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\n        \"Please Select a Friend and must write a Scribble message\"\n      );\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      // setDimensions(getPositions);\n      setDimensions(\n        GetPosition(\n          imageRef.current.getBoundingClientRect(),\n          messageRef.current.getBoundingClientRect()\n        )\n      );\n      // console.log(getPositions);\n      // setDimensions(messageRef.current.getBoundingClientRect());\n      // console.log(useGetPosition(getImgWrapperDimensions, getMsgDimensions));\n      setDragBool(true);\n      setIsFixed(true);\n    }\n  };\n\n  function GetPosition(rootDimensions, selfDimensions) {\n    const rootWidth = rootDimensions.width;\n    const rootHeight = rootDimensions.height;\n    const rootX = rootDimensions.x;\n    const rootY = rootDimensions.y;\n    const selfWidth = selfDimensions.width;\n    const selfX = selfDimensions.x;\n    const selfY = selfDimensions.y;\n\n    const xHelperConstant = (selfX - rootX) / rootWidth - 0.0001864 * rootWidth;\n    const yHelperConstant = (selfY - rootY) / rootWidth - 0.0002864 * rootWidth;\n    const left = (100 / rootWidth) * (selfX - rootX) + 3;\n    const top = (100 / rootHeight) * (selfY - rootY);\n\n    return {\n      xHelperConstant,\n      yHelperConstant,\n      left,\n      top,\n    };\n  }\n\n  const download = (imageUrl) => {\n    const url = imageUrl;\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"tshirtpreview.png\"); //or any other extension\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setSignupFormInputs({\n      ...signupFormInputs,\n      [name]: value,\n    });\n  };\n\n  const handleMyScribbleClick = async () => {\n    setLandingPageBool(false);\n    setEnterFriendName(\"\");\n    if (userdata) {\n      setLoadingBool(true);\n      setUserDetailsBool(true);\n      setUniversityLogo(userdata.universityLogo);\n      const scribbleResp = await axios.get(\"/get/scribbles\");\n      if (scribbleResp.data) {\n        setScribbleList(scribbleResp.data.scribbleList);\n      }\n      setLoadingBool(false);\n      const universityResp = await axios.post(\"/university/detail\", {\n        university: userdata.university,\n      });\n      if (universityResp.data) {\n        setUniversityLogo(universityResp.data.university.logo);\n      }\n    } else {\n      setEnterEmailBool(true);\n    }\n  };\n\n  const handleSendScribbleForm = async () => {\n    if (userdata) {\n      if (friendData && message && dimensions) {\n        setLoadingBool(true);\n        // save scribble message to db\n        if (friendData.friendName === userdata.name) {\n          setUserDetailsBool(false);\n          setEnterEmailBool(false);\n          setAskedForSendVerificationCode(false);\n          setLandingPageBool(true);\n          setSignUpformBool(false);\n          setNewUniversityBool(false);\n          setEnterPinOrCodeBool(false);\n          setScribbleList([]);\n          setInsertVerifyCode(false);\n          setFriendFocus(false);\n          setUlistFocus(false);\n          setFriendData({});\n          setEnterFriendName(\"\");\n          setFriendLogo();\n          setUniversityLogo();\n          setUniversity(\"\");\n          setMessage(\"\");\n          setOpenSnackbar(true);\n          setMsgSnackbar(\"You cannot send scribble message to yourself\");\n          setTimeout(() => setOpenSnackbar(false), 3000);\n        } else {\n          const resp = await axios.post(\"/save/scribble\", {\n            friendUserId: friendData.friendUserId,\n            friendName: friendData.friendName,\n            friendAvatar: friendData.friendAvatar,\n            dimensions,\n            message,\n            angle: rotateValue,\n            colorCode: messageColor,\n            fontStyle: fontFam,\n            fontSize: messageFont,\n            side: tshirtSide,\n          });\n          setLoadingBool(false);\n          setOpenSnackbar(true);\n          setTimeout(() => setOpenSnackbar(false), 1000);\n          if (resp.data && resp.data.scribbled) {\n            setMsgSnackbar(\"Send Scribble Successfully\");\n          } else {\n            setMsgSnackbar(\"Something went wrong\");\n            setTimeout(() => window.location.reload(), 3000);\n          }\n        }\n      } else {\n        setOpenSnackbar(true);\n        setMsgSnackbar(\"Enter all inputs\");\n        setTimeout(() => setOpenSnackbar(false), 3000);\n      }\n    } else {\n      setLandingPageBool(false);\n      setEnterEmailBool(true);\n    }\n  };\n\n  const handleSendVerificationCode = async () => {\n    if (!inputEmail) alert(\"Insert Email\");\n    else {\n      setActivateLoadingIn(\"send-verification-code\");\n      const resp = await axios.post(\"/email/verify\", {\n        email: inputEmail,\n      });\n      setActivateLoadingIn(\"\");\n      if (resp.data.sent) {\n        setAskedForSendVerificationCode(false);\n        setInsertVerifyCode(true);\n        setEnterPinOrCodeBool(\"code\");\n        setCodeToCheck(resp.data.codeToCheck);\n      } else {\n        alert(resp.data.respMessage);\n      }\n    }\n  };\n\n  const handleVerifyPin = async () => {\n    if (!pinCodeToVerify) alert(\"Insert PIN to verify\");\n    else if (!inputEmail) alert(\"Insert Email first\");\n    else {\n      const resp = await axios.post(\"/login\", {\n        email: inputEmail,\n        pin: pinCodeToVerify,\n      });\n      if (resp.data.loggedIn) {\n        setLandingPageBool(true);\n        setInsertVerifyCode(false);\n        setEnterPinOrCodeBool(\"pin\");\n        setUserData(resp.data.userdata ? resp.data.userdata : null);\n      } else {\n        alert(resp.data.respMessage);\n      }\n    }\n  };\n\n  const handleVerifyCode = async () => {\n    if (!pinCodeToVerify) alert(\"Insert Code to verify\");\n    else if (!inputEmail) alert(\"Insert Email first\");\n    else {\n      if (codeToCheck == pinCodeToVerify) {\n        setInsertVerifyCode(false);\n        setEnterPinOrCodeBool(\"\");\n        setSignUpformBool(true);\n        setPinCodeToVerify(\"\");\n      } else {\n        alert(\"Code not Match\");\n      }\n    }\n  };\n\n  const checkUserAccountWithEmail = async () => {\n    if (!inputEmail) alert(\"Insert Email\");\n    else {\n      setEnterEmailBool(false);\n      const resp = await axios.post(\"/profile\", {\n        inputEmail,\n      });\n      const res = resp.data;\n      if (!res.profile) {\n        setAskedForSendVerificationCode(true);\n      } else {\n        setEnterEmailBool(false);\n        setInsertVerifyCode(true);\n        setEnterPinOrCodeBool(\"pin\");\n      }\n    }\n  };\n\n  const handleSubmitSignupForm = async () => {\n    if (signupFormInputs === {} || signupFormInputs.university === \"other\") {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\"Enter all Inputs\");\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      setLoadingBool(true);\n      let formData = new FormData();\n      formData.set(\"formInput\", JSON.stringify(signupFormInputs));\n      formData.set(\"avatar\", avatar);\n      formData.set(\"email\", inputEmail);\n      const resp = await axios.post(\"/create\", formData);\n      setLoadingBool(false);\n      setOpenSnackbar(true);\n      setMsgSnackbar(resp.data.respMessage);\n      setTimeout(() => setOpenSnackbar(false), 3000);\n      if (resp.data.signUp) {\n        setSignUpformBool(false);\n        setLandingPageBool(true);\n      }\n    }\n  };\n\n  const handleRotateChange = (event, newValue) => {\n    setRotateValue(newValue);\n  };\n\n  const handleInviteOpen = () => {\n    setInviteDialog(true);\n  };\n\n  const handleInviteClose = (value) => {\n    setInviteDialog(false);\n  };\n\n  const handleDownloadOpen = () => {\n    setDownloadDialog(true);\n  };\n\n  const handleDownloadClose = (value) => {\n    setDownloadDialog(false);\n    setDownloadInput(value);\n  };\n\n  const handlePreviewClose = () => {\n    setPreviewDialog(false);\n  };\n\n  const handleNewUniversityForm = async () => {\n    if (!newUnivesityName || !newUnivesityLogo) {\n      setOpenSnackbar(true);\n      setMsgSnackbar(\"Fill all required Inputs\");\n      setTimeout(() => setOpenSnackbar(false), 3000);\n    } else {\n      setLoadingBool(true);\n      const formData = new FormData();\n      formData.set(\"name\", newUnivesityName);\n      formData.set(\"logo\", newUnivesityLogo);\n      const resp = await axios.post(\"/institute/add\", formData);\n      setLoadingBool(false);\n      setOpenSnackbar(true);\n      setTimeout(() => setOpenSnackbar(false), 3000);\n      setMsgSnackbar(resp.data.respMessage);\n      if (resp.data.added && resp.data.institute) {\n        setUniversityList((instituteList) => [\n          ...instituteList,\n          resp.data.institute,\n        ]);\n        if (newUniversityOnSuccess === \"signup\") {\n          setSignUpformBool(true);\n        } else {\n          setLandingPageBool(true);\n        }\n        setNewUniversityBool(false);\n      }\n    }\n  };\n\n  const handleSearchForStudents = async (uni) => {\n    setScribbleList([]);\n    const resp = await axios.post(\"/friends/list\", {\n      university: uni,\n    });\n    if (resp.data && resp.data.friendsList) {\n      setFriendList(\n        resp.data.friendsList.length > 0 ? resp.data.friendsList : []\n      );\n      setDFriendList(\n        resp.data.friendsList.length > 0 ? resp.data.friendsList : []\n      );\n    }\n  };\n\n  const handleOnDragStart = () => {\n    // set\n  };\n\n  function PreviewDialog(props) {\n    const { onClose, selectedValue, open } = props;\n    const handlePreviewClose = () => {\n      onClose(selectedValue);\n    };\n\n    return (\n      <Dialog\n        onClose={handlePreviewClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        <Preview\n          img={require(\"../../assets/malefront.png\")}\n          face={tshirtSide}\n        />\n      </Dialog>\n    );\n  }\n\n  function InviteFriend(props) {\n    const { onClose, open } = props;\n    const handleClose = () => {\n      onClose();\n    };\n\n    return (\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        <ShareCard userdata={userdata ? userdata : null} />\n      </Dialog>\n    );\n  }\n\n  InviteFriend.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n  };\n  function DownloadForm(props) {\n    const { onClose, selectedValue, open, image } = props;\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n\n    return (\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        <div style={{ padding: 12, display: \"flex\", flexDirection: \"column\" }}>\n          {image ? (\n            <img src={image} alt=\"Scribble Preview\" />\n          ) : (\n            <CircularProgress style={{ margin: \"9px auto\" }} />\n          )}\n          <Button\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"#0A0\",\n              marginInline: 10,\n              color: \"#fff\",\n            }}\n          >\n            <span className={\"fa fa-download\"}></span>\n            Download\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n\n  DownloadForm.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n  };\n\n  return (\n    <div className={\"appbody\"}>\n      <Container fluid className={\"nav center\"}>\n        <Row className={\"container text-center\"}>\n          <Col>\n            <img src={announcement} height=\"40px\" alt=\"announcement\" />{\" \"}\n            &nbsp;Make your virtual Scribble Day more exciting by\n            <a\n              href=\"https://ethicallearner.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              Placing ORDER of your SCRRIBLE TSHIRT\n            </a>\n          </Col>\n        </Row>\n      </Container>\n\n      <div className={\"main\"}>\n        <div className={\"center scribble-imgbox\"}>\n          <div className=\"row\" style={{ width: \"100%\" }}>\n            <div className={\"column\"}>\n              <div>\n                <Image\n                  style={{ left: 100 }}\n                  src={require(\"../../assets/ScribbleDay.png\")}\n                  height=\"190px\"\n                  alt=\"logo\"\n                />\n              </div>\n            </div>\n            <div className={\"column\"}>\n              <div className=\"details-of-site\" style={{ marginTop: \"50px\" }}>\n                <div className=\"part\">\n                  <ButtonGroup\n                    disableElevation\n                    aria-label=\"contained\"\n                    disabled={isFixed ? true : false}\n                  >\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setTshirtSide(\"front\");\n                      }}\n                    >\n                      Front\n                    </Button>\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setTshirtSide(\"back\");\n                      }}\n                    >\n                      Back\n                    </Button>\n                  </ButtonGroup>\n                </div>\n                <div className=\"part d-sm-none\">\n                  <ButtonGroup disableElevation variant=\"contained\">\n                    <Button href=\"#formboxbysend\" color=\"primary\">\n                      Send Scribble\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </div>\n\n              <div\n                style={{ textAlign: \"center\" }}\n                className=\"d-none d-sm-block\"\n              >\n                {userdata && userDetailsBool && (\n                  <>\n                    <a\n                      // onMouseEnter={()=>takeScreenshot()}\n                      onClick={() => {\n                        takeScreenshot();\n                        let count = 0;\n                        const clear = setInterval(() => {\n                          count++;\n                          if (count > 8) {\n                            download(image);\n                            clearInterval(clear);\n                          }\n                        }, 1000);\n                      }}\n                      style={{\n                        backgroundColor: \"#0A0\",\n                        marginInline: 10,\n                        padding: 11,\n                        color: \"#fff\",\n                      }}\n                    >\n                      <span className={\"fa fa-download\"}></span>\n                    </a>\n                    <DownloadForm\n                      insertVerifyCode={insertVerifyCode}\n                      selectedValue={downloadInput}\n                      open={openDownloadDialog}\n                      onClose={handleDownloadClose}\n                      image={image}\n                    />\n                    <Button\n                      variant=\"contained\"\n                      // onClick={() => setPreviewDialog(true)}\\\n                      onClick={() => handleDownloadOpen()}\n                      style={{\n                        backgroundColor: \"#05ABFF\",\n                        marginInline: 10,\n                        color: \"#fff\",\n                      }}\n                    >\n                      <span className={\"fa fa-user\"}></span>\n                      Preview\n                    </Button>\n                    <PreviewDialog\n                      open={openPreviewDialog}\n                      onClose={handlePreviewClose}\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row mb-view\">\n          {/* LEFT COLUMN */}\n          <div className={\"column\"}>\n            <div className={\"row justify-content-center form1\"}>\n              <div className={\"col-12 col-sm-10 col-lg-8 d-flex flex-column\"}>\n                <div style={{ padding: \"1rem\" }}>\n                  <HomeIcon\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                  />\n                  {userDetailsBool && userdata && (\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={async () => {\n                        const resp = await axios.get(\"/logout\");\n                        if (resp.data.loggedout) {\n                          setUserDetailsBool(false);\n                          setLandingPageBool(true);\n                          setUserData(null);\n                        } else {\n                          setOpenSnackbar(true);\n                          setMsgSnackbar(\"You're not logged in!\");\n                          setTimeout(() => setOpenSnackbar(false), 3000);\n                        }\n                      }}\n                      style={{\n                        backgroundColor: \"#1C3750\",\n                        color: \"rgba(255,255,255,.4)\",\n                        marginInline: 20,\n                      }}\n                    >\n                      <span>Logout</span>\n                    </Button>\n                  )}\n                </div>\n                <div\n                  className=\"formBox row align-items-center\"\n                  id=\"formboxbysend\"\n                >\n                  <hr />\n                  {landingPageBool && (\n                    <>\n                      <div className=\"col-12\"></div>\n                      <div className=\"formAvatarGroup col-12\">\n                        <div\n                          id=\"un\"\n                          style={{\n                            position: \"relative\",\n                            width: \"100%\",\n                            zIndex: 3,\n                          }}\n                          ref={searchUniversityRef}\n                        >\n                          <Typography\n                            gutterBottom\n                            style={{\n                              fontSize: \"0.8em\",\n                              color: \"#71E2F0\",\n                              cursor: \"pointer\",\n                              float: \"right\",\n                            }}\n                            onClick={() => {\n                              setNewUniversityBool(true);\n                              setLandingPageBool(false);\n                              setNewUniversityOnSuccess(\"landingPage\");\n                            }}\n                          >\n                            Didn't find University?\n                          </Typography>\n                          <Form.Control\n                            className={\" form\"}\n                            type=\"text\"\n                            placeholder=\"Search University\"\n                            name=\"message\"\n                            maxLength={250}\n                            value={university}\n                            onFocus={() => {\n                              setUlistFocus(true);\n                              setFriendFocus(false);\n                            }}\n                            onBlur={() => {\n                              if (!isSearchUniversityFocused) {\n                                setUlistFocus(false);\n                              }\n                            }}\n                            onChange={(e) => {\n                              setIsFixed(false);\n                              setDragBool(false);\n                              searchFilterFunction(\n                                e.target.value,\n                                duniversityList,\n                                setUniversityList\n                              );\n                            }}\n                            required\n                          />\n                          <div className={classes.resultOfUlist}>\n                            {isUlistFocus && (\n                              <>\n                                {universityList.length > 0 &&\n                                  universityList.map((uObj) => (\n                                    <div\n                                      className={classes.resultListItem}\n                                      onClick={() => {\n                                        setUniversity(uObj.name);\n                                        setUlistFocus(false);\n                                        setUniversityLogo(uObj.logo);\n                                        handleSearchForStudents(uObj.name);\n\n                                        // reset friend data\n\n                                        setFriendData({});\n                                        setEnterFriendName(\"\");\n                                        setFriendLogo();\n                                        setFriendFocus(false);\n                                      }}\n                                    >\n                                      {uObj.name}\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                        <Avatar\n                          style={{ marginLeft: 12 }}\n                          alt=\"U\"\n                          src={\n                            universityLogo\n                              ? universityLogo\n                              : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn0.iconfinder.com%2Fdata%2Ficons%2Fbuildings-1%2F128%2F29-512.png&f=1&nofb=1\"\n                          }\n                        />\n                      </div>\n\n                      <div className=\"col-12\">\n                        <InviteFriend\n                          open={openInviteDialog}\n                          onClose={handleInviteClose}\n                        />\n                      </div>\n                      <div className=\"formAvatarGroup col-12\">\n                        <div\n                          id=\"fd\"\n                          style={{\n                            position: \"relative\",\n                            width: \"100%\",\n                            zIndex: 2,\n                          }}\n                          ref={searchFriendRef}\n                        >\n                          <Typography\n                            gutterBottom\n                            style={{\n                              fontSize: \"0.8em\",\n                              color: \"#71E2F0\",\n                              cursor: \"pointer\",\n                              float: \"right\",\n                            }}\n                            onClick={handleInviteOpen}\n                          >\n                            Didn't find your Friend?\n                          </Typography>\n                          <Form.Control\n                            className={\" form\"}\n                            type=\"text\"\n                            placeholder=\"Search Friend\"\n                            name=\"friendname\"\n                            maxLength={250}\n                            col-12\n                            col-sm-8\n                            col-md-9\n                            value={enterFriendName}\n                            onFocus={() => {\n                              setFriendFocus(true);\n                              setUlistFocus(false);\n                            }}\n                            onBlur={() => {\n                              if (!isSearchFriendFocused) {\n                                setFriendFocus(false);\n                              }\n                            }}\n                            onChange={(e) => {\n                              searchFilterFunction(\n                                e.target.value,\n                                dfriendList,\n                                setFriendList\n                              );\n                            }}\n                            required\n                          />\n                          <div className={classes.resultOfUlist}>\n                            {isFriendFocus &&\n                              friendList.length > 0 &&\n                              friendList.map((uObj) => (\n                                <div\n                                  className={classes.resultListItem}\n                                  onClick={async () => {\n                                    setFriendData({\n                                      friendUserId: uObj.userId,\n                                      friendName: uObj.name,\n                                      friendAvatar: uObj.avatar,\n                                    });\n                                    setEnterFriendName(uObj.name);\n                                    setFriendLogo(uObj.avatar);\n                                    setFriendFocus(false);\n                                    // find user's scribble\n                                    const scribbleResp = await axios.post(\n                                      \"/friends/scribbles\",\n                                      {\n                                        userId: uObj.userId,\n                                      }\n                                    );\n                                    if (scribbleResp.data) {\n                                      setScribbleList(\n                                        scribbleResp.data.scribbleList\n                                      );\n                                    }\n                                  }}\n                                >\n                                  {uObj.name}\n                                </div>\n                              ))}\n                          </div>\n                        </div>\n                        <Avatar\n                          style={{ marginLeft: 12 }}\n                          alt=\"F\"\n                          src={\n                            friendLogo\n                              ? friendLogo\n                              : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.k6V8n31jhsNraAUlXqwNgQHaHa%26pid%3DApi&f=1\"\n                          }\n                        />\n                      </div>\n                      {/* <TextField\n                        className={\"col-12 col-sm-8 col-md-9 form\"}\n                        color=\"default\"\n                        label=\"scribble message\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        maxLength={250}\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                      /> */}\n\n                      <Form.Control\n                        className={\"col-12 form\"}\n                        type=\"text\"\n                        placeholder=\"Scribble Message\"\n                        name=\"message\"\n                        maxLength={250}\n                        multiple={true}\n                        as=\"textarea\"\n                        onChange={(e) => setMessage(e.target.value)}\n                        required\n                      />\n                      {isFixed ? (\n                        <>\n                          <Button\n                            variant=\"contained\"\n                            onClick={() => {\n                              setDragBool(false);\n                              setIsFixed(false);\n                            }}\n                            color=\"default\"\n                          >\n                            Edit Again\n                          </Button>\n                        </>\n                      ) : (\n                        <>\n                          <div>\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#f00000\")}\n                              style={{ color: \"#f00000\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#07c603\")}\n                              style={{ color: \"#07c603\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#05abff\")}\n                              style={{ color: \"#05abff\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#ead300\")}\n                              style={{ color: \"#ead300\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#ff8300\")}\n                              style={{ color: \"#ff8300\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#9605ff\")}\n                              style={{ color: \"#9605ff\" }}\n                            />\n                            <FiberManualRecordIcon\n                              onClick={() => setMessageColor(\"#ff05fa\")}\n                              style={{ color: \"#ff05fa\" }}\n                            />\n                            <div\n                              className={\"rotate-slider\"}\n                              style={{\n                                margin: \"1rem 0\",\n                              }}\n                            >\n                              <Typography\n                                gutterBottom\n                                style={{ fontSize: \"0.9em\", color: \"#FC88DF\" }}\n                              >\n                                Rotate Scribble Message\n                              </Typography>\n                              <Slider\n                                ValueLabelComponent={ValueLabelComponent}\n                                aria-label=\"custom thumb label\"\n                                value={rotateValue}\n                                min={-180}\n                                max={180}\n                                style={{ color: \"white\" }}\n                                onChange={handleRotateChange}\n                              />\n                            </div>\n                          </div>\n                        </>\n                      )}\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          padding: \"0 12px\",\n                        }}\n                      >\n                        {!isFixed && (\n                          <FormControl\n                            variant=\"outlined\"\n                            className={classes.formControl}\n                          >\n                            <InputLabel\n                              color=\"primary\"\n                              classes={{\n                                outlined: { color: \"#fff\" },\n                              }}\n                              id=\"demo-simple-select-outlined-label\"\n                              style={{ color: \"#ddd\" }}\n                            >\n                              Select Font\n                            </InputLabel>\n                            <Select\n                              labelId=\"demo-simple-select-outlined-label\"\n                              id=\"demo-simple-select-outlined\"\n                              value={fontFam}\n                              onChange={handleFontChange}\n                              label=\"Font\"\n                              style={{\n                                backgroundColor: \"#1A354E\",\n                              }}\n                            >\n                              <MenuItem value=\"\">\n                                <em>Select form</em>\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily:\n                                    \"Comic Sans MS, Comic Sans, cursive\",\n                                }}\n                                value={\"Comic Sans MS, Comic Sans, cursive\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily:\n                                    \"Brush Script MT, Brush Script Std, cursive\",\n                                }}\n                                value={\n                                  \"Brush Script MT, Brush Script Std, cursive\"\n                                }\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"Trattatello, fantasy\",\n                                }}\n                                value={\"Trattatello, fantasy\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"Jazz LET, fantasy\",\n                                }}\n                                value={\"Jazz LET, fantasy\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"Courier New, monospace\",\n                                }}\n                                value={\"Courier New, monospace\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"OCR A Std, monospace\",\n                                }}\n                                value={\"OCR A Std, monospace\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                              <MenuItem\n                                style={{\n                                  fontFamily: \"cursive\",\n                                }}\n                                value={\"cursive\"}\n                              >\n                                Happy Scribble Day\n                              </MenuItem>\n                            </Select>\n                          </FormControl>\n                        )}\n                        <Button\n                          variant=\"contained\"\n                          onClick={() => {\n                            if (isFixed) {\n                              if (!userdata) {\n                                setOpenSnackbar(true);\n                                setMsgSnackbar(\"Login first to give Scribble\");\n                                setLandingPageBool(false);\n                                setEnterEmailBool(true);\n                                setTimeout(() => setOpenSnackbar(false), 6000);\n                              } else if (\n                                window.confirm(\n                                  \"You won't be able to edit again. Are you sure to continue?\"\n                                )\n                              ) {\n                                handleSendScribbleForm();\n                              }\n                            } else {\n                              setOpenSnackbar(true);\n                              setMsgSnackbar(\n                                \"Click on 'fix' below the Message on tshirt to continue...\"\n                              );\n                              setTimeout(() => setOpenSnackbar(false), 6000);\n                            }\n                          }}\n                          color=\"primary\"\n                        >\n                          {loadingBool ? (\n                            <CircularProgress\n                              size={30}\n                              style={{ color: \"white\" }}\n                            />\n                          ) : (\n                            \"Submit\"\n                          )}\n                        </Button>\n                      </div>\n                      <div\n                        style={{\n                          width: \"100%\",\n                          height: 1,\n                          margin: \"12px 0 16px\",\n                          backgroundColor: \"#ccc\",\n                        }}\n                      />\n                      <div className=\"boxWrapper\">\n                        <Button\n                          variant=\"contained\"\n                          onClick={handleMyScribbleClick}\n                          style={{ backgroundColor: \"#ED72C0\", color: \"#fff\" }}\n                        >\n                          {userdata ? \"My Scribble\" : \"Sign In\"}\n                        </Button>\n                      </div>\n                    </>\n                  )}\n                  {userDetailsBool &&\n                    userdata &&\n                    (loadingBool ? (\n                      <CircularProgress />\n                    ) : (\n                      <>\n                        <div className=\"detailWrapper\">\n                          <label>{userdata.name}</label>\n                          <label>{userdata.email}</label>\n                          <label>{userdata.university}</label>\n                        </div>\n                        <div className=\"detailWrapper\">\n                          <label>Scribbles Messages Received</label>\n                          <div\n                            style={{\n                              width: \"100%\",\n                              height: 1,\n                              margin: \"12px 0 16px\",\n                              backgroundColor: \"#999\",\n                            }}\n                          />\n                          <div\n                            style={{\n                              overflowY: \"scroll\",\n                              maxHeight: \"200px\",\n                            }}\n                          >\n                            {scribbleList.length > 0 ? (\n                              scribbleList.map((scribble) => (\n                                <div\n                                  key={scribble._id}\n                                  style={{\n                                    fontSize: \"14px\",\n                                  }}\n                                >\n                                  <CardHeader\n                                    avatar={\n                                      <Avatar\n                                        aria-label=\"recipe\"\n                                        className={classes.avatar}\n                                        src={scribble.sendByAvatar}\n                                      ></Avatar>\n                                    }\n                                    title={scribble.sendByName}\n                                    subheader={scribble.message}\n                                  />\n                                  <div\n                                    style={{\n                                      width: \"100%\",\n                                      height: 1,\n                                      margin: \"12px 0 16px\",\n                                      backgroundColor: \"#555\",\n                                    }}\n                                  />\n                                </div>\n                              ))\n                            ) : (\n                              <p style={{ color: \"rgba(255,255,255,0.5)\" }}>\n                                You didn't received any scribble yet!\n                                <br /> Invite your friends to write scribbles\n                                for you.\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"part\">\n                          <a href={image}>\n                            <Button\n                              variant=\"contained\"\n                              onClick={() => {\n                                navigator.clipboard.writeText(\n                                  \"Hey dear friend, Lets Celebrate Scribble Day 2021 virtullay together | Write a Scribble Message for me || www.thirsty-goldwasser-7273c9.netlify.app/\"\n                                );\n                                setOpenSnackbar(true);\n                                setMsgSnackbar(\n                                  \"Copied text to share on Instagram\"\n                                );\n                                setTimeout(() => setOpenSnackbar(false), 1000);\n                              }}\n                              style={{\n                                backgroundColor: \"#8A374A\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-instagram\"}></span>\n                            </Button>\n                          </a>\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://www.linkedin.com/shareArticle?url=www.thirsty-goldwasser-7273c9.netlify.app/%20&title=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20\"\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#2E73AD\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-linkedin\"}></span>\n                            </Button>\n                          </a>\n                          <Button\n                            variant=\"contained\"\n                            style={{\n                              backgroundColor: \"#4095ED\",\n                              color: \"#fff\",\n                            }}\n                            onClick={() => {\n                              window.open(\n                                \"https://www.facebook.com/sharer/sharer.php?u=https%3A//thirsty-goldwasser-7273c9.netlify.app\"\n                              );\n                              return false;\n                            }}\n                          >\n                            <span className={\"fa fa-facebook\"}></span>\n                          </Button>\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={\n                              \"https://twitter.com/intent/tweet?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%0A%0A%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%0A%0AWrite%20a%20Scribble%20for%20me%20%0A%0Ahttps%3A//thirsty-goldwasser-7273c9.netlify.app/u/\" +\n                              userdata.userId +\n                              \"%20%0A%0A%23scribbleday2021%20\"\n                            }\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#05ABFF\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-twitter\"}></span>\n                            </Button>\n                          </a>\n                          <a\n                            href=\"https://web.whatsapp.com/send?text=Pandemic%20could%20ruin%20our%20studies%20But%20not%20our%20last%20day%20of%20college%20%7C%20%20%F0%9F%91%95%20Happy%20Scribble%20Day%202021%20%F0%9F%A5%B3%20%7C%20%20%20Write%20a%20Scribble%20for%20me%20%20%20https%3A//thirsty-goldwasser-7273c9.netlify.app/%20%20%20#scribbleday2021%20%20\"\n                            data-action=\"share/whatsapp/share\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                backgroundColor: \"#0DC143\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <span className={\"fa fa-whatsapp\"}></span>\n                            </Button>\n                          </a>\n                        </div>\n                      </>\n                    ))}\n                  {insertVerifyCode && (\n                    <>\n                      <FormControl\n                        className={\"col-12 col-sm-8 col-md-9 form\"}\n                        style={{ padding: 20 }}\n                      >\n                        <Input\n                          style={{ color: \"white\" }}\n                          id=\"input-with-icon-adornment\"\n                          placeholder={\n                            enterPinOrCodeBool === \"pin\"\n                              ? \"Enter PIN\"\n                              : \"Verification Code\"\n                          }\n                          variant=\"filled\"\n                          onChange={(e) => setPinCodeToVerify(e.target.value)}\n                          startAdornment={\n                            <InputAdornment position=\"start\">\n                              <VpnKeyIcon />\n                            </InputAdornment>\n                          }\n                          endAdornment={\n                            <InputAdornment\n                              position=\"end\"\n                              onClick={\n                                enterPinOrCodeBool === \"pin\"\n                                  ? handleVerifyPin\n                                  : handleVerifyCode\n                              }\n                            >\n                              {loadingBool ? (\n                                <CircularProgress\n                                  size={30}\n                                  style={{ color: \"white\" }}\n                                />\n                              ) : (\n                                <SendIcon style={{ cursor: \"pointer\" }} />\n                              )}\n                            </InputAdornment>\n                          }\n                        />\n                      </FormControl>\n                    </>\n                  )}\n                  {askedForSendVerificationCode && (\n                    <div className=\"boxWrapper\">\n                      <Button\n                        variant=\"contained\"\n                        onClick={handleSendVerificationCode}\n                      >\n                        {activateLoadingIn === \"send-verification-code\" ? (\n                          <CircularProgress size={25} />\n                        ) : (\n                          \"Send Verification Code\"\n                        )}\n                      </Button>\n                      <span class=\"previewText\">to {inputEmail}</span>\n                    </div>\n                  )}\n                  {enterEmailBool && (\n                    <FormControl\n                      className={\"col-12 col-sm-8 col-md-9 form\"}\n                      style={{ padding: 20 }}\n                    >\n                      <Input\n                        id=\"input-with-icon-adornment\"\n                        style={{ color: \"white\" }}\n                        placeholder=\"Email\"\n                        variant=\"filled\"\n                        onChange={(e) => setInputEmail(e.target.value)}\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <AccountCircle />\n                          </InputAdornment>\n                        }\n                        endAdornment={\n                          <InputAdornment\n                            position=\"end\"\n                            onClick={checkUserAccountWithEmail}\n                          >\n                            {loadingBool ? (\n                              <CircularProgress\n                                size={30}\n                                style={{ color: \"white\" }}\n                              />\n                            ) : (\n                              <SendIcon style={{ cursor: \"pointer\" }} />\n                            )}\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  )}\n                  {signupFormBool && !userdata && (\n                    <>\n                      <div className=\"col-12 col-sm-11 col-lg-9 row\">\n                        <FormControl\n                          variant=\"filled\"\n                          className={classes.formControl}\n                          style={{ width: \"100%\", margin: \"12px 0\" }}\n                        >\n                          <InputLabel\n                            id=\"demo-simple-select-filled-label\"\n                            style={{ color: \"white\" }}\n                          >\n                            Select University\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-filled-label\"\n                            id=\"demo-simple-select-filled\"\n                            name=\"university\"\n                            value={signupFormInputs.university}\n                            onChange={handleInputChange}\n                          >\n                            {universityList.length > 0 &&\n                              universityList.map((university) => (\n                                <MenuItem value={university.name}>\n                                  {university.name}\n                                </MenuItem>\n                              ))}\n                            <MenuItem\n                              value={\"other\"}\n                              onClick={() => {\n                                setNewUniversityBool(true);\n                                setSignUpformBool(false);\n                                setNewUniversityOnSuccess(\"signup\");\n                              }}\n                            >\n                              Other\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n                        <Form.Control\n                          className={\"col-12 form\"}\n                          type=\"text\"\n                          placeholder=\"Your fullname\"\n                          maxLength={250}\n                          name=\"name\"\n                          value={signupFormInputs.name}\n                          onChange={handleInputChange}\n                          required\n                        />\n\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">Gender</FormLabel>\n                          <RadioGroup\n                            aria-label=\"gender\"\n                            name=\"gender\"\n                            value={signupFormInputs.gender}\n                            onChange={handleInputChange}\n                            style={{ flexDirection: \"row\" }}\n                          >\n                            <FormControlLabel\n                              value=\"female\"\n                              control={<Radio />}\n                              label=\"Female\"\n                            />\n                            <FormControlLabel\n                              value=\"male\"\n                              control={<Radio />}\n                              label=\"Male\"\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                        <Form.Control\n                          className={\"col-12 form\"}\n                          type=\"text\"\n                          placeholder=\"Enter a 4 digit's PIN\"\n                          name=\"pin\"\n                          value={signupFormInputs.pin}\n                          onChange={handleInputChange}\n                          maxLength={4}\n                          required\n                        />\n\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          hidden=\"true\"\n                          onChange={(e) => setAvatar(e.target.files[0])}\n                          id=\"avatar\"\n                        />\n                        <label for=\"avatar\" style={{ width: \"100%\" }}>\n                          <div\n                            className=\"file-upload-control\"\n                            style={{\n                              background: \"#e52e71\",\n                              padding: \"0.5rem 2rem\",\n                              borderRadius: 8,\n                              display: \"inline-flex\",\n                              alignItems: \"center\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            <CloudUploadIcon />\n                            <span style={{ marginLeft: 12 }}>\n                              upload profile picture\n                            </span>\n                          </div>\n                        </label>\n                        <Button\n                          variant=\"contained\"\n                          onClick={handleSubmitSignupForm}\n                        >\n                          {loadingBool ? (\n                            <CircularProgress style={{ margin: \"9px auto\" }} />\n                          ) : (\n                            \"Submit\"\n                          )}\n                        </Button>\n                      </div>\n                    </>\n                  )}\n                  {newUniversityBool && (\n                    <>\n                      <Form.Control\n                        className={\"col-12 form\"}\n                        type=\"text\"\n                        placeholder=\"Univesity Name\"\n                        name=\"newuniversity\"\n                        maxLength={250}\n                        value={newUnivesityName}\n                        onChange={(e) => setNewUniversityName(e.target.value)}\n                        required\n                      />\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        hidden=\"true\"\n                        onChange={(e) =>\n                          setNewUniversityLogo(e.target.files[0])\n                        }\n                        id=\"newuniversitylogo\"\n                      />\n                      <label for=\"newuniversitylogo\" style={{ width: \"100%\" }}>\n                        <div\n                          className=\"file-upload-control\"\n                          style={{\n                            background: \"#e52e71\",\n                            padding: \"0.5rem 2rem\",\n                            borderRadius: 8,\n                            display: \"inline-flex\",\n                            alignItems: \"center\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          <CloudUploadIcon />\n                          <span style={{ marginLeft: 12 }}>Upload Logo</span>\n                        </div>\n                      </label>\n\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleNewUniversityForm}\n                      >\n                        {loadingBool ? (\n                          <CircularProgress\n                            size={30}\n                            style={{ color: \"white\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </Button>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            {}\n            <div\n              style={{ textAlign: \"center\", marginBottom: \"1rem\" }}\n              className=\"d-block d-sm-none\"\n            >\n              <Button\n                variant=\"contained\"\n                // onClick={() => handleDownloadOpen()}\n                style={{\n                  backgroundColor: \"#0A0\",\n                  marginInline: 10,\n                  color: \"#fff\",\n                }}\n              >\n                <span className={\"fa fa-download\"}></span>\n                Download\n              </Button>\n              {/* <DownloadForm\n                insertVerifyCode={insertVerifyCode}\n                selectedValue={downloadInput}\n                open={openDownloadDialog}\n                onClose={handleDownloadClose}\n              /> */}\n              <Button\n                variant=\"contained\"\n                onClick={() => handleDownloadOpen()}\n                style={{\n                  backgroundColor: \"#05ABFF\",\n                  marginInline: 10,\n                  color: \"#fff\",\n                }}\n              >\n                <span className={\"fa fa-user\"}></span>\n                Preview\n              </Button>\n              <PreviewDialog\n                open={openPreviewDialog}\n                onClose={handlePreviewClose}\n              />\n            </div>\n            <h3\n              className={\"center text-center\"}\n              style={{\n                color: \"#FF8AE2\",\n                fontFamily: \"sans\",\n                textAlign: \"left\",\n              }}\n            >\n              A Day worth Remembering\n            </h3>\n            <div className=\"details-of-site\">\n              <div className=\"part\">\n                <div>\n                  <a\n                    href={\"https://rzp.io/l/Up18AjAWH\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => handleDownloadOpen(\"download\")}\n                      style={{ backgroundColor: \"#0A0\", color: \"#fff\" }}\n                    >\n                      <span className={\"fa fa-shopping-cart\"}></span>\n                      Place Order\n                    </Button>\n                  </a>\n                </div>\n              </div>\n\n              <div className=\"part\">\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleInviteOpen}\n                    style={{ backgroundColor: \"#05ABFF\", color: \"#fff\" }}\n                  >\n                    <span className={\"fa fa-share\"}></span>\n                    Invite Friend\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <footer\n              className={\"center\"}\n              style={{\n                textAlign: \"center\",\n                width: \"70%\",\n                transform: \"translate(20%, 0%)\",\n              }}\n            >\n              <p>\n                Spread the happiness among your friends, juniors, seniors and\n                connections to celebrate this year's\n                <a\n                  href=\"https://hacktoberfest.digitalocean.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Scribble Day\n                </a>\n              </p>\n            </footer>\n          </div>\n          <div className={\"column\"}>\n            {/* RIGHT COLUMN */}\n\n            <div className={\"scribble-image1\"} ref={imageWrap}>\n              {tshirtSide === \"front\" ? (\n                <Image\n                  alt=\"tshirt demo\"\n                  src={require(\"../../assets/malefront.png\")}\n                  className={\"male-front\"}\n                  ref={imageRef}\n                />\n              ) : (\n                <Image\n                  alt=\"tshirt demo\"\n                  src={require(\"../../assets/maleback.png\")}\n                  className={\"male-front\"}\n                  ref={imageRef}\n                />\n              )}\n              <div className={\"university-logo\"}>\n                <Avatar\n                  style={{\n                    width: getFontSize(60, imageRefWidth),\n                    height: getFontSize(60, imageRefWidth),\n                  }}\n                  alt=\"U\"\n                  src={\n                    universityLogo\n                      ? universityLogo\n                      : require(\"../../assets/hack.jpg\")\n                  }\n                />\n              </div>\n              {scribbleList\n                .filter((item) => item.side === tshirtSide)\n                .map((scribble) => (\n                  <p\n                    key={scribble._id}\n                    style={{\n                      textAlign: \"center\",\n                      rotate: scribble.angle + \"deg\",\n                      color: scribble.colorCode,\n                      fontSize: getFontSize(scribble.fontSize, imageRefWidth),\n                      fontFamily: scribble.fontStyle,\n                      position: \"absolute\",\n                      // transform: `scale(${(imageRefWidth/616)+0.204})`,\n                      top: `${scribble.dimensions.top}%`,\n                      left: `${scribble.dimensions.left}%`,\n                      width: \"25%\",\n                    }}\n                  >\n                    {scribble.message}\n                    <span>\n                      <br />~ {scribble.sendByName}\n                    </span>\n                  </p>\n                ))}\n              <Draggable\n                bounds=\"parent\"\n                disabled={dragBool}\n                onStart={handleOnDragStart}\n              >\n                <div\n                  className={\"scribble-message1\"}\n                  style={\n                    !dragBool && !userDetailsBool\n                      ? {\n                          border: \"1px solid rgb(233, 233, 233)\",\n                        }\n                      : {\n                          border: \"none\",\n                          backgroundColor: \"transparent\",\n                        }\n                  }\n                >\n                  {enterFriendName ? (\n                    <>\n                      <div\n                        style={{\n                          rotate: rotateValue + \"deg\",\n                          color: messageColor,\n                          fontSize: getFontSize(messageFont, imageRefWidth),\n                          fontFamily: fontFam,\n                          cursor: dragBool ? \"default\" : \"move\",\n                        }}\n                      >\n                        <p ref={messageRef}>\n                          {message ? message : \"Scribble Message\"}\n                          <span>\n                            <br />~ {userdata ? userdata.name : \"Your name\"}\n                          </span>\n                        </p>\n                      </div>\n                      {!dragBool && (\n                        <>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => handleFixClick()}\n                          >\n                            fix\n                          </div>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => setMessageFont(\".4em\")}\n                          >\n                            1\n                          </div>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => setMessageFont(\".5em\")}\n                          >\n                            2\n                          </div>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => setMessageFont(\".6em\")}\n                          >\n                            3\n                          </div>\n                          <div\n                            className={\"actions\"}\n                            onClick={() => setMessageFont(\".7em\")}\n                          >\n                            4\n                          </div>\n                        </>\n                      )}\n                    </>\n                  ) : userDetailsBool ? (\n                    <></>\n                  ) : (\n                    <div\n                      style={{\n                        rotate: rotateValue + \"deg\",\n                        color: messageColor,\n                        fontSize: messageFont,\n                        cursor: dragBool ? \"default\" : \"move\",\n                      }}\n                    >\n                      <p>Select a Friend to write a Scribble message</p>\n                    </div>\n                  )}\n                </div>\n              </Draggable>\n            </div>\n\n            {/* remove draggable from here to above */}\n          </div>\n        </div>\n      </div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        autoHideDuration={1000}\n        message={msgSnackbar}\n      />\n    </div>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./components/homepage/home\";\n\nconst Theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={Theme}>\n      <div className=\"App\">\n        <Router>\n          <Route exact component={Home} path=\"/u/:userId\" />\n          <Route exact component={Home} path=\"/\" />\n        </Router>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}